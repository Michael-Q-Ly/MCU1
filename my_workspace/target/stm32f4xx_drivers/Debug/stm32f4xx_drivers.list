
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000007fc  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009a8  080009b0  000109b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009a8  080009a8  000109b0  2**0
                  CONTENTS
  4 .ARM          00000000  080009a8  080009a8  000109b0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009a8  080009b0  000109b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009a8  080009a8  000109a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009ac  080009ac  000109ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000109b0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000109b0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000990  00000000  00000000  000109da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000242  00000000  00000000  0001136a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  000115b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000a8  00000000  00000000  00011668  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000a96  00000000  00000000  00011710  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000052f  00000000  00000000  000121a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000126d5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  00012728  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08000990 	.word	0x08000990

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	08000990 	.word	0x08000990

080001ec <GPIO_PeriClockControl>:
 * 
 * @return              none
 * 
 * @note                none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi) {
 80001ec:	b480      	push	{r7}
 80001ee:	b083      	sub	sp, #12
 80001f0:	af00      	add	r7, sp, #0
 80001f2:	6078      	str	r0, [r7, #4]
 80001f4:	460b      	mov	r3, r1
 80001f6:	70fb      	strb	r3, [r7, #3]
    // If enabled,
    if (EnorDi == ENABLE) {
 80001f8:	78fb      	ldrb	r3, [r7, #3]
 80001fa:	2b01      	cmp	r3, #1
 80001fc:	f040 8095 	bne.w	800032a <GPIO_PeriClockControl+0x13e>
        // Check which GPIO and enable
        switch ((unsigned long int) pGPIOx) {
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	4a94      	ldr	r2, [pc, #592]	; (8000454 <GPIO_PeriClockControl+0x268>)
 8000204:	4293      	cmp	r3, r2
 8000206:	f000 8089 	beq.w	800031c <GPIO_PeriClockControl+0x130>
 800020a:	4a92      	ldr	r2, [pc, #584]	; (8000454 <GPIO_PeriClockControl+0x268>)
 800020c:	4293      	cmp	r3, r2
 800020e:	f200 8119 	bhi.w	8000444 <GPIO_PeriClockControl+0x258>
 8000212:	4a91      	ldr	r2, [pc, #580]	; (8000458 <GPIO_PeriClockControl+0x26c>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d07a      	beq.n	800030e <GPIO_PeriClockControl+0x122>
 8000218:	4a8f      	ldr	r2, [pc, #572]	; (8000458 <GPIO_PeriClockControl+0x26c>)
 800021a:	4293      	cmp	r3, r2
 800021c:	f200 8112 	bhi.w	8000444 <GPIO_PeriClockControl+0x258>
 8000220:	4a8e      	ldr	r2, [pc, #568]	; (800045c <GPIO_PeriClockControl+0x270>)
 8000222:	4293      	cmp	r3, r2
 8000224:	d06c      	beq.n	8000300 <GPIO_PeriClockControl+0x114>
 8000226:	4a8d      	ldr	r2, [pc, #564]	; (800045c <GPIO_PeriClockControl+0x270>)
 8000228:	4293      	cmp	r3, r2
 800022a:	f200 810b 	bhi.w	8000444 <GPIO_PeriClockControl+0x258>
 800022e:	4a8c      	ldr	r2, [pc, #560]	; (8000460 <GPIO_PeriClockControl+0x274>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d05e      	beq.n	80002f2 <GPIO_PeriClockControl+0x106>
 8000234:	4a8a      	ldr	r2, [pc, #552]	; (8000460 <GPIO_PeriClockControl+0x274>)
 8000236:	4293      	cmp	r3, r2
 8000238:	f200 8104 	bhi.w	8000444 <GPIO_PeriClockControl+0x258>
 800023c:	4a89      	ldr	r2, [pc, #548]	; (8000464 <GPIO_PeriClockControl+0x278>)
 800023e:	4293      	cmp	r3, r2
 8000240:	d050      	beq.n	80002e4 <GPIO_PeriClockControl+0xf8>
 8000242:	4a88      	ldr	r2, [pc, #544]	; (8000464 <GPIO_PeriClockControl+0x278>)
 8000244:	4293      	cmp	r3, r2
 8000246:	f200 80fd 	bhi.w	8000444 <GPIO_PeriClockControl+0x258>
 800024a:	4a87      	ldr	r2, [pc, #540]	; (8000468 <GPIO_PeriClockControl+0x27c>)
 800024c:	4293      	cmp	r3, r2
 800024e:	d042      	beq.n	80002d6 <GPIO_PeriClockControl+0xea>
 8000250:	4a85      	ldr	r2, [pc, #532]	; (8000468 <GPIO_PeriClockControl+0x27c>)
 8000252:	4293      	cmp	r3, r2
 8000254:	f200 80f6 	bhi.w	8000444 <GPIO_PeriClockControl+0x258>
 8000258:	4a84      	ldr	r2, [pc, #528]	; (800046c <GPIO_PeriClockControl+0x280>)
 800025a:	4293      	cmp	r3, r2
 800025c:	d034      	beq.n	80002c8 <GPIO_PeriClockControl+0xdc>
 800025e:	4a83      	ldr	r2, [pc, #524]	; (800046c <GPIO_PeriClockControl+0x280>)
 8000260:	4293      	cmp	r3, r2
 8000262:	f200 80ef 	bhi.w	8000444 <GPIO_PeriClockControl+0x258>
 8000266:	4a82      	ldr	r2, [pc, #520]	; (8000470 <GPIO_PeriClockControl+0x284>)
 8000268:	4293      	cmp	r3, r2
 800026a:	d026      	beq.n	80002ba <GPIO_PeriClockControl+0xce>
 800026c:	4a80      	ldr	r2, [pc, #512]	; (8000470 <GPIO_PeriClockControl+0x284>)
 800026e:	4293      	cmp	r3, r2
 8000270:	f200 80e8 	bhi.w	8000444 <GPIO_PeriClockControl+0x258>
 8000274:	4a7f      	ldr	r2, [pc, #508]	; (8000474 <GPIO_PeriClockControl+0x288>)
 8000276:	4293      	cmp	r3, r2
 8000278:	d018      	beq.n	80002ac <GPIO_PeriClockControl+0xc0>
 800027a:	4a7e      	ldr	r2, [pc, #504]	; (8000474 <GPIO_PeriClockControl+0x288>)
 800027c:	4293      	cmp	r3, r2
 800027e:	f200 80e1 	bhi.w	8000444 <GPIO_PeriClockControl+0x258>
 8000282:	4a7d      	ldr	r2, [pc, #500]	; (8000478 <GPIO_PeriClockControl+0x28c>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d003      	beq.n	8000290 <GPIO_PeriClockControl+0xa4>
 8000288:	4a7c      	ldr	r2, [pc, #496]	; (800047c <GPIO_PeriClockControl+0x290>)
 800028a:	4293      	cmp	r3, r2
 800028c:	d007      	beq.n	800029e <GPIO_PeriClockControl+0xb2>
                case GPIOG_BASE_ADDR:       GPIOG_PCLK_EN() ;       break ;
                case GPIOH_BASE_ADDR:       GPIOH_PCLK_EN() ;       break ;
                case GPIOI_BASE_ADDR:       GPIOI_PCLK_EN() ;       break ;
                case GPIOJ_BASE_ADDR:       GPIOJ_PCLK_EN() ;       break ;
                case GPIOK_BASE_ADDR:       GPIOK_PCLK_EN() ;       break ;
                default:                    return ;                break ;         // TODO: return error or cause a user fault
 800028e:	e0d9      	b.n	8000444 <GPIO_PeriClockControl+0x258>
                case GPIOA_BASE_ADDR:       GPIOA_PCLK_EN() ;       break ;
 8000290:	4b7b      	ldr	r3, [pc, #492]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000292:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000294:	4a7a      	ldr	r2, [pc, #488]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000296:	f043 0301 	orr.w	r3, r3, #1
 800029a:	6313      	str	r3, [r2, #48]	; 0x30
 800029c:	e0d5      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOB_BASE_ADDR:       GPIOB_PCLK_EN() ;       break ;
 800029e:	4b78      	ldr	r3, [pc, #480]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a2:	4a77      	ldr	r2, [pc, #476]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002a4:	f043 0302 	orr.w	r3, r3, #2
 80002a8:	6313      	str	r3, [r2, #48]	; 0x30
 80002aa:	e0ce      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOC_BASE_ADDR:       GPIOC_PCLK_EN() ;       break ;
 80002ac:	4b74      	ldr	r3, [pc, #464]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b0:	4a73      	ldr	r2, [pc, #460]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002b2:	f043 0304 	orr.w	r3, r3, #4
 80002b6:	6313      	str	r3, [r2, #48]	; 0x30
 80002b8:	e0c7      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOD_BASE_ADDR:       GPIOD_PCLK_EN() ;       break ;
 80002ba:	4b71      	ldr	r3, [pc, #452]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002be:	4a70      	ldr	r2, [pc, #448]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002c0:	f043 0308 	orr.w	r3, r3, #8
 80002c4:	6313      	str	r3, [r2, #48]	; 0x30
 80002c6:	e0c0      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOE_BASE_ADDR:       GPIOE_PCLK_EN() ;       break ;
 80002c8:	4b6d      	ldr	r3, [pc, #436]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a6c      	ldr	r2, [pc, #432]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002ce:	f043 0310 	orr.w	r3, r3, #16
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
 80002d4:	e0b9      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOF_BASE_ADDR:       GPIOF_PCLK_EN() ;       break ;
 80002d6:	4b6a      	ldr	r3, [pc, #424]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002da:	4a69      	ldr	r2, [pc, #420]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002dc:	f043 0320 	orr.w	r3, r3, #32
 80002e0:	6313      	str	r3, [r2, #48]	; 0x30
 80002e2:	e0b2      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOG_BASE_ADDR:       GPIOG_PCLK_EN() ;       break ;
 80002e4:	4b66      	ldr	r3, [pc, #408]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e8:	4a65      	ldr	r2, [pc, #404]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002ee:	6313      	str	r3, [r2, #48]	; 0x30
 80002f0:	e0ab      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOH_BASE_ADDR:       GPIOH_PCLK_EN() ;       break ;
 80002f2:	4b63      	ldr	r3, [pc, #396]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f6:	4a62      	ldr	r2, [pc, #392]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80002f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002fc:	6313      	str	r3, [r2, #48]	; 0x30
 80002fe:	e0a4      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOI_BASE_ADDR:       GPIOI_PCLK_EN() ;       break ;
 8000300:	4b5f      	ldr	r3, [pc, #380]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000304:	4a5e      	ldr	r2, [pc, #376]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000306:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800030a:	6313      	str	r3, [r2, #48]	; 0x30
 800030c:	e09d      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOJ_BASE_ADDR:       GPIOJ_PCLK_EN() ;       break ;
 800030e:	4b5c      	ldr	r3, [pc, #368]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000312:	4a5b      	ldr	r2, [pc, #364]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000314:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000318:	6313      	str	r3, [r2, #48]	; 0x30
 800031a:	e096      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOK_BASE_ADDR:       GPIOK_PCLK_EN() ;       break ;
 800031c:	4b58      	ldr	r3, [pc, #352]	; (8000480 <GPIO_PeriClockControl+0x294>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a57      	ldr	r2, [pc, #348]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000322:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
 8000328:	e08f      	b.n	800044a <GPIO_PeriClockControl+0x25e>
        }
    }
    else {
        // Disable the GPIO otherwise
        switch ((unsigned long int) pGPIOx) {
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a49      	ldr	r2, [pc, #292]	; (8000454 <GPIO_PeriClockControl+0x268>)
 800032e:	4293      	cmp	r3, r2
 8000330:	f000 8081 	beq.w	8000436 <GPIO_PeriClockControl+0x24a>
 8000334:	4a47      	ldr	r2, [pc, #284]	; (8000454 <GPIO_PeriClockControl+0x268>)
 8000336:	4293      	cmp	r3, r2
 8000338:	f200 8086 	bhi.w	8000448 <GPIO_PeriClockControl+0x25c>
 800033c:	4a46      	ldr	r2, [pc, #280]	; (8000458 <GPIO_PeriClockControl+0x26c>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d072      	beq.n	8000428 <GPIO_PeriClockControl+0x23c>
 8000342:	4a45      	ldr	r2, [pc, #276]	; (8000458 <GPIO_PeriClockControl+0x26c>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d87f      	bhi.n	8000448 <GPIO_PeriClockControl+0x25c>
 8000348:	4a44      	ldr	r2, [pc, #272]	; (800045c <GPIO_PeriClockControl+0x270>)
 800034a:	4293      	cmp	r3, r2
 800034c:	d065      	beq.n	800041a <GPIO_PeriClockControl+0x22e>
 800034e:	4a43      	ldr	r2, [pc, #268]	; (800045c <GPIO_PeriClockControl+0x270>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d879      	bhi.n	8000448 <GPIO_PeriClockControl+0x25c>
 8000354:	4a42      	ldr	r2, [pc, #264]	; (8000460 <GPIO_PeriClockControl+0x274>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d058      	beq.n	800040c <GPIO_PeriClockControl+0x220>
 800035a:	4a41      	ldr	r2, [pc, #260]	; (8000460 <GPIO_PeriClockControl+0x274>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d873      	bhi.n	8000448 <GPIO_PeriClockControl+0x25c>
 8000360:	4a40      	ldr	r2, [pc, #256]	; (8000464 <GPIO_PeriClockControl+0x278>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d04b      	beq.n	80003fe <GPIO_PeriClockControl+0x212>
 8000366:	4a3f      	ldr	r2, [pc, #252]	; (8000464 <GPIO_PeriClockControl+0x278>)
 8000368:	4293      	cmp	r3, r2
 800036a:	d86d      	bhi.n	8000448 <GPIO_PeriClockControl+0x25c>
 800036c:	4a3e      	ldr	r2, [pc, #248]	; (8000468 <GPIO_PeriClockControl+0x27c>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d03e      	beq.n	80003f0 <GPIO_PeriClockControl+0x204>
 8000372:	4a3d      	ldr	r2, [pc, #244]	; (8000468 <GPIO_PeriClockControl+0x27c>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d867      	bhi.n	8000448 <GPIO_PeriClockControl+0x25c>
 8000378:	4a3c      	ldr	r2, [pc, #240]	; (800046c <GPIO_PeriClockControl+0x280>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d031      	beq.n	80003e2 <GPIO_PeriClockControl+0x1f6>
 800037e:	4a3b      	ldr	r2, [pc, #236]	; (800046c <GPIO_PeriClockControl+0x280>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d861      	bhi.n	8000448 <GPIO_PeriClockControl+0x25c>
 8000384:	4a3a      	ldr	r2, [pc, #232]	; (8000470 <GPIO_PeriClockControl+0x284>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d024      	beq.n	80003d4 <GPIO_PeriClockControl+0x1e8>
 800038a:	4a39      	ldr	r2, [pc, #228]	; (8000470 <GPIO_PeriClockControl+0x284>)
 800038c:	4293      	cmp	r3, r2
 800038e:	d85b      	bhi.n	8000448 <GPIO_PeriClockControl+0x25c>
 8000390:	4a38      	ldr	r2, [pc, #224]	; (8000474 <GPIO_PeriClockControl+0x288>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d017      	beq.n	80003c6 <GPIO_PeriClockControl+0x1da>
 8000396:	4a37      	ldr	r2, [pc, #220]	; (8000474 <GPIO_PeriClockControl+0x288>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d855      	bhi.n	8000448 <GPIO_PeriClockControl+0x25c>
 800039c:	4a36      	ldr	r2, [pc, #216]	; (8000478 <GPIO_PeriClockControl+0x28c>)
 800039e:	4293      	cmp	r3, r2
 80003a0:	d003      	beq.n	80003aa <GPIO_PeriClockControl+0x1be>
 80003a2:	4a36      	ldr	r2, [pc, #216]	; (800047c <GPIO_PeriClockControl+0x290>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d007      	beq.n	80003b8 <GPIO_PeriClockControl+0x1cc>
                case GPIOG_BASE_ADDR:       GPIOG_PCLK_DI() ;       break ;
                case GPIOH_BASE_ADDR:       GPIOH_PCLK_DI() ;       break ;
                case GPIOI_BASE_ADDR:       GPIOI_PCLK_DI() ;       break ;
                case GPIOJ_BASE_ADDR:       GPIOJ_PCLK_DI() ;       break ;
                case GPIOK_BASE_ADDR:       GPIOK_PCLK_DI() ;       break ;
                default:                    return ;                break ;         // TODO: return error or cause a user fault
 80003a8:	e04e      	b.n	8000448 <GPIO_PeriClockControl+0x25c>
                case GPIOA_BASE_ADDR:       GPIOA_PCLK_DI() ;       break ;
 80003aa:	4b35      	ldr	r3, [pc, #212]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ae:	4a34      	ldr	r2, [pc, #208]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003b0:	f023 0301 	bic.w	r3, r3, #1
 80003b4:	6313      	str	r3, [r2, #48]	; 0x30
 80003b6:	e048      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOB_BASE_ADDR:       GPIOB_PCLK_DI() ;       break ;
 80003b8:	4b31      	ldr	r3, [pc, #196]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003bc:	4a30      	ldr	r2, [pc, #192]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003be:	f023 0302 	bic.w	r3, r3, #2
 80003c2:	6313      	str	r3, [r2, #48]	; 0x30
 80003c4:	e041      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOC_BASE_ADDR:       GPIOC_PCLK_DI() ;       break ;
 80003c6:	4b2e      	ldr	r3, [pc, #184]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ca:	4a2d      	ldr	r2, [pc, #180]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003cc:	f023 0304 	bic.w	r3, r3, #4
 80003d0:	6313      	str	r3, [r2, #48]	; 0x30
 80003d2:	e03a      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOD_BASE_ADDR:       GPIOD_PCLK_DI() ;       break ;
 80003d4:	4b2a      	ldr	r3, [pc, #168]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d8:	4a29      	ldr	r2, [pc, #164]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003da:	f023 0308 	bic.w	r3, r3, #8
 80003de:	6313      	str	r3, [r2, #48]	; 0x30
 80003e0:	e033      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOE_BASE_ADDR:       GPIOE_PCLK_DI() ;       break ;
 80003e2:	4b27      	ldr	r3, [pc, #156]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a26      	ldr	r2, [pc, #152]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003e8:	f023 0310 	bic.w	r3, r3, #16
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
 80003ee:	e02c      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOF_BASE_ADDR:       GPIOF_PCLK_DI() ;       break ;
 80003f0:	4b23      	ldr	r3, [pc, #140]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f4:	4a22      	ldr	r2, [pc, #136]	; (8000480 <GPIO_PeriClockControl+0x294>)
 80003f6:	f023 0320 	bic.w	r3, r3, #32
 80003fa:	6313      	str	r3, [r2, #48]	; 0x30
 80003fc:	e025      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOG_BASE_ADDR:       GPIOG_PCLK_DI() ;       break ;
 80003fe:	4b20      	ldr	r3, [pc, #128]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000402:	4a1f      	ldr	r2, [pc, #124]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000404:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000408:	6313      	str	r3, [r2, #48]	; 0x30
 800040a:	e01e      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOH_BASE_ADDR:       GPIOH_PCLK_DI() ;       break ;
 800040c:	4b1c      	ldr	r3, [pc, #112]	; (8000480 <GPIO_PeriClockControl+0x294>)
 800040e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000410:	4a1b      	ldr	r2, [pc, #108]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000412:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000416:	6313      	str	r3, [r2, #48]	; 0x30
 8000418:	e017      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOI_BASE_ADDR:       GPIOI_PCLK_DI() ;       break ;
 800041a:	4b19      	ldr	r3, [pc, #100]	; (8000480 <GPIO_PeriClockControl+0x294>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041e:	4a18      	ldr	r2, [pc, #96]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000420:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000424:	6313      	str	r3, [r2, #48]	; 0x30
 8000426:	e010      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOJ_BASE_ADDR:       GPIOJ_PCLK_DI() ;       break ;
 8000428:	4b15      	ldr	r3, [pc, #84]	; (8000480 <GPIO_PeriClockControl+0x294>)
 800042a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042c:	4a14      	ldr	r2, [pc, #80]	; (8000480 <GPIO_PeriClockControl+0x294>)
 800042e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000432:	6313      	str	r3, [r2, #48]	; 0x30
 8000434:	e009      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                case GPIOK_BASE_ADDR:       GPIOK_PCLK_DI() ;       break ;
 8000436:	4b12      	ldr	r3, [pc, #72]	; (8000480 <GPIO_PeriClockControl+0x294>)
 8000438:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043a:	4a11      	ldr	r2, [pc, #68]	; (8000480 <GPIO_PeriClockControl+0x294>)
 800043c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000440:	6313      	str	r3, [r2, #48]	; 0x30
 8000442:	e002      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                default:                    return ;                break ;         // TODO: return error or cause a user fault
 8000444:	bf00      	nop
 8000446:	e000      	b.n	800044a <GPIO_PeriClockControl+0x25e>
                default:                    return ;                break ;         // TODO: return error or cause a user fault
 8000448:	bf00      	nop
        }
    }
}
 800044a:	370c      	adds	r7, #12
 800044c:	46bd      	mov	sp, r7
 800044e:	bc80      	pop	{r7}
 8000450:	4770      	bx	lr
 8000452:	bf00      	nop
 8000454:	40022800 	.word	0x40022800
 8000458:	40022400 	.word	0x40022400
 800045c:	40022000 	.word	0x40022000
 8000460:	40021c00 	.word	0x40021c00
 8000464:	40021800 	.word	0x40021800
 8000468:	40021400 	.word	0x40021400
 800046c:	40021000 	.word	0x40021000
 8000470:	40020c00 	.word	0x40020c00
 8000474:	40020800 	.word	0x40020800
 8000478:	40020000 	.word	0x40020000
 800047c:	40020400 	.word	0x40020400
 8000480:	40023800 	.word	0x40023800

08000484 <GPIO_Init>:
 *                                          by that amount. This gives us a left shift of 8, landing us
 *                                          on bit 8 of the high reg, which is the lsb of pin 10's four
 *                                          bit fields!
 *                                      
 */
void GPIO_Init(GPIO_Handle_t *pGPIO_Handle) {
 8000484:	b480      	push	{r7}
 8000486:	b087      	sub	sp, #28
 8000488:	af00      	add	r7, sp, #0
 800048a:	6078      	str	r0, [r7, #4]
    // 1. Configure the mode of GPIO pin
    uint32_t temp = 0 ;                                                                                             // Temporary register
 800048c:	2300      	movs	r3, #0
 800048e:	617b      	str	r3, [r7, #20]
    if (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	795b      	ldrb	r3, [r3, #5]
 8000494:	2b03      	cmp	r3, #3
 8000496:	d81f      	bhi.n	80004d8 <GPIO_Init+0x54>
        // The non-interrupt mode
        temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)) ;
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	795b      	ldrb	r3, [r3, #5]
 800049c:	461a      	mov	r2, r3
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	791b      	ldrb	r3, [r3, #4]
 80004a2:	005b      	lsls	r3, r3, #1
 80004a4:	fa02 f303 	lsl.w	r3, r2, r3
 80004a8:	617b      	str	r3, [r7, #20]
        pGPIO_Handle->pGPIOx->MODER &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber) ;                      // Clear 2 bit fields
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	681a      	ldr	r2, [r3, #0]
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	791b      	ldrb	r3, [r3, #4]
 80004b4:	4619      	mov	r1, r3
 80004b6:	2303      	movs	r3, #3
 80004b8:	408b      	lsls	r3, r1
 80004ba:	43db      	mvns	r3, r3
 80004bc:	4619      	mov	r1, r3
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	400a      	ands	r2, r1
 80004c4:	601a      	str	r2, [r3, #0]
        pGPIO_Handle->pGPIOx->MODER |= temp ;                                                                       // Set
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	6819      	ldr	r1, [r3, #0]
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	697a      	ldr	r2, [r7, #20]
 80004d2:	430a      	orrs	r2, r1
 80004d4:	601a      	str	r2, [r3, #0]
 80004d6:	e0ea      	b.n	80006ae <GPIO_Init+0x22a>
    }
    else {
        // Interrupt mode
        uint8_t bitFieldOffset = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber ;
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	791b      	ldrb	r3, [r3, #4]
 80004dc:	74fb      	strb	r3, [r7, #19]
        switch (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode) {
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	795b      	ldrb	r3, [r3, #5]
 80004e2:	2b06      	cmp	r3, #6
 80004e4:	d033      	beq.n	800054e <GPIO_Init+0xca>
 80004e6:	2b06      	cmp	r3, #6
 80004e8:	f300 817b 	bgt.w	80007e2 <GPIO_Init+0x35e>
 80004ec:	2b04      	cmp	r3, #4
 80004ee:	d002      	beq.n	80004f6 <GPIO_Init+0x72>
 80004f0:	2b05      	cmp	r3, #5
 80004f2:	d016      	beq.n	8000522 <GPIO_Init+0x9e>
                // 1. Configure the FTSR and RTSR
                EXTI->FTSR |= (1 << bitFieldOffset) ;
                EXTI->RTSR |= (1 << bitFieldOffset) ;
                break ;
            default:
                return ;
 80004f4:	e175      	b.n	80007e2 <GPIO_Init+0x35e>
                EXTI->FTSR |= (1 << bitFieldOffset) ;
 80004f6:	4b4a      	ldr	r3, [pc, #296]	; (8000620 <GPIO_Init+0x19c>)
 80004f8:	68db      	ldr	r3, [r3, #12]
 80004fa:	7cfa      	ldrb	r2, [r7, #19]
 80004fc:	2101      	movs	r1, #1
 80004fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000502:	4611      	mov	r1, r2
 8000504:	4a46      	ldr	r2, [pc, #280]	; (8000620 <GPIO_Init+0x19c>)
 8000506:	430b      	orrs	r3, r1
 8000508:	60d3      	str	r3, [r2, #12]
                EXTI->FTSR &= ~(1 << bitFieldOffset) ;
 800050a:	4b45      	ldr	r3, [pc, #276]	; (8000620 <GPIO_Init+0x19c>)
 800050c:	68db      	ldr	r3, [r3, #12]
 800050e:	7cfa      	ldrb	r2, [r7, #19]
 8000510:	2101      	movs	r1, #1
 8000512:	fa01 f202 	lsl.w	r2, r1, r2
 8000516:	43d2      	mvns	r2, r2
 8000518:	4611      	mov	r1, r2
 800051a:	4a41      	ldr	r2, [pc, #260]	; (8000620 <GPIO_Init+0x19c>)
 800051c:	400b      	ands	r3, r1
 800051e:	60d3      	str	r3, [r2, #12]
                break ;
 8000520:	e02a      	b.n	8000578 <GPIO_Init+0xf4>
                EXTI->RTSR |= (1 << bitFieldOffset) ;
 8000522:	4b3f      	ldr	r3, [pc, #252]	; (8000620 <GPIO_Init+0x19c>)
 8000524:	689b      	ldr	r3, [r3, #8]
 8000526:	7cfa      	ldrb	r2, [r7, #19]
 8000528:	2101      	movs	r1, #1
 800052a:	fa01 f202 	lsl.w	r2, r1, r2
 800052e:	4611      	mov	r1, r2
 8000530:	4a3b      	ldr	r2, [pc, #236]	; (8000620 <GPIO_Init+0x19c>)
 8000532:	430b      	orrs	r3, r1
 8000534:	6093      	str	r3, [r2, #8]
                EXTI->RTSR &= ~(1 << bitFieldOffset) ;
 8000536:	4b3a      	ldr	r3, [pc, #232]	; (8000620 <GPIO_Init+0x19c>)
 8000538:	689b      	ldr	r3, [r3, #8]
 800053a:	7cfa      	ldrb	r2, [r7, #19]
 800053c:	2101      	movs	r1, #1
 800053e:	fa01 f202 	lsl.w	r2, r1, r2
 8000542:	43d2      	mvns	r2, r2
 8000544:	4611      	mov	r1, r2
 8000546:	4a36      	ldr	r2, [pc, #216]	; (8000620 <GPIO_Init+0x19c>)
 8000548:	400b      	ands	r3, r1
 800054a:	6093      	str	r3, [r2, #8]
                break ;
 800054c:	e014      	b.n	8000578 <GPIO_Init+0xf4>
                EXTI->FTSR |= (1 << bitFieldOffset) ;
 800054e:	4b34      	ldr	r3, [pc, #208]	; (8000620 <GPIO_Init+0x19c>)
 8000550:	68db      	ldr	r3, [r3, #12]
 8000552:	7cfa      	ldrb	r2, [r7, #19]
 8000554:	2101      	movs	r1, #1
 8000556:	fa01 f202 	lsl.w	r2, r1, r2
 800055a:	4611      	mov	r1, r2
 800055c:	4a30      	ldr	r2, [pc, #192]	; (8000620 <GPIO_Init+0x19c>)
 800055e:	430b      	orrs	r3, r1
 8000560:	60d3      	str	r3, [r2, #12]
                EXTI->RTSR |= (1 << bitFieldOffset) ;
 8000562:	4b2f      	ldr	r3, [pc, #188]	; (8000620 <GPIO_Init+0x19c>)
 8000564:	689b      	ldr	r3, [r3, #8]
 8000566:	7cfa      	ldrb	r2, [r7, #19]
 8000568:	2101      	movs	r1, #1
 800056a:	fa01 f202 	lsl.w	r2, r1, r2
 800056e:	4611      	mov	r1, r2
 8000570:	4a2b      	ldr	r2, [pc, #172]	; (8000620 <GPIO_Init+0x19c>)
 8000572:	430b      	orrs	r3, r1
 8000574:	6093      	str	r3, [r2, #8]
                break ;
 8000576:	bf00      	nop
        }

        // 2. Configure the GPIO port selection in SYSCFG_EXTICR
        uint8_t temp1 = bitFieldOffset / 4 ;
 8000578:	7cfb      	ldrb	r3, [r7, #19]
 800057a:	089b      	lsrs	r3, r3, #2
 800057c:	74bb      	strb	r3, [r7, #18]
        uint8_t temp2 = bitFieldOffset % 4 ;
 800057e:	7cfb      	ldrb	r3, [r7, #19]
 8000580:	f003 0303 	and.w	r3, r3, #3
 8000584:	747b      	strb	r3, [r7, #17]
        uint8_t portCode = GPIO_BASE_ADDR_TO_CODE(pGPIO_Handle->pGPIOx) ;
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	681b      	ldr	r3, [r3, #0]
 800058a:	4a26      	ldr	r2, [pc, #152]	; (8000624 <GPIO_Init+0x1a0>)
 800058c:	4293      	cmp	r3, r2
 800058e:	d05f      	beq.n	8000650 <GPIO_Init+0x1cc>
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	4a24      	ldr	r2, [pc, #144]	; (8000628 <GPIO_Init+0x1a4>)
 8000596:	4293      	cmp	r3, r2
 8000598:	d040      	beq.n	800061c <GPIO_Init+0x198>
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	4a23      	ldr	r2, [pc, #140]	; (800062c <GPIO_Init+0x1a8>)
 80005a0:	4293      	cmp	r3, r2
 80005a2:	d039      	beq.n	8000618 <GPIO_Init+0x194>
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	4a21      	ldr	r2, [pc, #132]	; (8000630 <GPIO_Init+0x1ac>)
 80005aa:	4293      	cmp	r3, r2
 80005ac:	d032      	beq.n	8000614 <GPIO_Init+0x190>
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	4a20      	ldr	r2, [pc, #128]	; (8000634 <GPIO_Init+0x1b0>)
 80005b4:	4293      	cmp	r3, r2
 80005b6:	d02b      	beq.n	8000610 <GPIO_Init+0x18c>
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a1e      	ldr	r2, [pc, #120]	; (8000638 <GPIO_Init+0x1b4>)
 80005be:	4293      	cmp	r3, r2
 80005c0:	d024      	beq.n	800060c <GPIO_Init+0x188>
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	4a1d      	ldr	r2, [pc, #116]	; (800063c <GPIO_Init+0x1b8>)
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d01d      	beq.n	8000608 <GPIO_Init+0x184>
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	4a1b      	ldr	r2, [pc, #108]	; (8000640 <GPIO_Init+0x1bc>)
 80005d2:	4293      	cmp	r3, r2
 80005d4:	d016      	beq.n	8000604 <GPIO_Init+0x180>
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	4a1a      	ldr	r2, [pc, #104]	; (8000644 <GPIO_Init+0x1c0>)
 80005dc:	4293      	cmp	r3, r2
 80005de:	d00f      	beq.n	8000600 <GPIO_Init+0x17c>
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4a18      	ldr	r2, [pc, #96]	; (8000648 <GPIO_Init+0x1c4>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d008      	beq.n	80005fc <GPIO_Init+0x178>
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a17      	ldr	r2, [pc, #92]	; (800064c <GPIO_Init+0x1c8>)
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d101      	bne.n	80005f8 <GPIO_Init+0x174>
 80005f4:	230a      	movs	r3, #10
 80005f6:	e02c      	b.n	8000652 <GPIO_Init+0x1ce>
 80005f8:	2300      	movs	r3, #0
 80005fa:	e02a      	b.n	8000652 <GPIO_Init+0x1ce>
 80005fc:	2309      	movs	r3, #9
 80005fe:	e028      	b.n	8000652 <GPIO_Init+0x1ce>
 8000600:	2308      	movs	r3, #8
 8000602:	e026      	b.n	8000652 <GPIO_Init+0x1ce>
 8000604:	2307      	movs	r3, #7
 8000606:	e024      	b.n	8000652 <GPIO_Init+0x1ce>
 8000608:	2306      	movs	r3, #6
 800060a:	e022      	b.n	8000652 <GPIO_Init+0x1ce>
 800060c:	2305      	movs	r3, #5
 800060e:	e020      	b.n	8000652 <GPIO_Init+0x1ce>
 8000610:	2304      	movs	r3, #4
 8000612:	e01e      	b.n	8000652 <GPIO_Init+0x1ce>
 8000614:	2303      	movs	r3, #3
 8000616:	e01c      	b.n	8000652 <GPIO_Init+0x1ce>
 8000618:	2302      	movs	r3, #2
 800061a:	e01a      	b.n	8000652 <GPIO_Init+0x1ce>
 800061c:	2301      	movs	r3, #1
 800061e:	e018      	b.n	8000652 <GPIO_Init+0x1ce>
 8000620:	40013c00 	.word	0x40013c00
 8000624:	40020000 	.word	0x40020000
 8000628:	40020400 	.word	0x40020400
 800062c:	40020800 	.word	0x40020800
 8000630:	40020c00 	.word	0x40020c00
 8000634:	40021000 	.word	0x40021000
 8000638:	40021400 	.word	0x40021400
 800063c:	40021800 	.word	0x40021800
 8000640:	40021c00 	.word	0x40021c00
 8000644:	40022000 	.word	0x40022000
 8000648:	40022400 	.word	0x40022400
 800064c:	40022800 	.word	0x40022800
 8000650:	2300      	movs	r3, #0
 8000652:	743b      	strb	r3, [r7, #16]
        SYSCFG->EXTICR[temp1] &= ~(0xF << (temp2 * 4)) ;                                                            // Clear 4 bits
 8000654:	4a65      	ldr	r2, [pc, #404]	; (80007ec <GPIO_Init+0x368>)
 8000656:	7cbb      	ldrb	r3, [r7, #18]
 8000658:	3302      	adds	r3, #2
 800065a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800065e:	7c7b      	ldrb	r3, [r7, #17]
 8000660:	009b      	lsls	r3, r3, #2
 8000662:	210f      	movs	r1, #15
 8000664:	fa01 f303 	lsl.w	r3, r1, r3
 8000668:	43db      	mvns	r3, r3
 800066a:	4618      	mov	r0, r3
 800066c:	495f      	ldr	r1, [pc, #380]	; (80007ec <GPIO_Init+0x368>)
 800066e:	7cbb      	ldrb	r3, [r7, #18]
 8000670:	4002      	ands	r2, r0
 8000672:	3302      	adds	r3, #2
 8000674:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        SYSCFG->EXTICR[temp1] |= portCode << (temp2 * 4) ;                                                          // Set 4 bits
 8000678:	4a5c      	ldr	r2, [pc, #368]	; (80007ec <GPIO_Init+0x368>)
 800067a:	7cbb      	ldrb	r3, [r7, #18]
 800067c:	3302      	adds	r3, #2
 800067e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000682:	7c39      	ldrb	r1, [r7, #16]
 8000684:	7c7b      	ldrb	r3, [r7, #17]
 8000686:	009b      	lsls	r3, r3, #2
 8000688:	fa01 f303 	lsl.w	r3, r1, r3
 800068c:	4618      	mov	r0, r3
 800068e:	4957      	ldr	r1, [pc, #348]	; (80007ec <GPIO_Init+0x368>)
 8000690:	7cbb      	ldrb	r3, [r7, #18]
 8000692:	4302      	orrs	r2, r0
 8000694:	3302      	adds	r3, #2
 8000696:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        // 3. Enable the EXTI interrupt delivery using IMR
        EXTI->IMR |= (1 << bitFieldOffset) ;
 800069a:	4b55      	ldr	r3, [pc, #340]	; (80007f0 <GPIO_Init+0x36c>)
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	7cfa      	ldrb	r2, [r7, #19]
 80006a0:	2101      	movs	r1, #1
 80006a2:	fa01 f202 	lsl.w	r2, r1, r2
 80006a6:	4611      	mov	r1, r2
 80006a8:	4a51      	ldr	r2, [pc, #324]	; (80007f0 <GPIO_Init+0x36c>)
 80006aa:	430b      	orrs	r3, r1
 80006ac:	6013      	str	r3, [r2, #0]
    }

    // 2. Configure the speed
    temp = 0 ;
 80006ae:	2300      	movs	r3, #0
 80006b0:	617b      	str	r3, [r7, #20]
    temp = pGPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber) ;
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	799b      	ldrb	r3, [r3, #6]
 80006b6:	461a      	mov	r2, r3
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	791b      	ldrb	r3, [r3, #4]
 80006bc:	005b      	lsls	r3, r3, #1
 80006be:	fa02 f303 	lsl.w	r3, r2, r3
 80006c2:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber) ;                        // Clear
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	689a      	ldr	r2, [r3, #8]
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	791b      	ldrb	r3, [r3, #4]
 80006ce:	4619      	mov	r1, r3
 80006d0:	2303      	movs	r3, #3
 80006d2:	408b      	lsls	r3, r1
 80006d4:	43db      	mvns	r3, r3
 80006d6:	4619      	mov	r1, r3
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	400a      	ands	r2, r1
 80006de:	609a      	str	r2, [r3, #8]
    pGPIO_Handle->pGPIOx->OSPEEDR |= temp ;                                                                         // Set
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	6899      	ldr	r1, [r3, #8]
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	697a      	ldr	r2, [r7, #20]
 80006ec:	430a      	orrs	r2, r1
 80006ee:	609a      	str	r2, [r3, #8]

    // 3. Configure the PUPD settings
    temp = 0 ;
 80006f0:	2300      	movs	r3, #0
 80006f2:	617b      	str	r3, [r7, #20]
    temp = pGPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdCtrl << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber) ;
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	79db      	ldrb	r3, [r3, #7]
 80006f8:	461a      	mov	r2, r3
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	791b      	ldrb	r3, [r3, #4]
 80006fe:	005b      	lsls	r3, r3, #1
 8000700:	fa02 f303 	lsl.w	r3, r2, r3
 8000704:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->PUPDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber) ;                          // Clear
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	68da      	ldr	r2, [r3, #12]
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	791b      	ldrb	r3, [r3, #4]
 8000710:	4619      	mov	r1, r3
 8000712:	2303      	movs	r3, #3
 8000714:	408b      	lsls	r3, r1
 8000716:	43db      	mvns	r3, r3
 8000718:	4619      	mov	r1, r3
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	400a      	ands	r2, r1
 8000720:	60da      	str	r2, [r3, #12]
    pGPIO_Handle->pGPIOx->PUPDR |= temp ;                                                                           // Set
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	68d9      	ldr	r1, [r3, #12]
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	697a      	ldr	r2, [r7, #20]
 800072e:	430a      	orrs	r2, r1
 8000730:	60da      	str	r2, [r3, #12]

    // 4. Configure the op type
    temp = 0 ;
 8000732:	2300      	movs	r3, #0
 8000734:	617b      	str	r3, [r7, #20]
    temp = pGPIO_Handle->GPIO_PinConfig.GPIO_PinOPType << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber ;
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	7a1b      	ldrb	r3, [r3, #8]
 800073a:	461a      	mov	r2, r3
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	791b      	ldrb	r3, [r3, #4]
 8000740:	fa02 f303 	lsl.w	r3, r2, r3
 8000744:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->OTYPER &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber) ;                         // Clear
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	681b      	ldr	r3, [r3, #0]
 800074a:	685a      	ldr	r2, [r3, #4]
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	791b      	ldrb	r3, [r3, #4]
 8000750:	4619      	mov	r1, r3
 8000752:	2303      	movs	r3, #3
 8000754:	408b      	lsls	r3, r1
 8000756:	43db      	mvns	r3, r3
 8000758:	4619      	mov	r1, r3
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	400a      	ands	r2, r1
 8000760:	605a      	str	r2, [r3, #4]
    pGPIO_Handle->pGPIOx->OTYPER |= temp ;                                                                          // Set
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	6859      	ldr	r1, [r3, #4]
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	697a      	ldr	r2, [r7, #20]
 800076e:	430a      	orrs	r2, r1
 8000770:	605a      	str	r2, [r3, #4]

    // 5. Configure the alt functionality
    if (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALT_FUN) {
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	795b      	ldrb	r3, [r3, #5]
 8000776:	2b02      	cmp	r3, #2
 8000778:	d134      	bne.n	80007e4 <GPIO_Init+0x360>
        // Configure the alt function registers
        uint32_t temp1 ;
        uint32_t temp2 ;

        temp1 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber / 8 ;
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	791b      	ldrb	r3, [r3, #4]
 800077e:	08db      	lsrs	r3, r3, #3
 8000780:	b2db      	uxtb	r3, r3
 8000782:	60fb      	str	r3, [r7, #12]
        temp2 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber % 8 ;
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	791b      	ldrb	r3, [r3, #4]
 8000788:	f003 0307 	and.w	r3, r3, #7
 800078c:	60bb      	str	r3, [r7, #8]

        pGPIO_Handle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));                                                  // Clear 4 bit fields
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	68fa      	ldr	r2, [r7, #12]
 8000794:	3208      	adds	r2, #8
 8000796:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800079a:	68bb      	ldr	r3, [r7, #8]
 800079c:	009b      	lsls	r3, r3, #2
 800079e:	210f      	movs	r1, #15
 80007a0:	fa01 f303 	lsl.w	r3, r1, r3
 80007a4:	43db      	mvns	r3, r3
 80007a6:	4619      	mov	r1, r3
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	4011      	ands	r1, r2
 80007ae:	68fa      	ldr	r2, [r7, #12]
 80007b0:	3208      	adds	r2, #8
 80007b2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        pGPIO_Handle->pGPIOx->AFR[temp1] |= (pGPIO_Handle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));       // Set
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	68fa      	ldr	r2, [r7, #12]
 80007bc:	3208      	adds	r2, #8
 80007be:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	7a5b      	ldrb	r3, [r3, #9]
 80007c6:	4619      	mov	r1, r3
 80007c8:	68bb      	ldr	r3, [r7, #8]
 80007ca:	009b      	lsls	r3, r3, #2
 80007cc:	fa01 f303 	lsl.w	r3, r1, r3
 80007d0:	4619      	mov	r1, r3
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	681b      	ldr	r3, [r3, #0]
 80007d6:	4311      	orrs	r1, r2
 80007d8:	68fa      	ldr	r2, [r7, #12]
 80007da:	3208      	adds	r2, #8
 80007dc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80007e0:	e000      	b.n	80007e4 <GPIO_Init+0x360>
                return ;
 80007e2:	bf00      	nop
    }
}
 80007e4:	371c      	adds	r7, #28
 80007e6:	46bd      	mov	sp, r7
 80007e8:	bc80      	pop	{r7}
 80007ea:	4770      	bx	lr
 80007ec:	40013800 	.word	0x40013800
 80007f0:	40013c00 	.word	0x40013c00

080007f4 <GPIO_ReadFromInputPin>:
 * 
 * @note                        To read, the function right-shifts the IDR value over by pinNumber
 *                              amount of times to the lsb. We then mask with 0x1 and typecast
 *                              to get the value in the IDR
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber) {
 80007f4:	b480      	push	{r7}
 80007f6:	b085      	sub	sp, #20
 80007f8:	af00      	add	r7, sp, #0
 80007fa:	6078      	str	r0, [r7, #4]
 80007fc:	460b      	mov	r3, r1
 80007fe:	70fb      	strb	r3, [r7, #3]
    uint8_t value ;
    value = (uint8_t) ((pGPIOx->IDR >> pinNumber) & 0x00000001 ) ;
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	691a      	ldr	r2, [r3, #16]
 8000804:	78fb      	ldrb	r3, [r7, #3]
 8000806:	fa22 f303 	lsr.w	r3, r2, r3
 800080a:	b2db      	uxtb	r3, r3
 800080c:	f003 0301 	and.w	r3, r3, #1
 8000810:	73fb      	strb	r3, [r7, #15]
    return  value ;
 8000812:	7bfb      	ldrb	r3, [r7, #15]
}
 8000814:	4618      	mov	r0, r3
 8000816:	3714      	adds	r7, #20
 8000818:	46bd      	mov	sp, r7
 800081a:	bc80      	pop	{r7}
 800081c:	4770      	bx	lr

0800081e <GPIO_ToggleOutputPin>:
 * 
 * @return                      none
 * 
 * @note                        none
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber) {
 800081e:	b480      	push	{r7}
 8000820:	b083      	sub	sp, #12
 8000822:	af00      	add	r7, sp, #0
 8000824:	6078      	str	r0, [r7, #4]
 8000826:	460b      	mov	r3, r1
 8000828:	70fb      	strb	r3, [r7, #3]
    // We can use XOR to toggle
    pGPIOx->ODR ^= (0x01 << pinNumber) ;
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	695b      	ldr	r3, [r3, #20]
 800082e:	78fa      	ldrb	r2, [r7, #3]
 8000830:	2101      	movs	r1, #1
 8000832:	fa01 f202 	lsl.w	r2, r1, r2
 8000836:	405a      	eors	r2, r3
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	615a      	str	r2, [r3, #20]
}
 800083c:	bf00      	nop
 800083e:	370c      	adds	r7, #12
 8000840:	46bd      	mov	sp, r7
 8000842:	bc80      	pop	{r7}
 8000844:	4770      	bx	lr
	...

08000848 <main>:
#define LOW                 0
#define BTN_PRESSED         LOW

void delay(void) ;

int main(void) {
 8000848:	b580      	push	{r7, lr}
 800084a:	b086      	sub	sp, #24
 800084c:	af00      	add	r7, sp, #0
    GPIO_Handle_t GpioLed ;
    GPIO_Handle_t GpioBtn ;

    // Configure the LED to use PA8 with no PUPD with fast output speed
    GpioLed.pGPIOx = GPIOA ;
 800084e:	4b1c      	ldr	r3, [pc, #112]	; (80008c0 <main+0x78>)
 8000850:	60fb      	str	r3, [r7, #12]
    GpioLed.GPIO_PinConfig.GPIO_PinNumber   = GPIO_PIN_NO_8 ;
 8000852:	2300      	movs	r3, #0
 8000854:	743b      	strb	r3, [r7, #16]
    GpioLed.GPIO_PinConfig.GPIO_PinMode     = GPIO_MODE_OUTPUT ;
 8000856:	2301      	movs	r3, #1
 8000858:	747b      	strb	r3, [r7, #17]
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed    = GPIO_SPEED_FAST ;
 800085a:	2302      	movs	r3, #2
 800085c:	74bb      	strb	r3, [r7, #18]
    GpioLed.GPIO_PinConfig.GPIO_PinOPType   = GPIO_OP_TYPE_PP ;
 800085e:	2300      	movs	r3, #0
 8000860:	753b      	strb	r3, [r7, #20]
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdCtrl = GPIO_NO_PUPD ;
 8000862:	2300      	movs	r3, #0
 8000864:	74fb      	strb	r3, [r7, #19]
    // Enable GPIO clock and initialize it
    GPIO_PeriClockControl(GPIOA, ENABLE) ;
 8000866:	2101      	movs	r1, #1
 8000868:	4815      	ldr	r0, [pc, #84]	; (80008c0 <main+0x78>)
 800086a:	f7ff fcbf 	bl	80001ec <GPIO_PeriClockControl>
    GPIO_Init(&GpioLed) ;
 800086e:	f107 030c 	add.w	r3, r7, #12
 8000872:	4618      	mov	r0, r3
 8000874:	f7ff fe06 	bl	8000484 <GPIO_Init>

    /*
     * Note: The button uses a pull-up resistor and is active LOW
     */
    // Configure the button to use PB12 with external PUPD and fast output speed
    GpioBtn.pGPIOx = GPIOB ;
 8000878:	4b12      	ldr	r3, [pc, #72]	; (80008c4 <main+0x7c>)
 800087a:	603b      	str	r3, [r7, #0]
    GpioBtn.GPIO_PinConfig.GPIO_PinNumber   = GPIO_PIN_NO_12 ;
 800087c:	230c      	movs	r3, #12
 800087e:	713b      	strb	r3, [r7, #4]
    GpioBtn.GPIO_PinConfig.GPIO_PinMode     = GPIO_MODE_INPUT ;
 8000880:	2300      	movs	r3, #0
 8000882:	717b      	strb	r3, [r7, #5]
    GpioBtn.GPIO_PinConfig.GPIO_PinSpeed    = GPIO_SPEED_FAST ;
 8000884:	2302      	movs	r3, #2
 8000886:	71bb      	strb	r3, [r7, #6]
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdCtrl = GPIO_NO_PUPD ;
 8000888:	2300      	movs	r3, #0
 800088a:	74fb      	strb	r3, [r7, #19]
    // Enable GPIO clock and initialize it
    GPIO_PeriClockControl(GPIOB, ENABLE) ;
 800088c:	2101      	movs	r1, #1
 800088e:	480d      	ldr	r0, [pc, #52]	; (80008c4 <main+0x7c>)
 8000890:	f7ff fcac 	bl	80001ec <GPIO_PeriClockControl>
    GPIO_Init(&GpioBtn) ;
 8000894:	463b      	mov	r3, r7
 8000896:	4618      	mov	r0, r3
 8000898:	f7ff fdf4 	bl	8000484 <GPIO_Init>
    
    while (1) {
        if (GPIO_ReadFromInputPin(GpioBtn.pGPIOx, GpioBtn.GPIO_PinConfig.GPIO_PinNumber) == BTN_PRESSED) {
 800089c:	683b      	ldr	r3, [r7, #0]
 800089e:	793a      	ldrb	r2, [r7, #4]
 80008a0:	4611      	mov	r1, r2
 80008a2:	4618      	mov	r0, r3
 80008a4:	f7ff ffa6 	bl	80007f4 <GPIO_ReadFromInputPin>
 80008a8:	4603      	mov	r3, r0
 80008aa:	2b00      	cmp	r3, #0
 80008ac:	d1f6      	bne.n	800089c <main+0x54>
            // Debounce
            delay() ;
 80008ae:	f000 f80b 	bl	80008c8 <delay>
            GPIO_ToggleOutputPin(GpioLed.pGPIOx, GpioLed.GPIO_PinConfig.GPIO_PinNumber) ;
 80008b2:	68fb      	ldr	r3, [r7, #12]
 80008b4:	7c3a      	ldrb	r2, [r7, #16]
 80008b6:	4611      	mov	r1, r2
 80008b8:	4618      	mov	r0, r3
 80008ba:	f7ff ffb0 	bl	800081e <GPIO_ToggleOutputPin>
        if (GPIO_ReadFromInputPin(GpioBtn.pGPIOx, GpioBtn.GPIO_PinConfig.GPIO_PinNumber) == BTN_PRESSED) {
 80008be:	e7ed      	b.n	800089c <main+0x54>
 80008c0:	40020000 	.word	0x40020000
 80008c4:	40020400 	.word	0x40020400

080008c8 <delay>:
 * @return      none
 * 
 * @note        none
 * 
 */
void delay(void) {
 80008c8:	b480      	push	{r7}
 80008ca:	b083      	sub	sp, #12
 80008cc:	af00      	add	r7, sp, #0
    for (uint32_t i = 0 ; i < 500000/2 ; i++) ;
 80008ce:	2300      	movs	r3, #0
 80008d0:	607b      	str	r3, [r7, #4]
 80008d2:	e002      	b.n	80008da <delay+0x12>
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	3301      	adds	r3, #1
 80008d8:	607b      	str	r3, [r7, #4]
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	4a04      	ldr	r2, [pc, #16]	; (80008f0 <delay+0x28>)
 80008de:	4293      	cmp	r3, r2
 80008e0:	d9f8      	bls.n	80008d4 <delay+0xc>
}
 80008e2:	bf00      	nop
 80008e4:	bf00      	nop
 80008e6:	370c      	adds	r7, #12
 80008e8:	46bd      	mov	sp, r7
 80008ea:	bc80      	pop	{r7}
 80008ec:	4770      	bx	lr
 80008ee:	bf00      	nop
 80008f0:	0003d08f 	.word	0x0003d08f

080008f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80008f4:	480d      	ldr	r0, [pc, #52]	; (800092c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80008f6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80008f8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80008fc:	480c      	ldr	r0, [pc, #48]	; (8000930 <LoopForever+0x6>)
  ldr r1, =_edata
 80008fe:	490d      	ldr	r1, [pc, #52]	; (8000934 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000900:	4a0d      	ldr	r2, [pc, #52]	; (8000938 <LoopForever+0xe>)
  movs r3, #0
 8000902:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000904:	e002      	b.n	800090c <LoopCopyDataInit>

08000906 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000906:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000908:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800090a:	3304      	adds	r3, #4

0800090c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800090c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800090e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000910:	d3f9      	bcc.n	8000906 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000912:	4a0a      	ldr	r2, [pc, #40]	; (800093c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000914:	4c0a      	ldr	r4, [pc, #40]	; (8000940 <LoopForever+0x16>)
  movs r3, #0
 8000916:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000918:	e001      	b.n	800091e <LoopFillZerobss>

0800091a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800091a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800091c:	3204      	adds	r2, #4

0800091e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800091e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000920:	d3fb      	bcc.n	800091a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000922:	f000 f811 	bl	8000948 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000926:	f7ff ff8f 	bl	8000848 <main>

0800092a <LoopForever>:

LoopForever:
    b LoopForever
 800092a:	e7fe      	b.n	800092a <LoopForever>
  ldr   r0, =_estack
 800092c:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000930:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000934:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000938:	080009b0 	.word	0x080009b0
  ldr r2, =_sbss
 800093c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000940:	2000001c 	.word	0x2000001c

08000944 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000944:	e7fe      	b.n	8000944 <ADC_IRQHandler>
	...

08000948 <__libc_init_array>:
 8000948:	b570      	push	{r4, r5, r6, lr}
 800094a:	4d0d      	ldr	r5, [pc, #52]	; (8000980 <__libc_init_array+0x38>)
 800094c:	4c0d      	ldr	r4, [pc, #52]	; (8000984 <__libc_init_array+0x3c>)
 800094e:	1b64      	subs	r4, r4, r5
 8000950:	10a4      	asrs	r4, r4, #2
 8000952:	2600      	movs	r6, #0
 8000954:	42a6      	cmp	r6, r4
 8000956:	d109      	bne.n	800096c <__libc_init_array+0x24>
 8000958:	4d0b      	ldr	r5, [pc, #44]	; (8000988 <__libc_init_array+0x40>)
 800095a:	4c0c      	ldr	r4, [pc, #48]	; (800098c <__libc_init_array+0x44>)
 800095c:	f000 f818 	bl	8000990 <_init>
 8000960:	1b64      	subs	r4, r4, r5
 8000962:	10a4      	asrs	r4, r4, #2
 8000964:	2600      	movs	r6, #0
 8000966:	42a6      	cmp	r6, r4
 8000968:	d105      	bne.n	8000976 <__libc_init_array+0x2e>
 800096a:	bd70      	pop	{r4, r5, r6, pc}
 800096c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000970:	4798      	blx	r3
 8000972:	3601      	adds	r6, #1
 8000974:	e7ee      	b.n	8000954 <__libc_init_array+0xc>
 8000976:	f855 3b04 	ldr.w	r3, [r5], #4
 800097a:	4798      	blx	r3
 800097c:	3601      	adds	r6, #1
 800097e:	e7f2      	b.n	8000966 <__libc_init_array+0x1e>
 8000980:	080009a8 	.word	0x080009a8
 8000984:	080009a8 	.word	0x080009a8
 8000988:	080009a8 	.word	0x080009a8
 800098c:	080009ac 	.word	0x080009ac

08000990 <_init>:
 8000990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000992:	bf00      	nop
 8000994:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000996:	bc08      	pop	{r3}
 8000998:	469e      	mov	lr, r3
 800099a:	4770      	bx	lr

0800099c <_fini>:
 800099c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800099e:	bf00      	nop
 80009a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009a2:	bc08      	pop	{r3}
 80009a4:	469e      	mov	lr, r3
 80009a6:	4770      	bx	lr


002_sample_app.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001b28  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001c4  08001cd8  08001cd8  00011cd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001e9c  08001e9c  000200b4  2**0
                  CONTENTS
  4 .ARM          00000000  08001e9c  08001e9c  000200b4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001e9c  08001e9c  000200b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001e9c  08001e9c  00011e9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001ea0  08001ea0  00011ea0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000b4  20000000  08001ea4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000200b4  2**0
                  CONTENTS
 10 .bss          000000e4  200000b4  200000b4  000200b4  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000198  20000198  000200b4  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000200b4  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000157e  00000000  00000000  000200de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000419  00000000  00000000  0002165c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000090  00000000  00000000  00021a78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000068  00000000  00000000  00021b08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000226e  00000000  00000000  00021b70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000cc1  00000000  00000000  00023dde  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008587  00000000  00000000  00024a9f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0002d026  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001018  00000000  00000000  0002d07c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000b4 	.word	0x200000b4
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001cc0 	.word	0x08001cc0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000b8 	.word	0x200000b8
 80001ec:	08001cc0 	.word	0x08001cc0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <array_fill_numbers>:

/* Function Prototype(s) */
extern void initialise_monitor_handles(void);						// Semihosting Debugger

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b084      	sub	sp, #16
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
 80002a8:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 80002aa:	2300      	movs	r3, #0
 80002ac:	60fb      	str	r3, [r7, #12]
 80002ae:	e015      	b.n	80002dc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 80002b0:	f000 f9e2 	bl	8000678 <rand>
 80002b4:	4602      	mov	r2, r0
 80002b6:	68fb      	ldr	r3, [r7, #12]
 80002b8:	009b      	lsls	r3, r3, #2
 80002ba:	6879      	ldr	r1, [r7, #4]
 80002bc:	4419      	add	r1, r3
 80002be:	4b0c      	ldr	r3, [pc, #48]	; (80002f0 <array_fill_numbers+0x50>)
 80002c0:	fb83 0302 	smull	r0, r3, r3, r2
 80002c4:	1198      	asrs	r0, r3, #6
 80002c6:	17d3      	asrs	r3, r2, #31
 80002c8:	1ac3      	subs	r3, r0, r3
 80002ca:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002ce:	fb00 f303 	mul.w	r3, r0, r3
 80002d2:	1ad3      	subs	r3, r2, r3
 80002d4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002d6:	68fb      	ldr	r3, [r7, #12]
 80002d8:	3301      	adds	r3, #1
 80002da:	60fb      	str	r3, [r7, #12]
 80002dc:	68fa      	ldr	r2, [r7, #12]
 80002de:	683b      	ldr	r3, [r7, #0]
 80002e0:	429a      	cmp	r2, r3
 80002e2:	d3e5      	bcc.n	80002b0 <array_fill_numbers+0x10>
    }

}
 80002e4:	bf00      	nop
 80002e6:	bf00      	nop
 80002e8:	3710      	adds	r7, #16
 80002ea:	46bd      	mov	sp, r7
 80002ec:	bd80      	pop	{r7, pc}
 80002ee:	bf00      	nop
 80002f0:	10624dd3 	.word	0x10624dd3

080002f4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002f4:	b580      	push	{r7, lr}
 80002f6:	b086      	sub	sp, #24
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	60f8      	str	r0, [r7, #12]
 80002fc:	60b9      	str	r1, [r7, #8]
 80002fe:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 8000300:	6879      	ldr	r1, [r7, #4]
 8000302:	480e      	ldr	r0, [pc, #56]	; (800033c <display_numbers+0x48>)
 8000304:	f000 f98c 	bl	8000620 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 8000308:	2300      	movs	r3, #0
 800030a:	617b      	str	r3, [r7, #20]
 800030c:	e00b      	b.n	8000326 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 800030e:	697b      	ldr	r3, [r7, #20]
 8000310:	009b      	lsls	r3, r3, #2
 8000312:	68fa      	ldr	r2, [r7, #12]
 8000314:	4413      	add	r3, r2
 8000316:	681b      	ldr	r3, [r3, #0]
 8000318:	4619      	mov	r1, r3
 800031a:	4809      	ldr	r0, [pc, #36]	; (8000340 <display_numbers+0x4c>)
 800031c:	f000 f980 	bl	8000620 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000320:	697b      	ldr	r3, [r7, #20]
 8000322:	3301      	adds	r3, #1
 8000324:	617b      	str	r3, [r7, #20]
 8000326:	697a      	ldr	r2, [r7, #20]
 8000328:	68bb      	ldr	r3, [r7, #8]
 800032a:	429a      	cmp	r2, r3
 800032c:	d3ef      	bcc.n	800030e <display_numbers+0x1a>
    }

    printf("\n");
 800032e:	200a      	movs	r0, #10
 8000330:	f000 f98e 	bl	8000650 <putchar>
}
 8000334:	bf00      	nop
 8000336:	3718      	adds	r7, #24
 8000338:	46bd      	mov	sp, r7
 800033a:	bd80      	pop	{r7, pc}
 800033c:	08001cd8 	.word	0x08001cd8
 8000340:	08001cdc 	.word	0x08001cdc

08000344 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000344:	b580      	push	{r7, lr}
 8000346:	b084      	sub	sp, #16
 8000348:	af00      	add	r7, sp, #0
 800034a:	6078      	str	r0, [r7, #4]
 800034c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000354:	683b      	ldr	r3, [r7, #0]
 8000356:	681a      	ldr	r2, [r3, #0]
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800035c:	683b      	ldr	r3, [r7, #0]
 800035e:	68fa      	ldr	r2, [r7, #12]
 8000360:	601a      	str	r2, [r3, #0]

#if 1
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
 8000362:	4b05      	ldr	r3, [pc, #20]	; (8000378 <swap_numbers+0x34>)
 8000364:	60bb      	str	r3, [r7, #8]
     jump_addr();
 8000366:	68bb      	ldr	r3, [r7, #8]
 8000368:	4798      	blx	r3
#endif

     someData = 10;
 800036a:	4b04      	ldr	r3, [pc, #16]	; (800037c <swap_numbers+0x38>)
 800036c:	220a      	movs	r2, #10
 800036e:	601a      	str	r2, [r3, #0]
}
 8000370:	bf00      	nop
 8000372:	3710      	adds	r7, #16
 8000374:	46bd      	mov	sp, r7
 8000376:	bd80      	pop	{r7, pc}
 8000378:	20000009 	.word	0x20000009
 800037c:	20000044 	.word	0x20000044

08000380 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	b086      	sub	sp, #24
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
 8000388:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 800038a:	2300      	movs	r3, #0
 800038c:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 800038e:	2300      	movs	r3, #0
 8000390:	617b      	str	r3, [r7, #20]
 8000392:	e02f      	b.n	80003f4 <bubble_sort+0x74>
    {
        flag=0;
 8000394:	2300      	movs	r3, #0
 8000396:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000398:	2300      	movs	r3, #0
 800039a:	613b      	str	r3, [r7, #16]
 800039c:	e01d      	b.n	80003da <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 800039e:	693b      	ldr	r3, [r7, #16]
 80003a0:	009b      	lsls	r3, r3, #2
 80003a2:	687a      	ldr	r2, [r7, #4]
 80003a4:	4413      	add	r3, r2
 80003a6:	681a      	ldr	r2, [r3, #0]
 80003a8:	693b      	ldr	r3, [r7, #16]
 80003aa:	3301      	adds	r3, #1
 80003ac:	009b      	lsls	r3, r3, #2
 80003ae:	6879      	ldr	r1, [r7, #4]
 80003b0:	440b      	add	r3, r1
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	429a      	cmp	r2, r3
 80003b6:	dd0d      	ble.n	80003d4 <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 80003b8:	693b      	ldr	r3, [r7, #16]
 80003ba:	009b      	lsls	r3, r3, #2
 80003bc:	687a      	ldr	r2, [r7, #4]
 80003be:	18d0      	adds	r0, r2, r3
 80003c0:	693b      	ldr	r3, [r7, #16]
 80003c2:	3301      	adds	r3, #1
 80003c4:	009b      	lsls	r3, r3, #2
 80003c6:	687a      	ldr	r2, [r7, #4]
 80003c8:	4413      	add	r3, r2
 80003ca:	4619      	mov	r1, r3
 80003cc:	f7ff ffba 	bl	8000344 <swap_numbers>
                flag=1;
 80003d0:	2301      	movs	r3, #1
 80003d2:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003d4:	693b      	ldr	r3, [r7, #16]
 80003d6:	3301      	adds	r3, #1
 80003d8:	613b      	str	r3, [r7, #16]
 80003da:	697b      	ldr	r3, [r7, #20]
 80003dc:	683a      	ldr	r2, [r7, #0]
 80003de:	1ad3      	subs	r3, r2, r3
 80003e0:	1e5a      	subs	r2, r3, #1
 80003e2:	693b      	ldr	r3, [r7, #16]
 80003e4:	429a      	cmp	r2, r3
 80003e6:	d8da      	bhi.n	800039e <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003e8:	68fb      	ldr	r3, [r7, #12]
 80003ea:	2b00      	cmp	r3, #0
 80003ec:	d008      	beq.n	8000400 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003ee:	697b      	ldr	r3, [r7, #20]
 80003f0:	3301      	adds	r3, #1
 80003f2:	617b      	str	r3, [r7, #20]
 80003f4:	683b      	ldr	r3, [r7, #0]
 80003f6:	1e5a      	subs	r2, r3, #1
 80003f8:	697b      	ldr	r3, [r7, #20]
 80003fa:	429a      	cmp	r2, r3
 80003fc:	d8ca      	bhi.n	8000394 <bubble_sort+0x14>
            break;
    }
}
 80003fe:	e000      	b.n	8000402 <bubble_sort+0x82>
            break;
 8000400:	bf00      	nop
}
 8000402:	bf00      	nop
 8000404:	3718      	adds	r7, #24
 8000406:	46bd      	mov	sp, r7
 8000408:	bd80      	pop	{r7, pc}

0800040a <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 800040a:	b480      	push	{r7}
 800040c:	b087      	sub	sp, #28
 800040e:	af00      	add	r7, sp, #0
 8000410:	6078      	str	r0, [r7, #4]
 8000412:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 8000414:	2301      	movs	r3, #1
 8000416:	617b      	str	r3, [r7, #20]
 8000418:	e02c      	b.n	8000474 <insertion_sort+0x6a>
     {
         j=i-1;
 800041a:	697b      	ldr	r3, [r7, #20]
 800041c:	3b01      	subs	r3, #1
 800041e:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 8000420:	697b      	ldr	r3, [r7, #20]
 8000422:	009b      	lsls	r3, r3, #2
 8000424:	687a      	ldr	r2, [r7, #4]
 8000426:	4413      	add	r3, r2
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 800042c:	e00d      	b.n	800044a <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 800042e:	693b      	ldr	r3, [r7, #16]
 8000430:	009b      	lsls	r3, r3, #2
 8000432:	687a      	ldr	r2, [r7, #4]
 8000434:	441a      	add	r2, r3
 8000436:	693b      	ldr	r3, [r7, #16]
 8000438:	3301      	adds	r3, #1
 800043a:	009b      	lsls	r3, r3, #2
 800043c:	6879      	ldr	r1, [r7, #4]
 800043e:	440b      	add	r3, r1
 8000440:	6812      	ldr	r2, [r2, #0]
 8000442:	601a      	str	r2, [r3, #0]
             j--;
 8000444:	693b      	ldr	r3, [r7, #16]
 8000446:	3b01      	subs	r3, #1
 8000448:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 800044a:	693b      	ldr	r3, [r7, #16]
 800044c:	2b00      	cmp	r3, #0
 800044e:	db07      	blt.n	8000460 <insertion_sort+0x56>
 8000450:	693b      	ldr	r3, [r7, #16]
 8000452:	009b      	lsls	r3, r3, #2
 8000454:	687a      	ldr	r2, [r7, #4]
 8000456:	4413      	add	r3, r2
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	68fa      	ldr	r2, [r7, #12]
 800045c:	429a      	cmp	r2, r3
 800045e:	dbe6      	blt.n	800042e <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000460:	693b      	ldr	r3, [r7, #16]
 8000462:	3301      	adds	r3, #1
 8000464:	009b      	lsls	r3, r3, #2
 8000466:	687a      	ldr	r2, [r7, #4]
 8000468:	4413      	add	r3, r2
 800046a:	68fa      	ldr	r2, [r7, #12]
 800046c:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 800046e:	697b      	ldr	r3, [r7, #20]
 8000470:	3301      	adds	r3, #1
 8000472:	617b      	str	r3, [r7, #20]
 8000474:	697b      	ldr	r3, [r7, #20]
 8000476:	683a      	ldr	r2, [r7, #0]
 8000478:	429a      	cmp	r2, r3
 800047a:	d8ce      	bhi.n	800041a <insertion_sort+0x10>
     }


}
 800047c:	bf00      	nop
 800047e:	bf00      	nop
 8000480:	371c      	adds	r7, #28
 8000482:	46bd      	mov	sp, r7
 8000484:	bc80      	pop	{r7}
 8000486:	4770      	bx	lr

08000488 <main>:



int main()
{
 8000488:	b580      	push	{r7, lr}
 800048a:	b082      	sub	sp, #8
 800048c:	af00      	add	r7, sp, #0
    initialise_monitor_handles();									// Semihosting Debugger
 800048e:	f001 fb73 	bl	8001b78 <initialise_monitor_handles>

    unsigned int len = sizeof(numbers)/sizeof(int);
 8000492:	2311      	movs	r3, #17
 8000494:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 8000496:	6879      	ldr	r1, [r7, #4]
 8000498:	4813      	ldr	r0, [pc, #76]	; (80004e8 <main+0x60>)
 800049a:	f7ff ff01 	bl	80002a0 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 800049e:	4a13      	ldr	r2, [pc, #76]	; (80004ec <main+0x64>)
 80004a0:	6879      	ldr	r1, [r7, #4]
 80004a2:	4811      	ldr	r0, [pc, #68]	; (80004e8 <main+0x60>)
 80004a4:	f7ff ff26 	bl	80002f4 <display_numbers>

    bubble_sort(numbers,len);
 80004a8:	6879      	ldr	r1, [r7, #4]
 80004aa:	480f      	ldr	r0, [pc, #60]	; (80004e8 <main+0x60>)
 80004ac:	f7ff ff68 	bl	8000380 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 80004b0:	4a0f      	ldr	r2, [pc, #60]	; (80004f0 <main+0x68>)
 80004b2:	6879      	ldr	r1, [r7, #4]
 80004b4:	480c      	ldr	r0, [pc, #48]	; (80004e8 <main+0x60>)
 80004b6:	f7ff ff1d 	bl	80002f4 <display_numbers>

    array_fill_numbers(numbers,len);
 80004ba:	6879      	ldr	r1, [r7, #4]
 80004bc:	480a      	ldr	r0, [pc, #40]	; (80004e8 <main+0x60>)
 80004be:	f7ff feef 	bl	80002a0 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004c2:	4a0c      	ldr	r2, [pc, #48]	; (80004f4 <main+0x6c>)
 80004c4:	6879      	ldr	r1, [r7, #4]
 80004c6:	4808      	ldr	r0, [pc, #32]	; (80004e8 <main+0x60>)
 80004c8:	f7ff ff14 	bl	80002f4 <display_numbers>

    insertion_sort(numbers,len);
 80004cc:	6879      	ldr	r1, [r7, #4]
 80004ce:	4806      	ldr	r0, [pc, #24]	; (80004e8 <main+0x60>)
 80004d0:	f7ff ff9b 	bl	800040a <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004d4:	4a08      	ldr	r2, [pc, #32]	; (80004f8 <main+0x70>)
 80004d6:	6879      	ldr	r1, [r7, #4]
 80004d8:	4803      	ldr	r0, [pc, #12]	; (80004e8 <main+0x60>)
 80004da:	f7ff ff0b 	bl	80002f4 <display_numbers>



    return 0;
 80004de:	2300      	movs	r3, #0
}
 80004e0:	4618      	mov	r0, r3
 80004e2:	3708      	adds	r7, #8
 80004e4:	46bd      	mov	sp, r7
 80004e6:	bd80      	pop	{r7, pc}
 80004e8:	20000000 	.word	0x20000000
 80004ec:	08001ce4 	.word	0x08001ce4
 80004f0:	08001cf8 	.word	0x08001cf8
 80004f4:	08001d0c 	.word	0x08001d0c
 80004f8:	08001d20 	.word	0x08001d20

080004fc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004fc:	b580      	push	{r7, lr}
 80004fe:	b086      	sub	sp, #24
 8000500:	af00      	add	r7, sp, #0
 8000502:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000504:	4a14      	ldr	r2, [pc, #80]	; (8000558 <_sbrk+0x5c>)
 8000506:	4b15      	ldr	r3, [pc, #84]	; (800055c <_sbrk+0x60>)
 8000508:	1ad3      	subs	r3, r2, r3
 800050a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800050c:	697b      	ldr	r3, [r7, #20]
 800050e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000510:	4b13      	ldr	r3, [pc, #76]	; (8000560 <_sbrk+0x64>)
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	2b00      	cmp	r3, #0
 8000516:	d102      	bne.n	800051e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000518:	4b11      	ldr	r3, [pc, #68]	; (8000560 <_sbrk+0x64>)
 800051a:	4a12      	ldr	r2, [pc, #72]	; (8000564 <_sbrk+0x68>)
 800051c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800051e:	4b10      	ldr	r3, [pc, #64]	; (8000560 <_sbrk+0x64>)
 8000520:	681a      	ldr	r2, [r3, #0]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	4413      	add	r3, r2
 8000526:	693a      	ldr	r2, [r7, #16]
 8000528:	429a      	cmp	r2, r3
 800052a:	d207      	bcs.n	800053c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800052c:	f000 f846 	bl	80005bc <__errno>
 8000530:	4603      	mov	r3, r0
 8000532:	220c      	movs	r2, #12
 8000534:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000536:	f04f 33ff 	mov.w	r3, #4294967295
 800053a:	e009      	b.n	8000550 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800053c:	4b08      	ldr	r3, [pc, #32]	; (8000560 <_sbrk+0x64>)
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000542:	4b07      	ldr	r3, [pc, #28]	; (8000560 <_sbrk+0x64>)
 8000544:	681a      	ldr	r2, [r3, #0]
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	4413      	add	r3, r2
 800054a:	4a05      	ldr	r2, [pc, #20]	; (8000560 <_sbrk+0x64>)
 800054c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800054e:	68fb      	ldr	r3, [r7, #12]
}
 8000550:	4618      	mov	r0, r3
 8000552:	3718      	adds	r7, #24
 8000554:	46bd      	mov	sp, r7
 8000556:	bd80      	pop	{r7, pc}
 8000558:	20030000 	.word	0x20030000
 800055c:	00000400 	.word	0x00000400
 8000560:	200000d0 	.word	0x200000d0
 8000564:	20000198 	.word	0x20000198

08000568 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000568:	480d      	ldr	r0, [pc, #52]	; (80005a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800056a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800056c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000570:	480c      	ldr	r0, [pc, #48]	; (80005a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000572:	490d      	ldr	r1, [pc, #52]	; (80005a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000574:	4a0d      	ldr	r2, [pc, #52]	; (80005ac <LoopForever+0xe>)
  movs r3, #0
 8000576:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000578:	e002      	b.n	8000580 <LoopCopyDataInit>

0800057a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800057a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800057c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800057e:	3304      	adds	r3, #4

08000580 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000580:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000582:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000584:	d3f9      	bcc.n	800057a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000586:	4a0a      	ldr	r2, [pc, #40]	; (80005b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000588:	4c0a      	ldr	r4, [pc, #40]	; (80005b4 <LoopForever+0x16>)
  movs r3, #0
 800058a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800058c:	e001      	b.n	8000592 <LoopFillZerobss>

0800058e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800058e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000590:	3204      	adds	r2, #4

08000592 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000592:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000594:	d3fb      	bcc.n	800058e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000596:	f000 f817 	bl	80005c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800059a:	f7ff ff75 	bl	8000488 <main>

0800059e <LoopForever>:

LoopForever:
    b LoopForever
 800059e:	e7fe      	b.n	800059e <LoopForever>
  ldr   r0, =_estack
 80005a0:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80005a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005a8:	200000b4 	.word	0x200000b4
  ldr r2, =_sidata
 80005ac:	08001ea4 	.word	0x08001ea4
  ldr r2, =_sbss
 80005b0:	200000b4 	.word	0x200000b4
  ldr r4, =_ebss
 80005b4:	20000198 	.word	0x20000198

080005b8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005b8:	e7fe      	b.n	80005b8 <ADC_IRQHandler>
	...

080005bc <__errno>:
 80005bc:	4b01      	ldr	r3, [pc, #4]	; (80005c4 <__errno+0x8>)
 80005be:	6818      	ldr	r0, [r3, #0]
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop
 80005c4:	20000048 	.word	0x20000048

080005c8 <__libc_init_array>:
 80005c8:	b570      	push	{r4, r5, r6, lr}
 80005ca:	4d0d      	ldr	r5, [pc, #52]	; (8000600 <__libc_init_array+0x38>)
 80005cc:	4c0d      	ldr	r4, [pc, #52]	; (8000604 <__libc_init_array+0x3c>)
 80005ce:	1b64      	subs	r4, r4, r5
 80005d0:	10a4      	asrs	r4, r4, #2
 80005d2:	2600      	movs	r6, #0
 80005d4:	42a6      	cmp	r6, r4
 80005d6:	d109      	bne.n	80005ec <__libc_init_array+0x24>
 80005d8:	4d0b      	ldr	r5, [pc, #44]	; (8000608 <__libc_init_array+0x40>)
 80005da:	4c0c      	ldr	r4, [pc, #48]	; (800060c <__libc_init_array+0x44>)
 80005dc:	f001 fb70 	bl	8001cc0 <_init>
 80005e0:	1b64      	subs	r4, r4, r5
 80005e2:	10a4      	asrs	r4, r4, #2
 80005e4:	2600      	movs	r6, #0
 80005e6:	42a6      	cmp	r6, r4
 80005e8:	d105      	bne.n	80005f6 <__libc_init_array+0x2e>
 80005ea:	bd70      	pop	{r4, r5, r6, pc}
 80005ec:	f855 3b04 	ldr.w	r3, [r5], #4
 80005f0:	4798      	blx	r3
 80005f2:	3601      	adds	r6, #1
 80005f4:	e7ee      	b.n	80005d4 <__libc_init_array+0xc>
 80005f6:	f855 3b04 	ldr.w	r3, [r5], #4
 80005fa:	4798      	blx	r3
 80005fc:	3601      	adds	r6, #1
 80005fe:	e7f2      	b.n	80005e6 <__libc_init_array+0x1e>
 8000600:	08001e9c 	.word	0x08001e9c
 8000604:	08001e9c 	.word	0x08001e9c
 8000608:	08001e9c 	.word	0x08001e9c
 800060c:	08001ea0 	.word	0x08001ea0

08000610 <memset>:
 8000610:	4402      	add	r2, r0
 8000612:	4603      	mov	r3, r0
 8000614:	4293      	cmp	r3, r2
 8000616:	d100      	bne.n	800061a <memset+0xa>
 8000618:	4770      	bx	lr
 800061a:	f803 1b01 	strb.w	r1, [r3], #1
 800061e:	e7f9      	b.n	8000614 <memset+0x4>

08000620 <iprintf>:
 8000620:	b40f      	push	{r0, r1, r2, r3}
 8000622:	4b0a      	ldr	r3, [pc, #40]	; (800064c <iprintf+0x2c>)
 8000624:	b513      	push	{r0, r1, r4, lr}
 8000626:	681c      	ldr	r4, [r3, #0]
 8000628:	b124      	cbz	r4, 8000634 <iprintf+0x14>
 800062a:	69a3      	ldr	r3, [r4, #24]
 800062c:	b913      	cbnz	r3, 8000634 <iprintf+0x14>
 800062e:	4620      	mov	r0, r4
 8000630:	f000 f8d8 	bl	80007e4 <__sinit>
 8000634:	ab05      	add	r3, sp, #20
 8000636:	9a04      	ldr	r2, [sp, #16]
 8000638:	68a1      	ldr	r1, [r4, #8]
 800063a:	9301      	str	r3, [sp, #4]
 800063c:	4620      	mov	r0, r4
 800063e:	f000 fa5b 	bl	8000af8 <_vfiprintf_r>
 8000642:	b002      	add	sp, #8
 8000644:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000648:	b004      	add	sp, #16
 800064a:	4770      	bx	lr
 800064c:	20000048 	.word	0x20000048

08000650 <putchar>:
 8000650:	b538      	push	{r3, r4, r5, lr}
 8000652:	4b08      	ldr	r3, [pc, #32]	; (8000674 <putchar+0x24>)
 8000654:	681c      	ldr	r4, [r3, #0]
 8000656:	4605      	mov	r5, r0
 8000658:	b124      	cbz	r4, 8000664 <putchar+0x14>
 800065a:	69a3      	ldr	r3, [r4, #24]
 800065c:	b913      	cbnz	r3, 8000664 <putchar+0x14>
 800065e:	4620      	mov	r0, r4
 8000660:	f000 f8c0 	bl	80007e4 <__sinit>
 8000664:	68a2      	ldr	r2, [r4, #8]
 8000666:	4629      	mov	r1, r5
 8000668:	4620      	mov	r0, r4
 800066a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800066e:	f000 bd07 	b.w	8001080 <_putc_r>
 8000672:	bf00      	nop
 8000674:	20000048 	.word	0x20000048

08000678 <rand>:
 8000678:	4b17      	ldr	r3, [pc, #92]	; (80006d8 <rand+0x60>)
 800067a:	b510      	push	{r4, lr}
 800067c:	681c      	ldr	r4, [r3, #0]
 800067e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000680:	b9b3      	cbnz	r3, 80006b0 <rand+0x38>
 8000682:	2018      	movs	r0, #24
 8000684:	f000 f960 	bl	8000948 <malloc>
 8000688:	4602      	mov	r2, r0
 800068a:	63a0      	str	r0, [r4, #56]	; 0x38
 800068c:	b920      	cbnz	r0, 8000698 <rand+0x20>
 800068e:	4b13      	ldr	r3, [pc, #76]	; (80006dc <rand+0x64>)
 8000690:	4813      	ldr	r0, [pc, #76]	; (80006e0 <rand+0x68>)
 8000692:	214e      	movs	r1, #78	; 0x4e
 8000694:	f000 f830 	bl	80006f8 <__assert_func>
 8000698:	4912      	ldr	r1, [pc, #72]	; (80006e4 <rand+0x6c>)
 800069a:	4b13      	ldr	r3, [pc, #76]	; (80006e8 <rand+0x70>)
 800069c:	e9c0 1300 	strd	r1, r3, [r0]
 80006a0:	4b12      	ldr	r3, [pc, #72]	; (80006ec <rand+0x74>)
 80006a2:	6083      	str	r3, [r0, #8]
 80006a4:	230b      	movs	r3, #11
 80006a6:	8183      	strh	r3, [r0, #12]
 80006a8:	2100      	movs	r1, #0
 80006aa:	2001      	movs	r0, #1
 80006ac:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80006b0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80006b2:	480f      	ldr	r0, [pc, #60]	; (80006f0 <rand+0x78>)
 80006b4:	690a      	ldr	r2, [r1, #16]
 80006b6:	694b      	ldr	r3, [r1, #20]
 80006b8:	4c0e      	ldr	r4, [pc, #56]	; (80006f4 <rand+0x7c>)
 80006ba:	4350      	muls	r0, r2
 80006bc:	fb04 0003 	mla	r0, r4, r3, r0
 80006c0:	fba2 3404 	umull	r3, r4, r2, r4
 80006c4:	1c5a      	adds	r2, r3, #1
 80006c6:	4404      	add	r4, r0
 80006c8:	f144 0000 	adc.w	r0, r4, #0
 80006cc:	e9c1 2004 	strd	r2, r0, [r1, #16]
 80006d0:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80006d4:	bd10      	pop	{r4, pc}
 80006d6:	bf00      	nop
 80006d8:	20000048 	.word	0x20000048
 80006dc:	08001d38 	.word	0x08001d38
 80006e0:	08001d4f 	.word	0x08001d4f
 80006e4:	abcd330e 	.word	0xabcd330e
 80006e8:	e66d1234 	.word	0xe66d1234
 80006ec:	0005deec 	.word	0x0005deec
 80006f0:	5851f42d 	.word	0x5851f42d
 80006f4:	4c957f2d 	.word	0x4c957f2d

080006f8 <__assert_func>:
 80006f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80006fa:	4614      	mov	r4, r2
 80006fc:	461a      	mov	r2, r3
 80006fe:	4b09      	ldr	r3, [pc, #36]	; (8000724 <__assert_func+0x2c>)
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	4605      	mov	r5, r0
 8000704:	68d8      	ldr	r0, [r3, #12]
 8000706:	b14c      	cbz	r4, 800071c <__assert_func+0x24>
 8000708:	4b07      	ldr	r3, [pc, #28]	; (8000728 <__assert_func+0x30>)
 800070a:	9100      	str	r1, [sp, #0]
 800070c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000710:	4906      	ldr	r1, [pc, #24]	; (800072c <__assert_func+0x34>)
 8000712:	462b      	mov	r3, r5
 8000714:	f000 f8e4 	bl	80008e0 <fiprintf>
 8000718:	f000 fe20 	bl	800135c <abort>
 800071c:	4b04      	ldr	r3, [pc, #16]	; (8000730 <__assert_func+0x38>)
 800071e:	461c      	mov	r4, r3
 8000720:	e7f3      	b.n	800070a <__assert_func+0x12>
 8000722:	bf00      	nop
 8000724:	20000048 	.word	0x20000048
 8000728:	08001dae 	.word	0x08001dae
 800072c:	08001dbb 	.word	0x08001dbb
 8000730:	08001de9 	.word	0x08001de9

08000734 <std>:
 8000734:	2300      	movs	r3, #0
 8000736:	b510      	push	{r4, lr}
 8000738:	4604      	mov	r4, r0
 800073a:	e9c0 3300 	strd	r3, r3, [r0]
 800073e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000742:	6083      	str	r3, [r0, #8]
 8000744:	8181      	strh	r1, [r0, #12]
 8000746:	6643      	str	r3, [r0, #100]	; 0x64
 8000748:	81c2      	strh	r2, [r0, #14]
 800074a:	6183      	str	r3, [r0, #24]
 800074c:	4619      	mov	r1, r3
 800074e:	2208      	movs	r2, #8
 8000750:	305c      	adds	r0, #92	; 0x5c
 8000752:	f7ff ff5d 	bl	8000610 <memset>
 8000756:	4b05      	ldr	r3, [pc, #20]	; (800076c <std+0x38>)
 8000758:	6263      	str	r3, [r4, #36]	; 0x24
 800075a:	4b05      	ldr	r3, [pc, #20]	; (8000770 <std+0x3c>)
 800075c:	62a3      	str	r3, [r4, #40]	; 0x28
 800075e:	4b05      	ldr	r3, [pc, #20]	; (8000774 <std+0x40>)
 8000760:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000762:	4b05      	ldr	r3, [pc, #20]	; (8000778 <std+0x44>)
 8000764:	6224      	str	r4, [r4, #32]
 8000766:	6323      	str	r3, [r4, #48]	; 0x30
 8000768:	bd10      	pop	{r4, pc}
 800076a:	bf00      	nop
 800076c:	08001131 	.word	0x08001131
 8000770:	08001153 	.word	0x08001153
 8000774:	0800118b 	.word	0x0800118b
 8000778:	080011af 	.word	0x080011af

0800077c <_cleanup_r>:
 800077c:	4901      	ldr	r1, [pc, #4]	; (8000784 <_cleanup_r+0x8>)
 800077e:	f000 b8c1 	b.w	8000904 <_fwalk_reent>
 8000782:	bf00      	nop
 8000784:	08001499 	.word	0x08001499

08000788 <__sfmoreglue>:
 8000788:	b570      	push	{r4, r5, r6, lr}
 800078a:	1e4a      	subs	r2, r1, #1
 800078c:	2568      	movs	r5, #104	; 0x68
 800078e:	4355      	muls	r5, r2
 8000790:	460e      	mov	r6, r1
 8000792:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000796:	f000 f92d 	bl	80009f4 <_malloc_r>
 800079a:	4604      	mov	r4, r0
 800079c:	b140      	cbz	r0, 80007b0 <__sfmoreglue+0x28>
 800079e:	2100      	movs	r1, #0
 80007a0:	e9c0 1600 	strd	r1, r6, [r0]
 80007a4:	300c      	adds	r0, #12
 80007a6:	60a0      	str	r0, [r4, #8]
 80007a8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80007ac:	f7ff ff30 	bl	8000610 <memset>
 80007b0:	4620      	mov	r0, r4
 80007b2:	bd70      	pop	{r4, r5, r6, pc}

080007b4 <__sfp_lock_acquire>:
 80007b4:	4801      	ldr	r0, [pc, #4]	; (80007bc <__sfp_lock_acquire+0x8>)
 80007b6:	f000 b8c5 	b.w	8000944 <__retarget_lock_acquire_recursive>
 80007ba:	bf00      	nop
 80007bc:	20000190 	.word	0x20000190

080007c0 <__sfp_lock_release>:
 80007c0:	4801      	ldr	r0, [pc, #4]	; (80007c8 <__sfp_lock_release+0x8>)
 80007c2:	f000 b8c0 	b.w	8000946 <__retarget_lock_release_recursive>
 80007c6:	bf00      	nop
 80007c8:	20000190 	.word	0x20000190

080007cc <__sinit_lock_acquire>:
 80007cc:	4801      	ldr	r0, [pc, #4]	; (80007d4 <__sinit_lock_acquire+0x8>)
 80007ce:	f000 b8b9 	b.w	8000944 <__retarget_lock_acquire_recursive>
 80007d2:	bf00      	nop
 80007d4:	2000018b 	.word	0x2000018b

080007d8 <__sinit_lock_release>:
 80007d8:	4801      	ldr	r0, [pc, #4]	; (80007e0 <__sinit_lock_release+0x8>)
 80007da:	f000 b8b4 	b.w	8000946 <__retarget_lock_release_recursive>
 80007de:	bf00      	nop
 80007e0:	2000018b 	.word	0x2000018b

080007e4 <__sinit>:
 80007e4:	b510      	push	{r4, lr}
 80007e6:	4604      	mov	r4, r0
 80007e8:	f7ff fff0 	bl	80007cc <__sinit_lock_acquire>
 80007ec:	69a3      	ldr	r3, [r4, #24]
 80007ee:	b11b      	cbz	r3, 80007f8 <__sinit+0x14>
 80007f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007f4:	f7ff bff0 	b.w	80007d8 <__sinit_lock_release>
 80007f8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80007fc:	6523      	str	r3, [r4, #80]	; 0x50
 80007fe:	4b13      	ldr	r3, [pc, #76]	; (800084c <__sinit+0x68>)
 8000800:	4a13      	ldr	r2, [pc, #76]	; (8000850 <__sinit+0x6c>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	62a2      	str	r2, [r4, #40]	; 0x28
 8000806:	42a3      	cmp	r3, r4
 8000808:	bf04      	itt	eq
 800080a:	2301      	moveq	r3, #1
 800080c:	61a3      	streq	r3, [r4, #24]
 800080e:	4620      	mov	r0, r4
 8000810:	f000 f820 	bl	8000854 <__sfp>
 8000814:	6060      	str	r0, [r4, #4]
 8000816:	4620      	mov	r0, r4
 8000818:	f000 f81c 	bl	8000854 <__sfp>
 800081c:	60a0      	str	r0, [r4, #8]
 800081e:	4620      	mov	r0, r4
 8000820:	f000 f818 	bl	8000854 <__sfp>
 8000824:	2200      	movs	r2, #0
 8000826:	60e0      	str	r0, [r4, #12]
 8000828:	2104      	movs	r1, #4
 800082a:	6860      	ldr	r0, [r4, #4]
 800082c:	f7ff ff82 	bl	8000734 <std>
 8000830:	68a0      	ldr	r0, [r4, #8]
 8000832:	2201      	movs	r2, #1
 8000834:	2109      	movs	r1, #9
 8000836:	f7ff ff7d 	bl	8000734 <std>
 800083a:	68e0      	ldr	r0, [r4, #12]
 800083c:	2202      	movs	r2, #2
 800083e:	2112      	movs	r1, #18
 8000840:	f7ff ff78 	bl	8000734 <std>
 8000844:	2301      	movs	r3, #1
 8000846:	61a3      	str	r3, [r4, #24]
 8000848:	e7d2      	b.n	80007f0 <__sinit+0xc>
 800084a:	bf00      	nop
 800084c:	08001d34 	.word	0x08001d34
 8000850:	0800077d 	.word	0x0800077d

08000854 <__sfp>:
 8000854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000856:	4607      	mov	r7, r0
 8000858:	f7ff ffac 	bl	80007b4 <__sfp_lock_acquire>
 800085c:	4b1e      	ldr	r3, [pc, #120]	; (80008d8 <__sfp+0x84>)
 800085e:	681e      	ldr	r6, [r3, #0]
 8000860:	69b3      	ldr	r3, [r6, #24]
 8000862:	b913      	cbnz	r3, 800086a <__sfp+0x16>
 8000864:	4630      	mov	r0, r6
 8000866:	f7ff ffbd 	bl	80007e4 <__sinit>
 800086a:	3648      	adds	r6, #72	; 0x48
 800086c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000870:	3b01      	subs	r3, #1
 8000872:	d503      	bpl.n	800087c <__sfp+0x28>
 8000874:	6833      	ldr	r3, [r6, #0]
 8000876:	b30b      	cbz	r3, 80008bc <__sfp+0x68>
 8000878:	6836      	ldr	r6, [r6, #0]
 800087a:	e7f7      	b.n	800086c <__sfp+0x18>
 800087c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000880:	b9d5      	cbnz	r5, 80008b8 <__sfp+0x64>
 8000882:	4b16      	ldr	r3, [pc, #88]	; (80008dc <__sfp+0x88>)
 8000884:	60e3      	str	r3, [r4, #12]
 8000886:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800088a:	6665      	str	r5, [r4, #100]	; 0x64
 800088c:	f000 f859 	bl	8000942 <__retarget_lock_init_recursive>
 8000890:	f7ff ff96 	bl	80007c0 <__sfp_lock_release>
 8000894:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000898:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800089c:	6025      	str	r5, [r4, #0]
 800089e:	61a5      	str	r5, [r4, #24]
 80008a0:	2208      	movs	r2, #8
 80008a2:	4629      	mov	r1, r5
 80008a4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80008a8:	f7ff feb2 	bl	8000610 <memset>
 80008ac:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80008b0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80008b4:	4620      	mov	r0, r4
 80008b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008b8:	3468      	adds	r4, #104	; 0x68
 80008ba:	e7d9      	b.n	8000870 <__sfp+0x1c>
 80008bc:	2104      	movs	r1, #4
 80008be:	4638      	mov	r0, r7
 80008c0:	f7ff ff62 	bl	8000788 <__sfmoreglue>
 80008c4:	4604      	mov	r4, r0
 80008c6:	6030      	str	r0, [r6, #0]
 80008c8:	2800      	cmp	r0, #0
 80008ca:	d1d5      	bne.n	8000878 <__sfp+0x24>
 80008cc:	f7ff ff78 	bl	80007c0 <__sfp_lock_release>
 80008d0:	230c      	movs	r3, #12
 80008d2:	603b      	str	r3, [r7, #0]
 80008d4:	e7ee      	b.n	80008b4 <__sfp+0x60>
 80008d6:	bf00      	nop
 80008d8:	08001d34 	.word	0x08001d34
 80008dc:	ffff0001 	.word	0xffff0001

080008e0 <fiprintf>:
 80008e0:	b40e      	push	{r1, r2, r3}
 80008e2:	b503      	push	{r0, r1, lr}
 80008e4:	4601      	mov	r1, r0
 80008e6:	ab03      	add	r3, sp, #12
 80008e8:	4805      	ldr	r0, [pc, #20]	; (8000900 <fiprintf+0x20>)
 80008ea:	f853 2b04 	ldr.w	r2, [r3], #4
 80008ee:	6800      	ldr	r0, [r0, #0]
 80008f0:	9301      	str	r3, [sp, #4]
 80008f2:	f000 f901 	bl	8000af8 <_vfiprintf_r>
 80008f6:	b002      	add	sp, #8
 80008f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80008fc:	b003      	add	sp, #12
 80008fe:	4770      	bx	lr
 8000900:	20000048 	.word	0x20000048

08000904 <_fwalk_reent>:
 8000904:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000908:	4606      	mov	r6, r0
 800090a:	4688      	mov	r8, r1
 800090c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000910:	2700      	movs	r7, #0
 8000912:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000916:	f1b9 0901 	subs.w	r9, r9, #1
 800091a:	d505      	bpl.n	8000928 <_fwalk_reent+0x24>
 800091c:	6824      	ldr	r4, [r4, #0]
 800091e:	2c00      	cmp	r4, #0
 8000920:	d1f7      	bne.n	8000912 <_fwalk_reent+0xe>
 8000922:	4638      	mov	r0, r7
 8000924:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000928:	89ab      	ldrh	r3, [r5, #12]
 800092a:	2b01      	cmp	r3, #1
 800092c:	d907      	bls.n	800093e <_fwalk_reent+0x3a>
 800092e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000932:	3301      	adds	r3, #1
 8000934:	d003      	beq.n	800093e <_fwalk_reent+0x3a>
 8000936:	4629      	mov	r1, r5
 8000938:	4630      	mov	r0, r6
 800093a:	47c0      	blx	r8
 800093c:	4307      	orrs	r7, r0
 800093e:	3568      	adds	r5, #104	; 0x68
 8000940:	e7e9      	b.n	8000916 <_fwalk_reent+0x12>

08000942 <__retarget_lock_init_recursive>:
 8000942:	4770      	bx	lr

08000944 <__retarget_lock_acquire_recursive>:
 8000944:	4770      	bx	lr

08000946 <__retarget_lock_release_recursive>:
 8000946:	4770      	bx	lr

08000948 <malloc>:
 8000948:	4b02      	ldr	r3, [pc, #8]	; (8000954 <malloc+0xc>)
 800094a:	4601      	mov	r1, r0
 800094c:	6818      	ldr	r0, [r3, #0]
 800094e:	f000 b851 	b.w	80009f4 <_malloc_r>
 8000952:	bf00      	nop
 8000954:	20000048 	.word	0x20000048

08000958 <_free_r>:
 8000958:	b538      	push	{r3, r4, r5, lr}
 800095a:	4605      	mov	r5, r0
 800095c:	2900      	cmp	r1, #0
 800095e:	d045      	beq.n	80009ec <_free_r+0x94>
 8000960:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000964:	1f0c      	subs	r4, r1, #4
 8000966:	2b00      	cmp	r3, #0
 8000968:	bfb8      	it	lt
 800096a:	18e4      	addlt	r4, r4, r3
 800096c:	f000 fe46 	bl	80015fc <__malloc_lock>
 8000970:	4a1f      	ldr	r2, [pc, #124]	; (80009f0 <_free_r+0x98>)
 8000972:	6813      	ldr	r3, [r2, #0]
 8000974:	4610      	mov	r0, r2
 8000976:	b933      	cbnz	r3, 8000986 <_free_r+0x2e>
 8000978:	6063      	str	r3, [r4, #4]
 800097a:	6014      	str	r4, [r2, #0]
 800097c:	4628      	mov	r0, r5
 800097e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000982:	f000 be41 	b.w	8001608 <__malloc_unlock>
 8000986:	42a3      	cmp	r3, r4
 8000988:	d90b      	bls.n	80009a2 <_free_r+0x4a>
 800098a:	6821      	ldr	r1, [r4, #0]
 800098c:	1862      	adds	r2, r4, r1
 800098e:	4293      	cmp	r3, r2
 8000990:	bf04      	itt	eq
 8000992:	681a      	ldreq	r2, [r3, #0]
 8000994:	685b      	ldreq	r3, [r3, #4]
 8000996:	6063      	str	r3, [r4, #4]
 8000998:	bf04      	itt	eq
 800099a:	1852      	addeq	r2, r2, r1
 800099c:	6022      	streq	r2, [r4, #0]
 800099e:	6004      	str	r4, [r0, #0]
 80009a0:	e7ec      	b.n	800097c <_free_r+0x24>
 80009a2:	461a      	mov	r2, r3
 80009a4:	685b      	ldr	r3, [r3, #4]
 80009a6:	b10b      	cbz	r3, 80009ac <_free_r+0x54>
 80009a8:	42a3      	cmp	r3, r4
 80009aa:	d9fa      	bls.n	80009a2 <_free_r+0x4a>
 80009ac:	6811      	ldr	r1, [r2, #0]
 80009ae:	1850      	adds	r0, r2, r1
 80009b0:	42a0      	cmp	r0, r4
 80009b2:	d10b      	bne.n	80009cc <_free_r+0x74>
 80009b4:	6820      	ldr	r0, [r4, #0]
 80009b6:	4401      	add	r1, r0
 80009b8:	1850      	adds	r0, r2, r1
 80009ba:	4283      	cmp	r3, r0
 80009bc:	6011      	str	r1, [r2, #0]
 80009be:	d1dd      	bne.n	800097c <_free_r+0x24>
 80009c0:	6818      	ldr	r0, [r3, #0]
 80009c2:	685b      	ldr	r3, [r3, #4]
 80009c4:	6053      	str	r3, [r2, #4]
 80009c6:	4401      	add	r1, r0
 80009c8:	6011      	str	r1, [r2, #0]
 80009ca:	e7d7      	b.n	800097c <_free_r+0x24>
 80009cc:	d902      	bls.n	80009d4 <_free_r+0x7c>
 80009ce:	230c      	movs	r3, #12
 80009d0:	602b      	str	r3, [r5, #0]
 80009d2:	e7d3      	b.n	800097c <_free_r+0x24>
 80009d4:	6820      	ldr	r0, [r4, #0]
 80009d6:	1821      	adds	r1, r4, r0
 80009d8:	428b      	cmp	r3, r1
 80009da:	bf04      	itt	eq
 80009dc:	6819      	ldreq	r1, [r3, #0]
 80009de:	685b      	ldreq	r3, [r3, #4]
 80009e0:	6063      	str	r3, [r4, #4]
 80009e2:	bf04      	itt	eq
 80009e4:	1809      	addeq	r1, r1, r0
 80009e6:	6021      	streq	r1, [r4, #0]
 80009e8:	6054      	str	r4, [r2, #4]
 80009ea:	e7c7      	b.n	800097c <_free_r+0x24>
 80009ec:	bd38      	pop	{r3, r4, r5, pc}
 80009ee:	bf00      	nop
 80009f0:	200000d4 	.word	0x200000d4

080009f4 <_malloc_r>:
 80009f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009f6:	1ccd      	adds	r5, r1, #3
 80009f8:	f025 0503 	bic.w	r5, r5, #3
 80009fc:	3508      	adds	r5, #8
 80009fe:	2d0c      	cmp	r5, #12
 8000a00:	bf38      	it	cc
 8000a02:	250c      	movcc	r5, #12
 8000a04:	2d00      	cmp	r5, #0
 8000a06:	4606      	mov	r6, r0
 8000a08:	db01      	blt.n	8000a0e <_malloc_r+0x1a>
 8000a0a:	42a9      	cmp	r1, r5
 8000a0c:	d903      	bls.n	8000a16 <_malloc_r+0x22>
 8000a0e:	230c      	movs	r3, #12
 8000a10:	6033      	str	r3, [r6, #0]
 8000a12:	2000      	movs	r0, #0
 8000a14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a16:	f000 fdf1 	bl	80015fc <__malloc_lock>
 8000a1a:	4921      	ldr	r1, [pc, #132]	; (8000aa0 <_malloc_r+0xac>)
 8000a1c:	680a      	ldr	r2, [r1, #0]
 8000a1e:	4614      	mov	r4, r2
 8000a20:	b99c      	cbnz	r4, 8000a4a <_malloc_r+0x56>
 8000a22:	4f20      	ldr	r7, [pc, #128]	; (8000aa4 <_malloc_r+0xb0>)
 8000a24:	683b      	ldr	r3, [r7, #0]
 8000a26:	b923      	cbnz	r3, 8000a32 <_malloc_r+0x3e>
 8000a28:	4621      	mov	r1, r4
 8000a2a:	4630      	mov	r0, r6
 8000a2c:	f000 fb70 	bl	8001110 <_sbrk_r>
 8000a30:	6038      	str	r0, [r7, #0]
 8000a32:	4629      	mov	r1, r5
 8000a34:	4630      	mov	r0, r6
 8000a36:	f000 fb6b 	bl	8001110 <_sbrk_r>
 8000a3a:	1c43      	adds	r3, r0, #1
 8000a3c:	d123      	bne.n	8000a86 <_malloc_r+0x92>
 8000a3e:	230c      	movs	r3, #12
 8000a40:	6033      	str	r3, [r6, #0]
 8000a42:	4630      	mov	r0, r6
 8000a44:	f000 fde0 	bl	8001608 <__malloc_unlock>
 8000a48:	e7e3      	b.n	8000a12 <_malloc_r+0x1e>
 8000a4a:	6823      	ldr	r3, [r4, #0]
 8000a4c:	1b5b      	subs	r3, r3, r5
 8000a4e:	d417      	bmi.n	8000a80 <_malloc_r+0x8c>
 8000a50:	2b0b      	cmp	r3, #11
 8000a52:	d903      	bls.n	8000a5c <_malloc_r+0x68>
 8000a54:	6023      	str	r3, [r4, #0]
 8000a56:	441c      	add	r4, r3
 8000a58:	6025      	str	r5, [r4, #0]
 8000a5a:	e004      	b.n	8000a66 <_malloc_r+0x72>
 8000a5c:	6863      	ldr	r3, [r4, #4]
 8000a5e:	42a2      	cmp	r2, r4
 8000a60:	bf0c      	ite	eq
 8000a62:	600b      	streq	r3, [r1, #0]
 8000a64:	6053      	strne	r3, [r2, #4]
 8000a66:	4630      	mov	r0, r6
 8000a68:	f000 fdce 	bl	8001608 <__malloc_unlock>
 8000a6c:	f104 000b 	add.w	r0, r4, #11
 8000a70:	1d23      	adds	r3, r4, #4
 8000a72:	f020 0007 	bic.w	r0, r0, #7
 8000a76:	1ac2      	subs	r2, r0, r3
 8000a78:	d0cc      	beq.n	8000a14 <_malloc_r+0x20>
 8000a7a:	1a1b      	subs	r3, r3, r0
 8000a7c:	50a3      	str	r3, [r4, r2]
 8000a7e:	e7c9      	b.n	8000a14 <_malloc_r+0x20>
 8000a80:	4622      	mov	r2, r4
 8000a82:	6864      	ldr	r4, [r4, #4]
 8000a84:	e7cc      	b.n	8000a20 <_malloc_r+0x2c>
 8000a86:	1cc4      	adds	r4, r0, #3
 8000a88:	f024 0403 	bic.w	r4, r4, #3
 8000a8c:	42a0      	cmp	r0, r4
 8000a8e:	d0e3      	beq.n	8000a58 <_malloc_r+0x64>
 8000a90:	1a21      	subs	r1, r4, r0
 8000a92:	4630      	mov	r0, r6
 8000a94:	f000 fb3c 	bl	8001110 <_sbrk_r>
 8000a98:	3001      	adds	r0, #1
 8000a9a:	d1dd      	bne.n	8000a58 <_malloc_r+0x64>
 8000a9c:	e7cf      	b.n	8000a3e <_malloc_r+0x4a>
 8000a9e:	bf00      	nop
 8000aa0:	200000d4 	.word	0x200000d4
 8000aa4:	200000d8 	.word	0x200000d8

08000aa8 <__sfputc_r>:
 8000aa8:	6893      	ldr	r3, [r2, #8]
 8000aaa:	3b01      	subs	r3, #1
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	b410      	push	{r4}
 8000ab0:	6093      	str	r3, [r2, #8]
 8000ab2:	da07      	bge.n	8000ac4 <__sfputc_r+0x1c>
 8000ab4:	6994      	ldr	r4, [r2, #24]
 8000ab6:	42a3      	cmp	r3, r4
 8000ab8:	db01      	blt.n	8000abe <__sfputc_r+0x16>
 8000aba:	290a      	cmp	r1, #10
 8000abc:	d102      	bne.n	8000ac4 <__sfputc_r+0x1c>
 8000abe:	bc10      	pop	{r4}
 8000ac0:	f000 bb7a 	b.w	80011b8 <__swbuf_r>
 8000ac4:	6813      	ldr	r3, [r2, #0]
 8000ac6:	1c58      	adds	r0, r3, #1
 8000ac8:	6010      	str	r0, [r2, #0]
 8000aca:	7019      	strb	r1, [r3, #0]
 8000acc:	4608      	mov	r0, r1
 8000ace:	bc10      	pop	{r4}
 8000ad0:	4770      	bx	lr

08000ad2 <__sfputs_r>:
 8000ad2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ad4:	4606      	mov	r6, r0
 8000ad6:	460f      	mov	r7, r1
 8000ad8:	4614      	mov	r4, r2
 8000ada:	18d5      	adds	r5, r2, r3
 8000adc:	42ac      	cmp	r4, r5
 8000ade:	d101      	bne.n	8000ae4 <__sfputs_r+0x12>
 8000ae0:	2000      	movs	r0, #0
 8000ae2:	e007      	b.n	8000af4 <__sfputs_r+0x22>
 8000ae4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ae8:	463a      	mov	r2, r7
 8000aea:	4630      	mov	r0, r6
 8000aec:	f7ff ffdc 	bl	8000aa8 <__sfputc_r>
 8000af0:	1c43      	adds	r3, r0, #1
 8000af2:	d1f3      	bne.n	8000adc <__sfputs_r+0xa>
 8000af4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000af8 <_vfiprintf_r>:
 8000af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000afc:	460d      	mov	r5, r1
 8000afe:	b09d      	sub	sp, #116	; 0x74
 8000b00:	4614      	mov	r4, r2
 8000b02:	4698      	mov	r8, r3
 8000b04:	4606      	mov	r6, r0
 8000b06:	b118      	cbz	r0, 8000b10 <_vfiprintf_r+0x18>
 8000b08:	6983      	ldr	r3, [r0, #24]
 8000b0a:	b90b      	cbnz	r3, 8000b10 <_vfiprintf_r+0x18>
 8000b0c:	f7ff fe6a 	bl	80007e4 <__sinit>
 8000b10:	4b89      	ldr	r3, [pc, #548]	; (8000d38 <_vfiprintf_r+0x240>)
 8000b12:	429d      	cmp	r5, r3
 8000b14:	d11b      	bne.n	8000b4e <_vfiprintf_r+0x56>
 8000b16:	6875      	ldr	r5, [r6, #4]
 8000b18:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b1a:	07d9      	lsls	r1, r3, #31
 8000b1c:	d405      	bmi.n	8000b2a <_vfiprintf_r+0x32>
 8000b1e:	89ab      	ldrh	r3, [r5, #12]
 8000b20:	059a      	lsls	r2, r3, #22
 8000b22:	d402      	bmi.n	8000b2a <_vfiprintf_r+0x32>
 8000b24:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b26:	f7ff ff0d 	bl	8000944 <__retarget_lock_acquire_recursive>
 8000b2a:	89ab      	ldrh	r3, [r5, #12]
 8000b2c:	071b      	lsls	r3, r3, #28
 8000b2e:	d501      	bpl.n	8000b34 <_vfiprintf_r+0x3c>
 8000b30:	692b      	ldr	r3, [r5, #16]
 8000b32:	b9eb      	cbnz	r3, 8000b70 <_vfiprintf_r+0x78>
 8000b34:	4629      	mov	r1, r5
 8000b36:	4630      	mov	r0, r6
 8000b38:	f000 fba2 	bl	8001280 <__swsetup_r>
 8000b3c:	b1c0      	cbz	r0, 8000b70 <_vfiprintf_r+0x78>
 8000b3e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b40:	07dc      	lsls	r4, r3, #31
 8000b42:	d50e      	bpl.n	8000b62 <_vfiprintf_r+0x6a>
 8000b44:	f04f 30ff 	mov.w	r0, #4294967295
 8000b48:	b01d      	add	sp, #116	; 0x74
 8000b4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b4e:	4b7b      	ldr	r3, [pc, #492]	; (8000d3c <_vfiprintf_r+0x244>)
 8000b50:	429d      	cmp	r5, r3
 8000b52:	d101      	bne.n	8000b58 <_vfiprintf_r+0x60>
 8000b54:	68b5      	ldr	r5, [r6, #8]
 8000b56:	e7df      	b.n	8000b18 <_vfiprintf_r+0x20>
 8000b58:	4b79      	ldr	r3, [pc, #484]	; (8000d40 <_vfiprintf_r+0x248>)
 8000b5a:	429d      	cmp	r5, r3
 8000b5c:	bf08      	it	eq
 8000b5e:	68f5      	ldreq	r5, [r6, #12]
 8000b60:	e7da      	b.n	8000b18 <_vfiprintf_r+0x20>
 8000b62:	89ab      	ldrh	r3, [r5, #12]
 8000b64:	0598      	lsls	r0, r3, #22
 8000b66:	d4ed      	bmi.n	8000b44 <_vfiprintf_r+0x4c>
 8000b68:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b6a:	f7ff feec 	bl	8000946 <__retarget_lock_release_recursive>
 8000b6e:	e7e9      	b.n	8000b44 <_vfiprintf_r+0x4c>
 8000b70:	2300      	movs	r3, #0
 8000b72:	9309      	str	r3, [sp, #36]	; 0x24
 8000b74:	2320      	movs	r3, #32
 8000b76:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b7a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b7e:	2330      	movs	r3, #48	; 0x30
 8000b80:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000d44 <_vfiprintf_r+0x24c>
 8000b84:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b88:	f04f 0901 	mov.w	r9, #1
 8000b8c:	4623      	mov	r3, r4
 8000b8e:	469a      	mov	sl, r3
 8000b90:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b94:	b10a      	cbz	r2, 8000b9a <_vfiprintf_r+0xa2>
 8000b96:	2a25      	cmp	r2, #37	; 0x25
 8000b98:	d1f9      	bne.n	8000b8e <_vfiprintf_r+0x96>
 8000b9a:	ebba 0b04 	subs.w	fp, sl, r4
 8000b9e:	d00b      	beq.n	8000bb8 <_vfiprintf_r+0xc0>
 8000ba0:	465b      	mov	r3, fp
 8000ba2:	4622      	mov	r2, r4
 8000ba4:	4629      	mov	r1, r5
 8000ba6:	4630      	mov	r0, r6
 8000ba8:	f7ff ff93 	bl	8000ad2 <__sfputs_r>
 8000bac:	3001      	adds	r0, #1
 8000bae:	f000 80aa 	beq.w	8000d06 <_vfiprintf_r+0x20e>
 8000bb2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000bb4:	445a      	add	r2, fp
 8000bb6:	9209      	str	r2, [sp, #36]	; 0x24
 8000bb8:	f89a 3000 	ldrb.w	r3, [sl]
 8000bbc:	2b00      	cmp	r3, #0
 8000bbe:	f000 80a2 	beq.w	8000d06 <_vfiprintf_r+0x20e>
 8000bc2:	2300      	movs	r3, #0
 8000bc4:	f04f 32ff 	mov.w	r2, #4294967295
 8000bc8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000bcc:	f10a 0a01 	add.w	sl, sl, #1
 8000bd0:	9304      	str	r3, [sp, #16]
 8000bd2:	9307      	str	r3, [sp, #28]
 8000bd4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000bd8:	931a      	str	r3, [sp, #104]	; 0x68
 8000bda:	4654      	mov	r4, sl
 8000bdc:	2205      	movs	r2, #5
 8000bde:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000be2:	4858      	ldr	r0, [pc, #352]	; (8000d44 <_vfiprintf_r+0x24c>)
 8000be4:	f7ff fb04 	bl	80001f0 <memchr>
 8000be8:	9a04      	ldr	r2, [sp, #16]
 8000bea:	b9d8      	cbnz	r0, 8000c24 <_vfiprintf_r+0x12c>
 8000bec:	06d1      	lsls	r1, r2, #27
 8000bee:	bf44      	itt	mi
 8000bf0:	2320      	movmi	r3, #32
 8000bf2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000bf6:	0713      	lsls	r3, r2, #28
 8000bf8:	bf44      	itt	mi
 8000bfa:	232b      	movmi	r3, #43	; 0x2b
 8000bfc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000c00:	f89a 3000 	ldrb.w	r3, [sl]
 8000c04:	2b2a      	cmp	r3, #42	; 0x2a
 8000c06:	d015      	beq.n	8000c34 <_vfiprintf_r+0x13c>
 8000c08:	9a07      	ldr	r2, [sp, #28]
 8000c0a:	4654      	mov	r4, sl
 8000c0c:	2000      	movs	r0, #0
 8000c0e:	f04f 0c0a 	mov.w	ip, #10
 8000c12:	4621      	mov	r1, r4
 8000c14:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000c18:	3b30      	subs	r3, #48	; 0x30
 8000c1a:	2b09      	cmp	r3, #9
 8000c1c:	d94e      	bls.n	8000cbc <_vfiprintf_r+0x1c4>
 8000c1e:	b1b0      	cbz	r0, 8000c4e <_vfiprintf_r+0x156>
 8000c20:	9207      	str	r2, [sp, #28]
 8000c22:	e014      	b.n	8000c4e <_vfiprintf_r+0x156>
 8000c24:	eba0 0308 	sub.w	r3, r0, r8
 8000c28:	fa09 f303 	lsl.w	r3, r9, r3
 8000c2c:	4313      	orrs	r3, r2
 8000c2e:	9304      	str	r3, [sp, #16]
 8000c30:	46a2      	mov	sl, r4
 8000c32:	e7d2      	b.n	8000bda <_vfiprintf_r+0xe2>
 8000c34:	9b03      	ldr	r3, [sp, #12]
 8000c36:	1d19      	adds	r1, r3, #4
 8000c38:	681b      	ldr	r3, [r3, #0]
 8000c3a:	9103      	str	r1, [sp, #12]
 8000c3c:	2b00      	cmp	r3, #0
 8000c3e:	bfbb      	ittet	lt
 8000c40:	425b      	neglt	r3, r3
 8000c42:	f042 0202 	orrlt.w	r2, r2, #2
 8000c46:	9307      	strge	r3, [sp, #28]
 8000c48:	9307      	strlt	r3, [sp, #28]
 8000c4a:	bfb8      	it	lt
 8000c4c:	9204      	strlt	r2, [sp, #16]
 8000c4e:	7823      	ldrb	r3, [r4, #0]
 8000c50:	2b2e      	cmp	r3, #46	; 0x2e
 8000c52:	d10c      	bne.n	8000c6e <_vfiprintf_r+0x176>
 8000c54:	7863      	ldrb	r3, [r4, #1]
 8000c56:	2b2a      	cmp	r3, #42	; 0x2a
 8000c58:	d135      	bne.n	8000cc6 <_vfiprintf_r+0x1ce>
 8000c5a:	9b03      	ldr	r3, [sp, #12]
 8000c5c:	1d1a      	adds	r2, r3, #4
 8000c5e:	681b      	ldr	r3, [r3, #0]
 8000c60:	9203      	str	r2, [sp, #12]
 8000c62:	2b00      	cmp	r3, #0
 8000c64:	bfb8      	it	lt
 8000c66:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c6a:	3402      	adds	r4, #2
 8000c6c:	9305      	str	r3, [sp, #20]
 8000c6e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000d54 <_vfiprintf_r+0x25c>
 8000c72:	7821      	ldrb	r1, [r4, #0]
 8000c74:	2203      	movs	r2, #3
 8000c76:	4650      	mov	r0, sl
 8000c78:	f7ff faba 	bl	80001f0 <memchr>
 8000c7c:	b140      	cbz	r0, 8000c90 <_vfiprintf_r+0x198>
 8000c7e:	2340      	movs	r3, #64	; 0x40
 8000c80:	eba0 000a 	sub.w	r0, r0, sl
 8000c84:	fa03 f000 	lsl.w	r0, r3, r0
 8000c88:	9b04      	ldr	r3, [sp, #16]
 8000c8a:	4303      	orrs	r3, r0
 8000c8c:	3401      	adds	r4, #1
 8000c8e:	9304      	str	r3, [sp, #16]
 8000c90:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c94:	482c      	ldr	r0, [pc, #176]	; (8000d48 <_vfiprintf_r+0x250>)
 8000c96:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c9a:	2206      	movs	r2, #6
 8000c9c:	f7ff faa8 	bl	80001f0 <memchr>
 8000ca0:	2800      	cmp	r0, #0
 8000ca2:	d03f      	beq.n	8000d24 <_vfiprintf_r+0x22c>
 8000ca4:	4b29      	ldr	r3, [pc, #164]	; (8000d4c <_vfiprintf_r+0x254>)
 8000ca6:	bb1b      	cbnz	r3, 8000cf0 <_vfiprintf_r+0x1f8>
 8000ca8:	9b03      	ldr	r3, [sp, #12]
 8000caa:	3307      	adds	r3, #7
 8000cac:	f023 0307 	bic.w	r3, r3, #7
 8000cb0:	3308      	adds	r3, #8
 8000cb2:	9303      	str	r3, [sp, #12]
 8000cb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000cb6:	443b      	add	r3, r7
 8000cb8:	9309      	str	r3, [sp, #36]	; 0x24
 8000cba:	e767      	b.n	8000b8c <_vfiprintf_r+0x94>
 8000cbc:	fb0c 3202 	mla	r2, ip, r2, r3
 8000cc0:	460c      	mov	r4, r1
 8000cc2:	2001      	movs	r0, #1
 8000cc4:	e7a5      	b.n	8000c12 <_vfiprintf_r+0x11a>
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	3401      	adds	r4, #1
 8000cca:	9305      	str	r3, [sp, #20]
 8000ccc:	4619      	mov	r1, r3
 8000cce:	f04f 0c0a 	mov.w	ip, #10
 8000cd2:	4620      	mov	r0, r4
 8000cd4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000cd8:	3a30      	subs	r2, #48	; 0x30
 8000cda:	2a09      	cmp	r2, #9
 8000cdc:	d903      	bls.n	8000ce6 <_vfiprintf_r+0x1ee>
 8000cde:	2b00      	cmp	r3, #0
 8000ce0:	d0c5      	beq.n	8000c6e <_vfiprintf_r+0x176>
 8000ce2:	9105      	str	r1, [sp, #20]
 8000ce4:	e7c3      	b.n	8000c6e <_vfiprintf_r+0x176>
 8000ce6:	fb0c 2101 	mla	r1, ip, r1, r2
 8000cea:	4604      	mov	r4, r0
 8000cec:	2301      	movs	r3, #1
 8000cee:	e7f0      	b.n	8000cd2 <_vfiprintf_r+0x1da>
 8000cf0:	ab03      	add	r3, sp, #12
 8000cf2:	9300      	str	r3, [sp, #0]
 8000cf4:	462a      	mov	r2, r5
 8000cf6:	4b16      	ldr	r3, [pc, #88]	; (8000d50 <_vfiprintf_r+0x258>)
 8000cf8:	a904      	add	r1, sp, #16
 8000cfa:	4630      	mov	r0, r6
 8000cfc:	f3af 8000 	nop.w
 8000d00:	4607      	mov	r7, r0
 8000d02:	1c78      	adds	r0, r7, #1
 8000d04:	d1d6      	bne.n	8000cb4 <_vfiprintf_r+0x1bc>
 8000d06:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d08:	07d9      	lsls	r1, r3, #31
 8000d0a:	d405      	bmi.n	8000d18 <_vfiprintf_r+0x220>
 8000d0c:	89ab      	ldrh	r3, [r5, #12]
 8000d0e:	059a      	lsls	r2, r3, #22
 8000d10:	d402      	bmi.n	8000d18 <_vfiprintf_r+0x220>
 8000d12:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d14:	f7ff fe17 	bl	8000946 <__retarget_lock_release_recursive>
 8000d18:	89ab      	ldrh	r3, [r5, #12]
 8000d1a:	065b      	lsls	r3, r3, #25
 8000d1c:	f53f af12 	bmi.w	8000b44 <_vfiprintf_r+0x4c>
 8000d20:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000d22:	e711      	b.n	8000b48 <_vfiprintf_r+0x50>
 8000d24:	ab03      	add	r3, sp, #12
 8000d26:	9300      	str	r3, [sp, #0]
 8000d28:	462a      	mov	r2, r5
 8000d2a:	4b09      	ldr	r3, [pc, #36]	; (8000d50 <_vfiprintf_r+0x258>)
 8000d2c:	a904      	add	r1, sp, #16
 8000d2e:	4630      	mov	r0, r6
 8000d30:	f000 f880 	bl	8000e34 <_printf_i>
 8000d34:	e7e4      	b.n	8000d00 <_vfiprintf_r+0x208>
 8000d36:	bf00      	nop
 8000d38:	08001e0c 	.word	0x08001e0c
 8000d3c:	08001e2c 	.word	0x08001e2c
 8000d40:	08001dec 	.word	0x08001dec
 8000d44:	08001e4c 	.word	0x08001e4c
 8000d48:	08001e56 	.word	0x08001e56
 8000d4c:	00000000 	.word	0x00000000
 8000d50:	08000ad3 	.word	0x08000ad3
 8000d54:	08001e52 	.word	0x08001e52

08000d58 <_printf_common>:
 8000d58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d5c:	4616      	mov	r6, r2
 8000d5e:	4699      	mov	r9, r3
 8000d60:	688a      	ldr	r2, [r1, #8]
 8000d62:	690b      	ldr	r3, [r1, #16]
 8000d64:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d68:	4293      	cmp	r3, r2
 8000d6a:	bfb8      	it	lt
 8000d6c:	4613      	movlt	r3, r2
 8000d6e:	6033      	str	r3, [r6, #0]
 8000d70:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d74:	4607      	mov	r7, r0
 8000d76:	460c      	mov	r4, r1
 8000d78:	b10a      	cbz	r2, 8000d7e <_printf_common+0x26>
 8000d7a:	3301      	adds	r3, #1
 8000d7c:	6033      	str	r3, [r6, #0]
 8000d7e:	6823      	ldr	r3, [r4, #0]
 8000d80:	0699      	lsls	r1, r3, #26
 8000d82:	bf42      	ittt	mi
 8000d84:	6833      	ldrmi	r3, [r6, #0]
 8000d86:	3302      	addmi	r3, #2
 8000d88:	6033      	strmi	r3, [r6, #0]
 8000d8a:	6825      	ldr	r5, [r4, #0]
 8000d8c:	f015 0506 	ands.w	r5, r5, #6
 8000d90:	d106      	bne.n	8000da0 <_printf_common+0x48>
 8000d92:	f104 0a19 	add.w	sl, r4, #25
 8000d96:	68e3      	ldr	r3, [r4, #12]
 8000d98:	6832      	ldr	r2, [r6, #0]
 8000d9a:	1a9b      	subs	r3, r3, r2
 8000d9c:	42ab      	cmp	r3, r5
 8000d9e:	dc26      	bgt.n	8000dee <_printf_common+0x96>
 8000da0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000da4:	1e13      	subs	r3, r2, #0
 8000da6:	6822      	ldr	r2, [r4, #0]
 8000da8:	bf18      	it	ne
 8000daa:	2301      	movne	r3, #1
 8000dac:	0692      	lsls	r2, r2, #26
 8000dae:	d42b      	bmi.n	8000e08 <_printf_common+0xb0>
 8000db0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000db4:	4649      	mov	r1, r9
 8000db6:	4638      	mov	r0, r7
 8000db8:	47c0      	blx	r8
 8000dba:	3001      	adds	r0, #1
 8000dbc:	d01e      	beq.n	8000dfc <_printf_common+0xa4>
 8000dbe:	6823      	ldr	r3, [r4, #0]
 8000dc0:	68e5      	ldr	r5, [r4, #12]
 8000dc2:	6832      	ldr	r2, [r6, #0]
 8000dc4:	f003 0306 	and.w	r3, r3, #6
 8000dc8:	2b04      	cmp	r3, #4
 8000dca:	bf08      	it	eq
 8000dcc:	1aad      	subeq	r5, r5, r2
 8000dce:	68a3      	ldr	r3, [r4, #8]
 8000dd0:	6922      	ldr	r2, [r4, #16]
 8000dd2:	bf0c      	ite	eq
 8000dd4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000dd8:	2500      	movne	r5, #0
 8000dda:	4293      	cmp	r3, r2
 8000ddc:	bfc4      	itt	gt
 8000dde:	1a9b      	subgt	r3, r3, r2
 8000de0:	18ed      	addgt	r5, r5, r3
 8000de2:	2600      	movs	r6, #0
 8000de4:	341a      	adds	r4, #26
 8000de6:	42b5      	cmp	r5, r6
 8000de8:	d11a      	bne.n	8000e20 <_printf_common+0xc8>
 8000dea:	2000      	movs	r0, #0
 8000dec:	e008      	b.n	8000e00 <_printf_common+0xa8>
 8000dee:	2301      	movs	r3, #1
 8000df0:	4652      	mov	r2, sl
 8000df2:	4649      	mov	r1, r9
 8000df4:	4638      	mov	r0, r7
 8000df6:	47c0      	blx	r8
 8000df8:	3001      	adds	r0, #1
 8000dfa:	d103      	bne.n	8000e04 <_printf_common+0xac>
 8000dfc:	f04f 30ff 	mov.w	r0, #4294967295
 8000e00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e04:	3501      	adds	r5, #1
 8000e06:	e7c6      	b.n	8000d96 <_printf_common+0x3e>
 8000e08:	18e1      	adds	r1, r4, r3
 8000e0a:	1c5a      	adds	r2, r3, #1
 8000e0c:	2030      	movs	r0, #48	; 0x30
 8000e0e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000e12:	4422      	add	r2, r4
 8000e14:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000e18:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000e1c:	3302      	adds	r3, #2
 8000e1e:	e7c7      	b.n	8000db0 <_printf_common+0x58>
 8000e20:	2301      	movs	r3, #1
 8000e22:	4622      	mov	r2, r4
 8000e24:	4649      	mov	r1, r9
 8000e26:	4638      	mov	r0, r7
 8000e28:	47c0      	blx	r8
 8000e2a:	3001      	adds	r0, #1
 8000e2c:	d0e6      	beq.n	8000dfc <_printf_common+0xa4>
 8000e2e:	3601      	adds	r6, #1
 8000e30:	e7d9      	b.n	8000de6 <_printf_common+0x8e>
	...

08000e34 <_printf_i>:
 8000e34:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000e38:	460c      	mov	r4, r1
 8000e3a:	4691      	mov	r9, r2
 8000e3c:	7e27      	ldrb	r7, [r4, #24]
 8000e3e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000e40:	2f78      	cmp	r7, #120	; 0x78
 8000e42:	4680      	mov	r8, r0
 8000e44:	469a      	mov	sl, r3
 8000e46:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000e4a:	d807      	bhi.n	8000e5c <_printf_i+0x28>
 8000e4c:	2f62      	cmp	r7, #98	; 0x62
 8000e4e:	d80a      	bhi.n	8000e66 <_printf_i+0x32>
 8000e50:	2f00      	cmp	r7, #0
 8000e52:	f000 80d8 	beq.w	8001006 <_printf_i+0x1d2>
 8000e56:	2f58      	cmp	r7, #88	; 0x58
 8000e58:	f000 80a3 	beq.w	8000fa2 <_printf_i+0x16e>
 8000e5c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000e60:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000e64:	e03a      	b.n	8000edc <_printf_i+0xa8>
 8000e66:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000e6a:	2b15      	cmp	r3, #21
 8000e6c:	d8f6      	bhi.n	8000e5c <_printf_i+0x28>
 8000e6e:	a001      	add	r0, pc, #4	; (adr r0, 8000e74 <_printf_i+0x40>)
 8000e70:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000e74:	08000ecd 	.word	0x08000ecd
 8000e78:	08000ee1 	.word	0x08000ee1
 8000e7c:	08000e5d 	.word	0x08000e5d
 8000e80:	08000e5d 	.word	0x08000e5d
 8000e84:	08000e5d 	.word	0x08000e5d
 8000e88:	08000e5d 	.word	0x08000e5d
 8000e8c:	08000ee1 	.word	0x08000ee1
 8000e90:	08000e5d 	.word	0x08000e5d
 8000e94:	08000e5d 	.word	0x08000e5d
 8000e98:	08000e5d 	.word	0x08000e5d
 8000e9c:	08000e5d 	.word	0x08000e5d
 8000ea0:	08000fed 	.word	0x08000fed
 8000ea4:	08000f11 	.word	0x08000f11
 8000ea8:	08000fcf 	.word	0x08000fcf
 8000eac:	08000e5d 	.word	0x08000e5d
 8000eb0:	08000e5d 	.word	0x08000e5d
 8000eb4:	0800100f 	.word	0x0800100f
 8000eb8:	08000e5d 	.word	0x08000e5d
 8000ebc:	08000f11 	.word	0x08000f11
 8000ec0:	08000e5d 	.word	0x08000e5d
 8000ec4:	08000e5d 	.word	0x08000e5d
 8000ec8:	08000fd7 	.word	0x08000fd7
 8000ecc:	680b      	ldr	r3, [r1, #0]
 8000ece:	1d1a      	adds	r2, r3, #4
 8000ed0:	681b      	ldr	r3, [r3, #0]
 8000ed2:	600a      	str	r2, [r1, #0]
 8000ed4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000ed8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000edc:	2301      	movs	r3, #1
 8000ede:	e0a3      	b.n	8001028 <_printf_i+0x1f4>
 8000ee0:	6825      	ldr	r5, [r4, #0]
 8000ee2:	6808      	ldr	r0, [r1, #0]
 8000ee4:	062e      	lsls	r6, r5, #24
 8000ee6:	f100 0304 	add.w	r3, r0, #4
 8000eea:	d50a      	bpl.n	8000f02 <_printf_i+0xce>
 8000eec:	6805      	ldr	r5, [r0, #0]
 8000eee:	600b      	str	r3, [r1, #0]
 8000ef0:	2d00      	cmp	r5, #0
 8000ef2:	da03      	bge.n	8000efc <_printf_i+0xc8>
 8000ef4:	232d      	movs	r3, #45	; 0x2d
 8000ef6:	426d      	negs	r5, r5
 8000ef8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000efc:	485e      	ldr	r0, [pc, #376]	; (8001078 <_printf_i+0x244>)
 8000efe:	230a      	movs	r3, #10
 8000f00:	e019      	b.n	8000f36 <_printf_i+0x102>
 8000f02:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000f06:	6805      	ldr	r5, [r0, #0]
 8000f08:	600b      	str	r3, [r1, #0]
 8000f0a:	bf18      	it	ne
 8000f0c:	b22d      	sxthne	r5, r5
 8000f0e:	e7ef      	b.n	8000ef0 <_printf_i+0xbc>
 8000f10:	680b      	ldr	r3, [r1, #0]
 8000f12:	6825      	ldr	r5, [r4, #0]
 8000f14:	1d18      	adds	r0, r3, #4
 8000f16:	6008      	str	r0, [r1, #0]
 8000f18:	0628      	lsls	r0, r5, #24
 8000f1a:	d501      	bpl.n	8000f20 <_printf_i+0xec>
 8000f1c:	681d      	ldr	r5, [r3, #0]
 8000f1e:	e002      	b.n	8000f26 <_printf_i+0xf2>
 8000f20:	0669      	lsls	r1, r5, #25
 8000f22:	d5fb      	bpl.n	8000f1c <_printf_i+0xe8>
 8000f24:	881d      	ldrh	r5, [r3, #0]
 8000f26:	4854      	ldr	r0, [pc, #336]	; (8001078 <_printf_i+0x244>)
 8000f28:	2f6f      	cmp	r7, #111	; 0x6f
 8000f2a:	bf0c      	ite	eq
 8000f2c:	2308      	moveq	r3, #8
 8000f2e:	230a      	movne	r3, #10
 8000f30:	2100      	movs	r1, #0
 8000f32:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000f36:	6866      	ldr	r6, [r4, #4]
 8000f38:	60a6      	str	r6, [r4, #8]
 8000f3a:	2e00      	cmp	r6, #0
 8000f3c:	bfa2      	ittt	ge
 8000f3e:	6821      	ldrge	r1, [r4, #0]
 8000f40:	f021 0104 	bicge.w	r1, r1, #4
 8000f44:	6021      	strge	r1, [r4, #0]
 8000f46:	b90d      	cbnz	r5, 8000f4c <_printf_i+0x118>
 8000f48:	2e00      	cmp	r6, #0
 8000f4a:	d04d      	beq.n	8000fe8 <_printf_i+0x1b4>
 8000f4c:	4616      	mov	r6, r2
 8000f4e:	fbb5 f1f3 	udiv	r1, r5, r3
 8000f52:	fb03 5711 	mls	r7, r3, r1, r5
 8000f56:	5dc7      	ldrb	r7, [r0, r7]
 8000f58:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000f5c:	462f      	mov	r7, r5
 8000f5e:	42bb      	cmp	r3, r7
 8000f60:	460d      	mov	r5, r1
 8000f62:	d9f4      	bls.n	8000f4e <_printf_i+0x11a>
 8000f64:	2b08      	cmp	r3, #8
 8000f66:	d10b      	bne.n	8000f80 <_printf_i+0x14c>
 8000f68:	6823      	ldr	r3, [r4, #0]
 8000f6a:	07df      	lsls	r7, r3, #31
 8000f6c:	d508      	bpl.n	8000f80 <_printf_i+0x14c>
 8000f6e:	6923      	ldr	r3, [r4, #16]
 8000f70:	6861      	ldr	r1, [r4, #4]
 8000f72:	4299      	cmp	r1, r3
 8000f74:	bfde      	ittt	le
 8000f76:	2330      	movle	r3, #48	; 0x30
 8000f78:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000f7c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000f80:	1b92      	subs	r2, r2, r6
 8000f82:	6122      	str	r2, [r4, #16]
 8000f84:	f8cd a000 	str.w	sl, [sp]
 8000f88:	464b      	mov	r3, r9
 8000f8a:	aa03      	add	r2, sp, #12
 8000f8c:	4621      	mov	r1, r4
 8000f8e:	4640      	mov	r0, r8
 8000f90:	f7ff fee2 	bl	8000d58 <_printf_common>
 8000f94:	3001      	adds	r0, #1
 8000f96:	d14c      	bne.n	8001032 <_printf_i+0x1fe>
 8000f98:	f04f 30ff 	mov.w	r0, #4294967295
 8000f9c:	b004      	add	sp, #16
 8000f9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fa2:	4835      	ldr	r0, [pc, #212]	; (8001078 <_printf_i+0x244>)
 8000fa4:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000fa8:	6823      	ldr	r3, [r4, #0]
 8000faa:	680e      	ldr	r6, [r1, #0]
 8000fac:	061f      	lsls	r7, r3, #24
 8000fae:	f856 5b04 	ldr.w	r5, [r6], #4
 8000fb2:	600e      	str	r6, [r1, #0]
 8000fb4:	d514      	bpl.n	8000fe0 <_printf_i+0x1ac>
 8000fb6:	07d9      	lsls	r1, r3, #31
 8000fb8:	bf44      	itt	mi
 8000fba:	f043 0320 	orrmi.w	r3, r3, #32
 8000fbe:	6023      	strmi	r3, [r4, #0]
 8000fc0:	b91d      	cbnz	r5, 8000fca <_printf_i+0x196>
 8000fc2:	6823      	ldr	r3, [r4, #0]
 8000fc4:	f023 0320 	bic.w	r3, r3, #32
 8000fc8:	6023      	str	r3, [r4, #0]
 8000fca:	2310      	movs	r3, #16
 8000fcc:	e7b0      	b.n	8000f30 <_printf_i+0xfc>
 8000fce:	6823      	ldr	r3, [r4, #0]
 8000fd0:	f043 0320 	orr.w	r3, r3, #32
 8000fd4:	6023      	str	r3, [r4, #0]
 8000fd6:	2378      	movs	r3, #120	; 0x78
 8000fd8:	4828      	ldr	r0, [pc, #160]	; (800107c <_printf_i+0x248>)
 8000fda:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000fde:	e7e3      	b.n	8000fa8 <_printf_i+0x174>
 8000fe0:	065e      	lsls	r6, r3, #25
 8000fe2:	bf48      	it	mi
 8000fe4:	b2ad      	uxthmi	r5, r5
 8000fe6:	e7e6      	b.n	8000fb6 <_printf_i+0x182>
 8000fe8:	4616      	mov	r6, r2
 8000fea:	e7bb      	b.n	8000f64 <_printf_i+0x130>
 8000fec:	680b      	ldr	r3, [r1, #0]
 8000fee:	6826      	ldr	r6, [r4, #0]
 8000ff0:	6960      	ldr	r0, [r4, #20]
 8000ff2:	1d1d      	adds	r5, r3, #4
 8000ff4:	600d      	str	r5, [r1, #0]
 8000ff6:	0635      	lsls	r5, r6, #24
 8000ff8:	681b      	ldr	r3, [r3, #0]
 8000ffa:	d501      	bpl.n	8001000 <_printf_i+0x1cc>
 8000ffc:	6018      	str	r0, [r3, #0]
 8000ffe:	e002      	b.n	8001006 <_printf_i+0x1d2>
 8001000:	0671      	lsls	r1, r6, #25
 8001002:	d5fb      	bpl.n	8000ffc <_printf_i+0x1c8>
 8001004:	8018      	strh	r0, [r3, #0]
 8001006:	2300      	movs	r3, #0
 8001008:	6123      	str	r3, [r4, #16]
 800100a:	4616      	mov	r6, r2
 800100c:	e7ba      	b.n	8000f84 <_printf_i+0x150>
 800100e:	680b      	ldr	r3, [r1, #0]
 8001010:	1d1a      	adds	r2, r3, #4
 8001012:	600a      	str	r2, [r1, #0]
 8001014:	681e      	ldr	r6, [r3, #0]
 8001016:	6862      	ldr	r2, [r4, #4]
 8001018:	2100      	movs	r1, #0
 800101a:	4630      	mov	r0, r6
 800101c:	f7ff f8e8 	bl	80001f0 <memchr>
 8001020:	b108      	cbz	r0, 8001026 <_printf_i+0x1f2>
 8001022:	1b80      	subs	r0, r0, r6
 8001024:	6060      	str	r0, [r4, #4]
 8001026:	6863      	ldr	r3, [r4, #4]
 8001028:	6123      	str	r3, [r4, #16]
 800102a:	2300      	movs	r3, #0
 800102c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001030:	e7a8      	b.n	8000f84 <_printf_i+0x150>
 8001032:	6923      	ldr	r3, [r4, #16]
 8001034:	4632      	mov	r2, r6
 8001036:	4649      	mov	r1, r9
 8001038:	4640      	mov	r0, r8
 800103a:	47d0      	blx	sl
 800103c:	3001      	adds	r0, #1
 800103e:	d0ab      	beq.n	8000f98 <_printf_i+0x164>
 8001040:	6823      	ldr	r3, [r4, #0]
 8001042:	079b      	lsls	r3, r3, #30
 8001044:	d413      	bmi.n	800106e <_printf_i+0x23a>
 8001046:	68e0      	ldr	r0, [r4, #12]
 8001048:	9b03      	ldr	r3, [sp, #12]
 800104a:	4298      	cmp	r0, r3
 800104c:	bfb8      	it	lt
 800104e:	4618      	movlt	r0, r3
 8001050:	e7a4      	b.n	8000f9c <_printf_i+0x168>
 8001052:	2301      	movs	r3, #1
 8001054:	4632      	mov	r2, r6
 8001056:	4649      	mov	r1, r9
 8001058:	4640      	mov	r0, r8
 800105a:	47d0      	blx	sl
 800105c:	3001      	adds	r0, #1
 800105e:	d09b      	beq.n	8000f98 <_printf_i+0x164>
 8001060:	3501      	adds	r5, #1
 8001062:	68e3      	ldr	r3, [r4, #12]
 8001064:	9903      	ldr	r1, [sp, #12]
 8001066:	1a5b      	subs	r3, r3, r1
 8001068:	42ab      	cmp	r3, r5
 800106a:	dcf2      	bgt.n	8001052 <_printf_i+0x21e>
 800106c:	e7eb      	b.n	8001046 <_printf_i+0x212>
 800106e:	2500      	movs	r5, #0
 8001070:	f104 0619 	add.w	r6, r4, #25
 8001074:	e7f5      	b.n	8001062 <_printf_i+0x22e>
 8001076:	bf00      	nop
 8001078:	08001e5d 	.word	0x08001e5d
 800107c:	08001e6e 	.word	0x08001e6e

08001080 <_putc_r>:
 8001080:	b570      	push	{r4, r5, r6, lr}
 8001082:	460d      	mov	r5, r1
 8001084:	4614      	mov	r4, r2
 8001086:	4606      	mov	r6, r0
 8001088:	b118      	cbz	r0, 8001092 <_putc_r+0x12>
 800108a:	6983      	ldr	r3, [r0, #24]
 800108c:	b90b      	cbnz	r3, 8001092 <_putc_r+0x12>
 800108e:	f7ff fba9 	bl	80007e4 <__sinit>
 8001092:	4b1c      	ldr	r3, [pc, #112]	; (8001104 <_putc_r+0x84>)
 8001094:	429c      	cmp	r4, r3
 8001096:	d124      	bne.n	80010e2 <_putc_r+0x62>
 8001098:	6874      	ldr	r4, [r6, #4]
 800109a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800109c:	07d8      	lsls	r0, r3, #31
 800109e:	d405      	bmi.n	80010ac <_putc_r+0x2c>
 80010a0:	89a3      	ldrh	r3, [r4, #12]
 80010a2:	0599      	lsls	r1, r3, #22
 80010a4:	d402      	bmi.n	80010ac <_putc_r+0x2c>
 80010a6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010a8:	f7ff fc4c 	bl	8000944 <__retarget_lock_acquire_recursive>
 80010ac:	68a3      	ldr	r3, [r4, #8]
 80010ae:	3b01      	subs	r3, #1
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	60a3      	str	r3, [r4, #8]
 80010b4:	da05      	bge.n	80010c2 <_putc_r+0x42>
 80010b6:	69a2      	ldr	r2, [r4, #24]
 80010b8:	4293      	cmp	r3, r2
 80010ba:	db1c      	blt.n	80010f6 <_putc_r+0x76>
 80010bc:	b2eb      	uxtb	r3, r5
 80010be:	2b0a      	cmp	r3, #10
 80010c0:	d019      	beq.n	80010f6 <_putc_r+0x76>
 80010c2:	6823      	ldr	r3, [r4, #0]
 80010c4:	1c5a      	adds	r2, r3, #1
 80010c6:	6022      	str	r2, [r4, #0]
 80010c8:	701d      	strb	r5, [r3, #0]
 80010ca:	b2ed      	uxtb	r5, r5
 80010cc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80010ce:	07da      	lsls	r2, r3, #31
 80010d0:	d405      	bmi.n	80010de <_putc_r+0x5e>
 80010d2:	89a3      	ldrh	r3, [r4, #12]
 80010d4:	059b      	lsls	r3, r3, #22
 80010d6:	d402      	bmi.n	80010de <_putc_r+0x5e>
 80010d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010da:	f7ff fc34 	bl	8000946 <__retarget_lock_release_recursive>
 80010de:	4628      	mov	r0, r5
 80010e0:	bd70      	pop	{r4, r5, r6, pc}
 80010e2:	4b09      	ldr	r3, [pc, #36]	; (8001108 <_putc_r+0x88>)
 80010e4:	429c      	cmp	r4, r3
 80010e6:	d101      	bne.n	80010ec <_putc_r+0x6c>
 80010e8:	68b4      	ldr	r4, [r6, #8]
 80010ea:	e7d6      	b.n	800109a <_putc_r+0x1a>
 80010ec:	4b07      	ldr	r3, [pc, #28]	; (800110c <_putc_r+0x8c>)
 80010ee:	429c      	cmp	r4, r3
 80010f0:	bf08      	it	eq
 80010f2:	68f4      	ldreq	r4, [r6, #12]
 80010f4:	e7d1      	b.n	800109a <_putc_r+0x1a>
 80010f6:	4629      	mov	r1, r5
 80010f8:	4622      	mov	r2, r4
 80010fa:	4630      	mov	r0, r6
 80010fc:	f000 f85c 	bl	80011b8 <__swbuf_r>
 8001100:	4605      	mov	r5, r0
 8001102:	e7e3      	b.n	80010cc <_putc_r+0x4c>
 8001104:	08001e0c 	.word	0x08001e0c
 8001108:	08001e2c 	.word	0x08001e2c
 800110c:	08001dec 	.word	0x08001dec

08001110 <_sbrk_r>:
 8001110:	b538      	push	{r3, r4, r5, lr}
 8001112:	4d06      	ldr	r5, [pc, #24]	; (800112c <_sbrk_r+0x1c>)
 8001114:	2300      	movs	r3, #0
 8001116:	4604      	mov	r4, r0
 8001118:	4608      	mov	r0, r1
 800111a:	602b      	str	r3, [r5, #0]
 800111c:	f7ff f9ee 	bl	80004fc <_sbrk>
 8001120:	1c43      	adds	r3, r0, #1
 8001122:	d102      	bne.n	800112a <_sbrk_r+0x1a>
 8001124:	682b      	ldr	r3, [r5, #0]
 8001126:	b103      	cbz	r3, 800112a <_sbrk_r+0x1a>
 8001128:	6023      	str	r3, [r4, #0]
 800112a:	bd38      	pop	{r3, r4, r5, pc}
 800112c:	20000194 	.word	0x20000194

08001130 <__sread>:
 8001130:	b510      	push	{r4, lr}
 8001132:	460c      	mov	r4, r1
 8001134:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001138:	f000 fa6c 	bl	8001614 <_read_r>
 800113c:	2800      	cmp	r0, #0
 800113e:	bfab      	itete	ge
 8001140:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001142:	89a3      	ldrhlt	r3, [r4, #12]
 8001144:	181b      	addge	r3, r3, r0
 8001146:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800114a:	bfac      	ite	ge
 800114c:	6563      	strge	r3, [r4, #84]	; 0x54
 800114e:	81a3      	strhlt	r3, [r4, #12]
 8001150:	bd10      	pop	{r4, pc}

08001152 <__swrite>:
 8001152:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001156:	461f      	mov	r7, r3
 8001158:	898b      	ldrh	r3, [r1, #12]
 800115a:	05db      	lsls	r3, r3, #23
 800115c:	4605      	mov	r5, r0
 800115e:	460c      	mov	r4, r1
 8001160:	4616      	mov	r6, r2
 8001162:	d505      	bpl.n	8001170 <__swrite+0x1e>
 8001164:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001168:	2302      	movs	r3, #2
 800116a:	2200      	movs	r2, #0
 800116c:	f000 f9d0 	bl	8001510 <_lseek_r>
 8001170:	89a3      	ldrh	r3, [r4, #12]
 8001172:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001176:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800117a:	81a3      	strh	r3, [r4, #12]
 800117c:	4632      	mov	r2, r6
 800117e:	463b      	mov	r3, r7
 8001180:	4628      	mov	r0, r5
 8001182:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001186:	f000 b869 	b.w	800125c <_write_r>

0800118a <__sseek>:
 800118a:	b510      	push	{r4, lr}
 800118c:	460c      	mov	r4, r1
 800118e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001192:	f000 f9bd 	bl	8001510 <_lseek_r>
 8001196:	1c43      	adds	r3, r0, #1
 8001198:	89a3      	ldrh	r3, [r4, #12]
 800119a:	bf15      	itete	ne
 800119c:	6560      	strne	r0, [r4, #84]	; 0x54
 800119e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80011a2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80011a6:	81a3      	strheq	r3, [r4, #12]
 80011a8:	bf18      	it	ne
 80011aa:	81a3      	strhne	r3, [r4, #12]
 80011ac:	bd10      	pop	{r4, pc}

080011ae <__sclose>:
 80011ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011b2:	f000 b8db 	b.w	800136c <_close_r>
	...

080011b8 <__swbuf_r>:
 80011b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011ba:	460e      	mov	r6, r1
 80011bc:	4614      	mov	r4, r2
 80011be:	4605      	mov	r5, r0
 80011c0:	b118      	cbz	r0, 80011ca <__swbuf_r+0x12>
 80011c2:	6983      	ldr	r3, [r0, #24]
 80011c4:	b90b      	cbnz	r3, 80011ca <__swbuf_r+0x12>
 80011c6:	f7ff fb0d 	bl	80007e4 <__sinit>
 80011ca:	4b21      	ldr	r3, [pc, #132]	; (8001250 <__swbuf_r+0x98>)
 80011cc:	429c      	cmp	r4, r3
 80011ce:	d12b      	bne.n	8001228 <__swbuf_r+0x70>
 80011d0:	686c      	ldr	r4, [r5, #4]
 80011d2:	69a3      	ldr	r3, [r4, #24]
 80011d4:	60a3      	str	r3, [r4, #8]
 80011d6:	89a3      	ldrh	r3, [r4, #12]
 80011d8:	071a      	lsls	r2, r3, #28
 80011da:	d52f      	bpl.n	800123c <__swbuf_r+0x84>
 80011dc:	6923      	ldr	r3, [r4, #16]
 80011de:	b36b      	cbz	r3, 800123c <__swbuf_r+0x84>
 80011e0:	6923      	ldr	r3, [r4, #16]
 80011e2:	6820      	ldr	r0, [r4, #0]
 80011e4:	1ac0      	subs	r0, r0, r3
 80011e6:	6963      	ldr	r3, [r4, #20]
 80011e8:	b2f6      	uxtb	r6, r6
 80011ea:	4283      	cmp	r3, r0
 80011ec:	4637      	mov	r7, r6
 80011ee:	dc04      	bgt.n	80011fa <__swbuf_r+0x42>
 80011f0:	4621      	mov	r1, r4
 80011f2:	4628      	mov	r0, r5
 80011f4:	f000 f950 	bl	8001498 <_fflush_r>
 80011f8:	bb30      	cbnz	r0, 8001248 <__swbuf_r+0x90>
 80011fa:	68a3      	ldr	r3, [r4, #8]
 80011fc:	3b01      	subs	r3, #1
 80011fe:	60a3      	str	r3, [r4, #8]
 8001200:	6823      	ldr	r3, [r4, #0]
 8001202:	1c5a      	adds	r2, r3, #1
 8001204:	6022      	str	r2, [r4, #0]
 8001206:	701e      	strb	r6, [r3, #0]
 8001208:	6963      	ldr	r3, [r4, #20]
 800120a:	3001      	adds	r0, #1
 800120c:	4283      	cmp	r3, r0
 800120e:	d004      	beq.n	800121a <__swbuf_r+0x62>
 8001210:	89a3      	ldrh	r3, [r4, #12]
 8001212:	07db      	lsls	r3, r3, #31
 8001214:	d506      	bpl.n	8001224 <__swbuf_r+0x6c>
 8001216:	2e0a      	cmp	r6, #10
 8001218:	d104      	bne.n	8001224 <__swbuf_r+0x6c>
 800121a:	4621      	mov	r1, r4
 800121c:	4628      	mov	r0, r5
 800121e:	f000 f93b 	bl	8001498 <_fflush_r>
 8001222:	b988      	cbnz	r0, 8001248 <__swbuf_r+0x90>
 8001224:	4638      	mov	r0, r7
 8001226:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001228:	4b0a      	ldr	r3, [pc, #40]	; (8001254 <__swbuf_r+0x9c>)
 800122a:	429c      	cmp	r4, r3
 800122c:	d101      	bne.n	8001232 <__swbuf_r+0x7a>
 800122e:	68ac      	ldr	r4, [r5, #8]
 8001230:	e7cf      	b.n	80011d2 <__swbuf_r+0x1a>
 8001232:	4b09      	ldr	r3, [pc, #36]	; (8001258 <__swbuf_r+0xa0>)
 8001234:	429c      	cmp	r4, r3
 8001236:	bf08      	it	eq
 8001238:	68ec      	ldreq	r4, [r5, #12]
 800123a:	e7ca      	b.n	80011d2 <__swbuf_r+0x1a>
 800123c:	4621      	mov	r1, r4
 800123e:	4628      	mov	r0, r5
 8001240:	f000 f81e 	bl	8001280 <__swsetup_r>
 8001244:	2800      	cmp	r0, #0
 8001246:	d0cb      	beq.n	80011e0 <__swbuf_r+0x28>
 8001248:	f04f 37ff 	mov.w	r7, #4294967295
 800124c:	e7ea      	b.n	8001224 <__swbuf_r+0x6c>
 800124e:	bf00      	nop
 8001250:	08001e0c 	.word	0x08001e0c
 8001254:	08001e2c 	.word	0x08001e2c
 8001258:	08001dec 	.word	0x08001dec

0800125c <_write_r>:
 800125c:	b538      	push	{r3, r4, r5, lr}
 800125e:	4d07      	ldr	r5, [pc, #28]	; (800127c <_write_r+0x20>)
 8001260:	4604      	mov	r4, r0
 8001262:	4608      	mov	r0, r1
 8001264:	4611      	mov	r1, r2
 8001266:	2200      	movs	r2, #0
 8001268:	602a      	str	r2, [r5, #0]
 800126a:	461a      	mov	r2, r3
 800126c:	f000 fafa 	bl	8001864 <_write>
 8001270:	1c43      	adds	r3, r0, #1
 8001272:	d102      	bne.n	800127a <_write_r+0x1e>
 8001274:	682b      	ldr	r3, [r5, #0]
 8001276:	b103      	cbz	r3, 800127a <_write_r+0x1e>
 8001278:	6023      	str	r3, [r4, #0]
 800127a:	bd38      	pop	{r3, r4, r5, pc}
 800127c:	20000194 	.word	0x20000194

08001280 <__swsetup_r>:
 8001280:	4b32      	ldr	r3, [pc, #200]	; (800134c <__swsetup_r+0xcc>)
 8001282:	b570      	push	{r4, r5, r6, lr}
 8001284:	681d      	ldr	r5, [r3, #0]
 8001286:	4606      	mov	r6, r0
 8001288:	460c      	mov	r4, r1
 800128a:	b125      	cbz	r5, 8001296 <__swsetup_r+0x16>
 800128c:	69ab      	ldr	r3, [r5, #24]
 800128e:	b913      	cbnz	r3, 8001296 <__swsetup_r+0x16>
 8001290:	4628      	mov	r0, r5
 8001292:	f7ff faa7 	bl	80007e4 <__sinit>
 8001296:	4b2e      	ldr	r3, [pc, #184]	; (8001350 <__swsetup_r+0xd0>)
 8001298:	429c      	cmp	r4, r3
 800129a:	d10f      	bne.n	80012bc <__swsetup_r+0x3c>
 800129c:	686c      	ldr	r4, [r5, #4]
 800129e:	89a3      	ldrh	r3, [r4, #12]
 80012a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80012a4:	0719      	lsls	r1, r3, #28
 80012a6:	d42c      	bmi.n	8001302 <__swsetup_r+0x82>
 80012a8:	06dd      	lsls	r5, r3, #27
 80012aa:	d411      	bmi.n	80012d0 <__swsetup_r+0x50>
 80012ac:	2309      	movs	r3, #9
 80012ae:	6033      	str	r3, [r6, #0]
 80012b0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80012b4:	81a3      	strh	r3, [r4, #12]
 80012b6:	f04f 30ff 	mov.w	r0, #4294967295
 80012ba:	e03e      	b.n	800133a <__swsetup_r+0xba>
 80012bc:	4b25      	ldr	r3, [pc, #148]	; (8001354 <__swsetup_r+0xd4>)
 80012be:	429c      	cmp	r4, r3
 80012c0:	d101      	bne.n	80012c6 <__swsetup_r+0x46>
 80012c2:	68ac      	ldr	r4, [r5, #8]
 80012c4:	e7eb      	b.n	800129e <__swsetup_r+0x1e>
 80012c6:	4b24      	ldr	r3, [pc, #144]	; (8001358 <__swsetup_r+0xd8>)
 80012c8:	429c      	cmp	r4, r3
 80012ca:	bf08      	it	eq
 80012cc:	68ec      	ldreq	r4, [r5, #12]
 80012ce:	e7e6      	b.n	800129e <__swsetup_r+0x1e>
 80012d0:	0758      	lsls	r0, r3, #29
 80012d2:	d512      	bpl.n	80012fa <__swsetup_r+0x7a>
 80012d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012d6:	b141      	cbz	r1, 80012ea <__swsetup_r+0x6a>
 80012d8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012dc:	4299      	cmp	r1, r3
 80012de:	d002      	beq.n	80012e6 <__swsetup_r+0x66>
 80012e0:	4630      	mov	r0, r6
 80012e2:	f7ff fb39 	bl	8000958 <_free_r>
 80012e6:	2300      	movs	r3, #0
 80012e8:	6363      	str	r3, [r4, #52]	; 0x34
 80012ea:	89a3      	ldrh	r3, [r4, #12]
 80012ec:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80012f0:	81a3      	strh	r3, [r4, #12]
 80012f2:	2300      	movs	r3, #0
 80012f4:	6063      	str	r3, [r4, #4]
 80012f6:	6923      	ldr	r3, [r4, #16]
 80012f8:	6023      	str	r3, [r4, #0]
 80012fa:	89a3      	ldrh	r3, [r4, #12]
 80012fc:	f043 0308 	orr.w	r3, r3, #8
 8001300:	81a3      	strh	r3, [r4, #12]
 8001302:	6923      	ldr	r3, [r4, #16]
 8001304:	b94b      	cbnz	r3, 800131a <__swsetup_r+0x9a>
 8001306:	89a3      	ldrh	r3, [r4, #12]
 8001308:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800130c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001310:	d003      	beq.n	800131a <__swsetup_r+0x9a>
 8001312:	4621      	mov	r1, r4
 8001314:	4630      	mov	r0, r6
 8001316:	f000 f931 	bl	800157c <__smakebuf_r>
 800131a:	89a0      	ldrh	r0, [r4, #12]
 800131c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001320:	f010 0301 	ands.w	r3, r0, #1
 8001324:	d00a      	beq.n	800133c <__swsetup_r+0xbc>
 8001326:	2300      	movs	r3, #0
 8001328:	60a3      	str	r3, [r4, #8]
 800132a:	6963      	ldr	r3, [r4, #20]
 800132c:	425b      	negs	r3, r3
 800132e:	61a3      	str	r3, [r4, #24]
 8001330:	6923      	ldr	r3, [r4, #16]
 8001332:	b943      	cbnz	r3, 8001346 <__swsetup_r+0xc6>
 8001334:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001338:	d1ba      	bne.n	80012b0 <__swsetup_r+0x30>
 800133a:	bd70      	pop	{r4, r5, r6, pc}
 800133c:	0781      	lsls	r1, r0, #30
 800133e:	bf58      	it	pl
 8001340:	6963      	ldrpl	r3, [r4, #20]
 8001342:	60a3      	str	r3, [r4, #8]
 8001344:	e7f4      	b.n	8001330 <__swsetup_r+0xb0>
 8001346:	2000      	movs	r0, #0
 8001348:	e7f7      	b.n	800133a <__swsetup_r+0xba>
 800134a:	bf00      	nop
 800134c:	20000048 	.word	0x20000048
 8001350:	08001e0c 	.word	0x08001e0c
 8001354:	08001e2c 	.word	0x08001e2c
 8001358:	08001dec 	.word	0x08001dec

0800135c <abort>:
 800135c:	b508      	push	{r3, lr}
 800135e:	2006      	movs	r0, #6
 8001360:	f000 f992 	bl	8001688 <raise>
 8001364:	2001      	movs	r0, #1
 8001366:	f000 fc81 	bl	8001c6c <_exit>
	...

0800136c <_close_r>:
 800136c:	b538      	push	{r3, r4, r5, lr}
 800136e:	4d06      	ldr	r5, [pc, #24]	; (8001388 <_close_r+0x1c>)
 8001370:	2300      	movs	r3, #0
 8001372:	4604      	mov	r4, r0
 8001374:	4608      	mov	r0, r1
 8001376:	602b      	str	r3, [r5, #0]
 8001378:	f000 faa2 	bl	80018c0 <_close>
 800137c:	1c43      	adds	r3, r0, #1
 800137e:	d102      	bne.n	8001386 <_close_r+0x1a>
 8001380:	682b      	ldr	r3, [r5, #0]
 8001382:	b103      	cbz	r3, 8001386 <_close_r+0x1a>
 8001384:	6023      	str	r3, [r4, #0]
 8001386:	bd38      	pop	{r3, r4, r5, pc}
 8001388:	20000194 	.word	0x20000194

0800138c <__sflush_r>:
 800138c:	898a      	ldrh	r2, [r1, #12]
 800138e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001392:	4605      	mov	r5, r0
 8001394:	0710      	lsls	r0, r2, #28
 8001396:	460c      	mov	r4, r1
 8001398:	d458      	bmi.n	800144c <__sflush_r+0xc0>
 800139a:	684b      	ldr	r3, [r1, #4]
 800139c:	2b00      	cmp	r3, #0
 800139e:	dc05      	bgt.n	80013ac <__sflush_r+0x20>
 80013a0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80013a2:	2b00      	cmp	r3, #0
 80013a4:	dc02      	bgt.n	80013ac <__sflush_r+0x20>
 80013a6:	2000      	movs	r0, #0
 80013a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80013ac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80013ae:	2e00      	cmp	r6, #0
 80013b0:	d0f9      	beq.n	80013a6 <__sflush_r+0x1a>
 80013b2:	2300      	movs	r3, #0
 80013b4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80013b8:	682f      	ldr	r7, [r5, #0]
 80013ba:	602b      	str	r3, [r5, #0]
 80013bc:	d032      	beq.n	8001424 <__sflush_r+0x98>
 80013be:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80013c0:	89a3      	ldrh	r3, [r4, #12]
 80013c2:	075a      	lsls	r2, r3, #29
 80013c4:	d505      	bpl.n	80013d2 <__sflush_r+0x46>
 80013c6:	6863      	ldr	r3, [r4, #4]
 80013c8:	1ac0      	subs	r0, r0, r3
 80013ca:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80013cc:	b10b      	cbz	r3, 80013d2 <__sflush_r+0x46>
 80013ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80013d0:	1ac0      	subs	r0, r0, r3
 80013d2:	2300      	movs	r3, #0
 80013d4:	4602      	mov	r2, r0
 80013d6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80013d8:	6a21      	ldr	r1, [r4, #32]
 80013da:	4628      	mov	r0, r5
 80013dc:	47b0      	blx	r6
 80013de:	1c43      	adds	r3, r0, #1
 80013e0:	89a3      	ldrh	r3, [r4, #12]
 80013e2:	d106      	bne.n	80013f2 <__sflush_r+0x66>
 80013e4:	6829      	ldr	r1, [r5, #0]
 80013e6:	291d      	cmp	r1, #29
 80013e8:	d82c      	bhi.n	8001444 <__sflush_r+0xb8>
 80013ea:	4a2a      	ldr	r2, [pc, #168]	; (8001494 <__sflush_r+0x108>)
 80013ec:	40ca      	lsrs	r2, r1
 80013ee:	07d6      	lsls	r6, r2, #31
 80013f0:	d528      	bpl.n	8001444 <__sflush_r+0xb8>
 80013f2:	2200      	movs	r2, #0
 80013f4:	6062      	str	r2, [r4, #4]
 80013f6:	04d9      	lsls	r1, r3, #19
 80013f8:	6922      	ldr	r2, [r4, #16]
 80013fa:	6022      	str	r2, [r4, #0]
 80013fc:	d504      	bpl.n	8001408 <__sflush_r+0x7c>
 80013fe:	1c42      	adds	r2, r0, #1
 8001400:	d101      	bne.n	8001406 <__sflush_r+0x7a>
 8001402:	682b      	ldr	r3, [r5, #0]
 8001404:	b903      	cbnz	r3, 8001408 <__sflush_r+0x7c>
 8001406:	6560      	str	r0, [r4, #84]	; 0x54
 8001408:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800140a:	602f      	str	r7, [r5, #0]
 800140c:	2900      	cmp	r1, #0
 800140e:	d0ca      	beq.n	80013a6 <__sflush_r+0x1a>
 8001410:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001414:	4299      	cmp	r1, r3
 8001416:	d002      	beq.n	800141e <__sflush_r+0x92>
 8001418:	4628      	mov	r0, r5
 800141a:	f7ff fa9d 	bl	8000958 <_free_r>
 800141e:	2000      	movs	r0, #0
 8001420:	6360      	str	r0, [r4, #52]	; 0x34
 8001422:	e7c1      	b.n	80013a8 <__sflush_r+0x1c>
 8001424:	6a21      	ldr	r1, [r4, #32]
 8001426:	2301      	movs	r3, #1
 8001428:	4628      	mov	r0, r5
 800142a:	47b0      	blx	r6
 800142c:	1c41      	adds	r1, r0, #1
 800142e:	d1c7      	bne.n	80013c0 <__sflush_r+0x34>
 8001430:	682b      	ldr	r3, [r5, #0]
 8001432:	2b00      	cmp	r3, #0
 8001434:	d0c4      	beq.n	80013c0 <__sflush_r+0x34>
 8001436:	2b1d      	cmp	r3, #29
 8001438:	d001      	beq.n	800143e <__sflush_r+0xb2>
 800143a:	2b16      	cmp	r3, #22
 800143c:	d101      	bne.n	8001442 <__sflush_r+0xb6>
 800143e:	602f      	str	r7, [r5, #0]
 8001440:	e7b1      	b.n	80013a6 <__sflush_r+0x1a>
 8001442:	89a3      	ldrh	r3, [r4, #12]
 8001444:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001448:	81a3      	strh	r3, [r4, #12]
 800144a:	e7ad      	b.n	80013a8 <__sflush_r+0x1c>
 800144c:	690f      	ldr	r7, [r1, #16]
 800144e:	2f00      	cmp	r7, #0
 8001450:	d0a9      	beq.n	80013a6 <__sflush_r+0x1a>
 8001452:	0793      	lsls	r3, r2, #30
 8001454:	680e      	ldr	r6, [r1, #0]
 8001456:	bf08      	it	eq
 8001458:	694b      	ldreq	r3, [r1, #20]
 800145a:	600f      	str	r7, [r1, #0]
 800145c:	bf18      	it	ne
 800145e:	2300      	movne	r3, #0
 8001460:	eba6 0807 	sub.w	r8, r6, r7
 8001464:	608b      	str	r3, [r1, #8]
 8001466:	f1b8 0f00 	cmp.w	r8, #0
 800146a:	dd9c      	ble.n	80013a6 <__sflush_r+0x1a>
 800146c:	6a21      	ldr	r1, [r4, #32]
 800146e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001470:	4643      	mov	r3, r8
 8001472:	463a      	mov	r2, r7
 8001474:	4628      	mov	r0, r5
 8001476:	47b0      	blx	r6
 8001478:	2800      	cmp	r0, #0
 800147a:	dc06      	bgt.n	800148a <__sflush_r+0xfe>
 800147c:	89a3      	ldrh	r3, [r4, #12]
 800147e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001482:	81a3      	strh	r3, [r4, #12]
 8001484:	f04f 30ff 	mov.w	r0, #4294967295
 8001488:	e78e      	b.n	80013a8 <__sflush_r+0x1c>
 800148a:	4407      	add	r7, r0
 800148c:	eba8 0800 	sub.w	r8, r8, r0
 8001490:	e7e9      	b.n	8001466 <__sflush_r+0xda>
 8001492:	bf00      	nop
 8001494:	20400001 	.word	0x20400001

08001498 <_fflush_r>:
 8001498:	b538      	push	{r3, r4, r5, lr}
 800149a:	690b      	ldr	r3, [r1, #16]
 800149c:	4605      	mov	r5, r0
 800149e:	460c      	mov	r4, r1
 80014a0:	b913      	cbnz	r3, 80014a8 <_fflush_r+0x10>
 80014a2:	2500      	movs	r5, #0
 80014a4:	4628      	mov	r0, r5
 80014a6:	bd38      	pop	{r3, r4, r5, pc}
 80014a8:	b118      	cbz	r0, 80014b2 <_fflush_r+0x1a>
 80014aa:	6983      	ldr	r3, [r0, #24]
 80014ac:	b90b      	cbnz	r3, 80014b2 <_fflush_r+0x1a>
 80014ae:	f7ff f999 	bl	80007e4 <__sinit>
 80014b2:	4b14      	ldr	r3, [pc, #80]	; (8001504 <_fflush_r+0x6c>)
 80014b4:	429c      	cmp	r4, r3
 80014b6:	d11b      	bne.n	80014f0 <_fflush_r+0x58>
 80014b8:	686c      	ldr	r4, [r5, #4]
 80014ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014be:	2b00      	cmp	r3, #0
 80014c0:	d0ef      	beq.n	80014a2 <_fflush_r+0xa>
 80014c2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80014c4:	07d0      	lsls	r0, r2, #31
 80014c6:	d404      	bmi.n	80014d2 <_fflush_r+0x3a>
 80014c8:	0599      	lsls	r1, r3, #22
 80014ca:	d402      	bmi.n	80014d2 <_fflush_r+0x3a>
 80014cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80014ce:	f7ff fa39 	bl	8000944 <__retarget_lock_acquire_recursive>
 80014d2:	4628      	mov	r0, r5
 80014d4:	4621      	mov	r1, r4
 80014d6:	f7ff ff59 	bl	800138c <__sflush_r>
 80014da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80014dc:	07da      	lsls	r2, r3, #31
 80014de:	4605      	mov	r5, r0
 80014e0:	d4e0      	bmi.n	80014a4 <_fflush_r+0xc>
 80014e2:	89a3      	ldrh	r3, [r4, #12]
 80014e4:	059b      	lsls	r3, r3, #22
 80014e6:	d4dd      	bmi.n	80014a4 <_fflush_r+0xc>
 80014e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80014ea:	f7ff fa2c 	bl	8000946 <__retarget_lock_release_recursive>
 80014ee:	e7d9      	b.n	80014a4 <_fflush_r+0xc>
 80014f0:	4b05      	ldr	r3, [pc, #20]	; (8001508 <_fflush_r+0x70>)
 80014f2:	429c      	cmp	r4, r3
 80014f4:	d101      	bne.n	80014fa <_fflush_r+0x62>
 80014f6:	68ac      	ldr	r4, [r5, #8]
 80014f8:	e7df      	b.n	80014ba <_fflush_r+0x22>
 80014fa:	4b04      	ldr	r3, [pc, #16]	; (800150c <_fflush_r+0x74>)
 80014fc:	429c      	cmp	r4, r3
 80014fe:	bf08      	it	eq
 8001500:	68ec      	ldreq	r4, [r5, #12]
 8001502:	e7da      	b.n	80014ba <_fflush_r+0x22>
 8001504:	08001e0c 	.word	0x08001e0c
 8001508:	08001e2c 	.word	0x08001e2c
 800150c:	08001dec 	.word	0x08001dec

08001510 <_lseek_r>:
 8001510:	b538      	push	{r3, r4, r5, lr}
 8001512:	4d07      	ldr	r5, [pc, #28]	; (8001530 <_lseek_r+0x20>)
 8001514:	4604      	mov	r4, r0
 8001516:	4608      	mov	r0, r1
 8001518:	4611      	mov	r1, r2
 800151a:	2200      	movs	r2, #0
 800151c:	602a      	str	r2, [r5, #0]
 800151e:	461a      	mov	r2, r3
 8001520:	f000 f98e 	bl	8001840 <_lseek>
 8001524:	1c43      	adds	r3, r0, #1
 8001526:	d102      	bne.n	800152e <_lseek_r+0x1e>
 8001528:	682b      	ldr	r3, [r5, #0]
 800152a:	b103      	cbz	r3, 800152e <_lseek_r+0x1e>
 800152c:	6023      	str	r3, [r4, #0]
 800152e:	bd38      	pop	{r3, r4, r5, pc}
 8001530:	20000194 	.word	0x20000194

08001534 <__swhatbuf_r>:
 8001534:	b570      	push	{r4, r5, r6, lr}
 8001536:	460e      	mov	r6, r1
 8001538:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800153c:	2900      	cmp	r1, #0
 800153e:	b096      	sub	sp, #88	; 0x58
 8001540:	4614      	mov	r4, r2
 8001542:	461d      	mov	r5, r3
 8001544:	da07      	bge.n	8001556 <__swhatbuf_r+0x22>
 8001546:	2300      	movs	r3, #0
 8001548:	602b      	str	r3, [r5, #0]
 800154a:	89b3      	ldrh	r3, [r6, #12]
 800154c:	061a      	lsls	r2, r3, #24
 800154e:	d410      	bmi.n	8001572 <__swhatbuf_r+0x3e>
 8001550:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001554:	e00e      	b.n	8001574 <__swhatbuf_r+0x40>
 8001556:	466a      	mov	r2, sp
 8001558:	f000 f8b2 	bl	80016c0 <_fstat_r>
 800155c:	2800      	cmp	r0, #0
 800155e:	dbf2      	blt.n	8001546 <__swhatbuf_r+0x12>
 8001560:	9a01      	ldr	r2, [sp, #4]
 8001562:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001566:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800156a:	425a      	negs	r2, r3
 800156c:	415a      	adcs	r2, r3
 800156e:	602a      	str	r2, [r5, #0]
 8001570:	e7ee      	b.n	8001550 <__swhatbuf_r+0x1c>
 8001572:	2340      	movs	r3, #64	; 0x40
 8001574:	2000      	movs	r0, #0
 8001576:	6023      	str	r3, [r4, #0]
 8001578:	b016      	add	sp, #88	; 0x58
 800157a:	bd70      	pop	{r4, r5, r6, pc}

0800157c <__smakebuf_r>:
 800157c:	898b      	ldrh	r3, [r1, #12]
 800157e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001580:	079d      	lsls	r5, r3, #30
 8001582:	4606      	mov	r6, r0
 8001584:	460c      	mov	r4, r1
 8001586:	d507      	bpl.n	8001598 <__smakebuf_r+0x1c>
 8001588:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800158c:	6023      	str	r3, [r4, #0]
 800158e:	6123      	str	r3, [r4, #16]
 8001590:	2301      	movs	r3, #1
 8001592:	6163      	str	r3, [r4, #20]
 8001594:	b002      	add	sp, #8
 8001596:	bd70      	pop	{r4, r5, r6, pc}
 8001598:	ab01      	add	r3, sp, #4
 800159a:	466a      	mov	r2, sp
 800159c:	f7ff ffca 	bl	8001534 <__swhatbuf_r>
 80015a0:	9900      	ldr	r1, [sp, #0]
 80015a2:	4605      	mov	r5, r0
 80015a4:	4630      	mov	r0, r6
 80015a6:	f7ff fa25 	bl	80009f4 <_malloc_r>
 80015aa:	b948      	cbnz	r0, 80015c0 <__smakebuf_r+0x44>
 80015ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80015b0:	059a      	lsls	r2, r3, #22
 80015b2:	d4ef      	bmi.n	8001594 <__smakebuf_r+0x18>
 80015b4:	f023 0303 	bic.w	r3, r3, #3
 80015b8:	f043 0302 	orr.w	r3, r3, #2
 80015bc:	81a3      	strh	r3, [r4, #12]
 80015be:	e7e3      	b.n	8001588 <__smakebuf_r+0xc>
 80015c0:	4b0d      	ldr	r3, [pc, #52]	; (80015f8 <__smakebuf_r+0x7c>)
 80015c2:	62b3      	str	r3, [r6, #40]	; 0x28
 80015c4:	89a3      	ldrh	r3, [r4, #12]
 80015c6:	6020      	str	r0, [r4, #0]
 80015c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80015cc:	81a3      	strh	r3, [r4, #12]
 80015ce:	9b00      	ldr	r3, [sp, #0]
 80015d0:	6163      	str	r3, [r4, #20]
 80015d2:	9b01      	ldr	r3, [sp, #4]
 80015d4:	6120      	str	r0, [r4, #16]
 80015d6:	b15b      	cbz	r3, 80015f0 <__smakebuf_r+0x74>
 80015d8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80015dc:	4630      	mov	r0, r6
 80015de:	f000 f881 	bl	80016e4 <_isatty_r>
 80015e2:	b128      	cbz	r0, 80015f0 <__smakebuf_r+0x74>
 80015e4:	89a3      	ldrh	r3, [r4, #12]
 80015e6:	f023 0303 	bic.w	r3, r3, #3
 80015ea:	f043 0301 	orr.w	r3, r3, #1
 80015ee:	81a3      	strh	r3, [r4, #12]
 80015f0:	89a0      	ldrh	r0, [r4, #12]
 80015f2:	4305      	orrs	r5, r0
 80015f4:	81a5      	strh	r5, [r4, #12]
 80015f6:	e7cd      	b.n	8001594 <__smakebuf_r+0x18>
 80015f8:	0800077d 	.word	0x0800077d

080015fc <__malloc_lock>:
 80015fc:	4801      	ldr	r0, [pc, #4]	; (8001604 <__malloc_lock+0x8>)
 80015fe:	f7ff b9a1 	b.w	8000944 <__retarget_lock_acquire_recursive>
 8001602:	bf00      	nop
 8001604:	2000018c 	.word	0x2000018c

08001608 <__malloc_unlock>:
 8001608:	4801      	ldr	r0, [pc, #4]	; (8001610 <__malloc_unlock+0x8>)
 800160a:	f7ff b99c 	b.w	8000946 <__retarget_lock_release_recursive>
 800160e:	bf00      	nop
 8001610:	2000018c 	.word	0x2000018c

08001614 <_read_r>:
 8001614:	b538      	push	{r3, r4, r5, lr}
 8001616:	4d07      	ldr	r5, [pc, #28]	; (8001634 <_read_r+0x20>)
 8001618:	4604      	mov	r4, r0
 800161a:	4608      	mov	r0, r1
 800161c:	4611      	mov	r1, r2
 800161e:	2200      	movs	r2, #0
 8001620:	602a      	str	r2, [r5, #0]
 8001622:	461a      	mov	r2, r3
 8001624:	f000 f8b6 	bl	8001794 <_read>
 8001628:	1c43      	adds	r3, r0, #1
 800162a:	d102      	bne.n	8001632 <_read_r+0x1e>
 800162c:	682b      	ldr	r3, [r5, #0]
 800162e:	b103      	cbz	r3, 8001632 <_read_r+0x1e>
 8001630:	6023      	str	r3, [r4, #0]
 8001632:	bd38      	pop	{r3, r4, r5, pc}
 8001634:	20000194 	.word	0x20000194

08001638 <_raise_r>:
 8001638:	291f      	cmp	r1, #31
 800163a:	b538      	push	{r3, r4, r5, lr}
 800163c:	4604      	mov	r4, r0
 800163e:	460d      	mov	r5, r1
 8001640:	d904      	bls.n	800164c <_raise_r+0x14>
 8001642:	2316      	movs	r3, #22
 8001644:	6003      	str	r3, [r0, #0]
 8001646:	f04f 30ff 	mov.w	r0, #4294967295
 800164a:	bd38      	pop	{r3, r4, r5, pc}
 800164c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800164e:	b112      	cbz	r2, 8001656 <_raise_r+0x1e>
 8001650:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001654:	b94b      	cbnz	r3, 800166a <_raise_r+0x32>
 8001656:	4620      	mov	r0, r4
 8001658:	f000 f830 	bl	80016bc <_getpid_r>
 800165c:	462a      	mov	r2, r5
 800165e:	4601      	mov	r1, r0
 8001660:	4620      	mov	r0, r4
 8001662:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001666:	f000 b817 	b.w	8001698 <_kill_r>
 800166a:	2b01      	cmp	r3, #1
 800166c:	d00a      	beq.n	8001684 <_raise_r+0x4c>
 800166e:	1c59      	adds	r1, r3, #1
 8001670:	d103      	bne.n	800167a <_raise_r+0x42>
 8001672:	2316      	movs	r3, #22
 8001674:	6003      	str	r3, [r0, #0]
 8001676:	2001      	movs	r0, #1
 8001678:	e7e7      	b.n	800164a <_raise_r+0x12>
 800167a:	2400      	movs	r4, #0
 800167c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8001680:	4628      	mov	r0, r5
 8001682:	4798      	blx	r3
 8001684:	2000      	movs	r0, #0
 8001686:	e7e0      	b.n	800164a <_raise_r+0x12>

08001688 <raise>:
 8001688:	4b02      	ldr	r3, [pc, #8]	; (8001694 <raise+0xc>)
 800168a:	4601      	mov	r1, r0
 800168c:	6818      	ldr	r0, [r3, #0]
 800168e:	f7ff bfd3 	b.w	8001638 <_raise_r>
 8001692:	bf00      	nop
 8001694:	20000048 	.word	0x20000048

08001698 <_kill_r>:
 8001698:	b538      	push	{r3, r4, r5, lr}
 800169a:	4d07      	ldr	r5, [pc, #28]	; (80016b8 <_kill_r+0x20>)
 800169c:	2300      	movs	r3, #0
 800169e:	4604      	mov	r4, r0
 80016a0:	4608      	mov	r0, r1
 80016a2:	4611      	mov	r1, r2
 80016a4:	602b      	str	r3, [r5, #0]
 80016a6:	f000 faff 	bl	8001ca8 <_kill>
 80016aa:	1c43      	adds	r3, r0, #1
 80016ac:	d102      	bne.n	80016b4 <_kill_r+0x1c>
 80016ae:	682b      	ldr	r3, [r5, #0]
 80016b0:	b103      	cbz	r3, 80016b4 <_kill_r+0x1c>
 80016b2:	6023      	str	r3, [r4, #0]
 80016b4:	bd38      	pop	{r3, r4, r5, pc}
 80016b6:	bf00      	nop
 80016b8:	20000194 	.word	0x20000194

080016bc <_getpid_r>:
 80016bc:	f000 b926 	b.w	800190c <_getpid>

080016c0 <_fstat_r>:
 80016c0:	b538      	push	{r3, r4, r5, lr}
 80016c2:	4d07      	ldr	r5, [pc, #28]	; (80016e0 <_fstat_r+0x20>)
 80016c4:	2300      	movs	r3, #0
 80016c6:	4604      	mov	r4, r0
 80016c8:	4608      	mov	r0, r1
 80016ca:	4611      	mov	r1, r2
 80016cc:	602b      	str	r3, [r5, #0]
 80016ce:	f000 f940 	bl	8001952 <_fstat>
 80016d2:	1c43      	adds	r3, r0, #1
 80016d4:	d102      	bne.n	80016dc <_fstat_r+0x1c>
 80016d6:	682b      	ldr	r3, [r5, #0]
 80016d8:	b103      	cbz	r3, 80016dc <_fstat_r+0x1c>
 80016da:	6023      	str	r3, [r4, #0]
 80016dc:	bd38      	pop	{r3, r4, r5, pc}
 80016de:	bf00      	nop
 80016e0:	20000194 	.word	0x20000194

080016e4 <_isatty_r>:
 80016e4:	b538      	push	{r3, r4, r5, lr}
 80016e6:	4d06      	ldr	r5, [pc, #24]	; (8001700 <_isatty_r+0x1c>)
 80016e8:	2300      	movs	r3, #0
 80016ea:	4604      	mov	r4, r0
 80016ec:	4608      	mov	r0, r1
 80016ee:	602b      	str	r3, [r5, #0]
 80016f0:	f000 faa0 	bl	8001c34 <_isatty>
 80016f4:	1c43      	adds	r3, r0, #1
 80016f6:	d102      	bne.n	80016fe <_isatty_r+0x1a>
 80016f8:	682b      	ldr	r3, [r5, #0]
 80016fa:	b103      	cbz	r3, 80016fe <_isatty_r+0x1a>
 80016fc:	6023      	str	r3, [r4, #0]
 80016fe:	bd38      	pop	{r3, r4, r5, pc}
 8001700:	20000194 	.word	0x20000194

08001704 <findslot>:
 8001704:	4b0a      	ldr	r3, [pc, #40]	; (8001730 <findslot+0x2c>)
 8001706:	b510      	push	{r4, lr}
 8001708:	4604      	mov	r4, r0
 800170a:	6818      	ldr	r0, [r3, #0]
 800170c:	b118      	cbz	r0, 8001716 <findslot+0x12>
 800170e:	6983      	ldr	r3, [r0, #24]
 8001710:	b90b      	cbnz	r3, 8001716 <findslot+0x12>
 8001712:	f7ff f867 	bl	80007e4 <__sinit>
 8001716:	2c13      	cmp	r4, #19
 8001718:	d807      	bhi.n	800172a <findslot+0x26>
 800171a:	4806      	ldr	r0, [pc, #24]	; (8001734 <findslot+0x30>)
 800171c:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8001720:	3201      	adds	r2, #1
 8001722:	d002      	beq.n	800172a <findslot+0x26>
 8001724:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8001728:	bd10      	pop	{r4, pc}
 800172a:	2000      	movs	r0, #0
 800172c:	e7fc      	b.n	8001728 <findslot+0x24>
 800172e:	bf00      	nop
 8001730:	20000048 	.word	0x20000048
 8001734:	200000e8 	.word	0x200000e8

08001738 <checkerror>:
 8001738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800173a:	1c43      	adds	r3, r0, #1
 800173c:	4604      	mov	r4, r0
 800173e:	d109      	bne.n	8001754 <checkerror+0x1c>
 8001740:	f7fe ff3c 	bl	80005bc <__errno>
 8001744:	2613      	movs	r6, #19
 8001746:	4605      	mov	r5, r0
 8001748:	2700      	movs	r7, #0
 800174a:	4630      	mov	r0, r6
 800174c:	4639      	mov	r1, r7
 800174e:	beab      	bkpt	0x00ab
 8001750:	4606      	mov	r6, r0
 8001752:	602e      	str	r6, [r5, #0]
 8001754:	4620      	mov	r0, r4
 8001756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001758 <error>:
 8001758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800175a:	4604      	mov	r4, r0
 800175c:	f7fe ff2e 	bl	80005bc <__errno>
 8001760:	2613      	movs	r6, #19
 8001762:	4605      	mov	r5, r0
 8001764:	2700      	movs	r7, #0
 8001766:	4630      	mov	r0, r6
 8001768:	4639      	mov	r1, r7
 800176a:	beab      	bkpt	0x00ab
 800176c:	4606      	mov	r6, r0
 800176e:	602e      	str	r6, [r5, #0]
 8001770:	4620      	mov	r0, r4
 8001772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001774 <_swiread>:
 8001774:	b530      	push	{r4, r5, lr}
 8001776:	b085      	sub	sp, #20
 8001778:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800177c:	9203      	str	r2, [sp, #12]
 800177e:	2406      	movs	r4, #6
 8001780:	ad01      	add	r5, sp, #4
 8001782:	4620      	mov	r0, r4
 8001784:	4629      	mov	r1, r5
 8001786:	beab      	bkpt	0x00ab
 8001788:	4604      	mov	r4, r0
 800178a:	4620      	mov	r0, r4
 800178c:	f7ff ffd4 	bl	8001738 <checkerror>
 8001790:	b005      	add	sp, #20
 8001792:	bd30      	pop	{r4, r5, pc}

08001794 <_read>:
 8001794:	b570      	push	{r4, r5, r6, lr}
 8001796:	460e      	mov	r6, r1
 8001798:	4615      	mov	r5, r2
 800179a:	f7ff ffb3 	bl	8001704 <findslot>
 800179e:	4604      	mov	r4, r0
 80017a0:	b930      	cbnz	r0, 80017b0 <_read+0x1c>
 80017a2:	f7fe ff0b 	bl	80005bc <__errno>
 80017a6:	2309      	movs	r3, #9
 80017a8:	6003      	str	r3, [r0, #0]
 80017aa:	f04f 30ff 	mov.w	r0, #4294967295
 80017ae:	bd70      	pop	{r4, r5, r6, pc}
 80017b0:	6800      	ldr	r0, [r0, #0]
 80017b2:	462a      	mov	r2, r5
 80017b4:	4631      	mov	r1, r6
 80017b6:	f7ff ffdd 	bl	8001774 <_swiread>
 80017ba:	1c43      	adds	r3, r0, #1
 80017bc:	bf1f      	itttt	ne
 80017be:	6863      	ldrne	r3, [r4, #4]
 80017c0:	1a28      	subne	r0, r5, r0
 80017c2:	181b      	addne	r3, r3, r0
 80017c4:	6063      	strne	r3, [r4, #4]
 80017c6:	e7f2      	b.n	80017ae <_read+0x1a>

080017c8 <_swilseek>:
 80017c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80017ca:	460c      	mov	r4, r1
 80017cc:	4616      	mov	r6, r2
 80017ce:	f7ff ff99 	bl	8001704 <findslot>
 80017d2:	4605      	mov	r5, r0
 80017d4:	b940      	cbnz	r0, 80017e8 <_swilseek+0x20>
 80017d6:	f7fe fef1 	bl	80005bc <__errno>
 80017da:	2309      	movs	r3, #9
 80017dc:	6003      	str	r3, [r0, #0]
 80017de:	f04f 34ff 	mov.w	r4, #4294967295
 80017e2:	4620      	mov	r0, r4
 80017e4:	b003      	add	sp, #12
 80017e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017e8:	2e02      	cmp	r6, #2
 80017ea:	d903      	bls.n	80017f4 <_swilseek+0x2c>
 80017ec:	f7fe fee6 	bl	80005bc <__errno>
 80017f0:	2316      	movs	r3, #22
 80017f2:	e7f3      	b.n	80017dc <_swilseek+0x14>
 80017f4:	2e01      	cmp	r6, #1
 80017f6:	d112      	bne.n	800181e <_swilseek+0x56>
 80017f8:	6843      	ldr	r3, [r0, #4]
 80017fa:	18e4      	adds	r4, r4, r3
 80017fc:	d4f6      	bmi.n	80017ec <_swilseek+0x24>
 80017fe:	682b      	ldr	r3, [r5, #0]
 8001800:	260a      	movs	r6, #10
 8001802:	e9cd 3400 	strd	r3, r4, [sp]
 8001806:	466f      	mov	r7, sp
 8001808:	4630      	mov	r0, r6
 800180a:	4639      	mov	r1, r7
 800180c:	beab      	bkpt	0x00ab
 800180e:	4606      	mov	r6, r0
 8001810:	4630      	mov	r0, r6
 8001812:	f7ff ff91 	bl	8001738 <checkerror>
 8001816:	2800      	cmp	r0, #0
 8001818:	dbe1      	blt.n	80017de <_swilseek+0x16>
 800181a:	606c      	str	r4, [r5, #4]
 800181c:	e7e1      	b.n	80017e2 <_swilseek+0x1a>
 800181e:	2e02      	cmp	r6, #2
 8001820:	d1ed      	bne.n	80017fe <_swilseek+0x36>
 8001822:	6803      	ldr	r3, [r0, #0]
 8001824:	9300      	str	r3, [sp, #0]
 8001826:	260c      	movs	r6, #12
 8001828:	466f      	mov	r7, sp
 800182a:	4630      	mov	r0, r6
 800182c:	4639      	mov	r1, r7
 800182e:	beab      	bkpt	0x00ab
 8001830:	4606      	mov	r6, r0
 8001832:	4630      	mov	r0, r6
 8001834:	f7ff ff80 	bl	8001738 <checkerror>
 8001838:	1c43      	adds	r3, r0, #1
 800183a:	d0d0      	beq.n	80017de <_swilseek+0x16>
 800183c:	4404      	add	r4, r0
 800183e:	e7de      	b.n	80017fe <_swilseek+0x36>

08001840 <_lseek>:
 8001840:	f7ff bfc2 	b.w	80017c8 <_swilseek>

08001844 <_swiwrite>:
 8001844:	b530      	push	{r4, r5, lr}
 8001846:	b085      	sub	sp, #20
 8001848:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800184c:	9203      	str	r2, [sp, #12]
 800184e:	2405      	movs	r4, #5
 8001850:	ad01      	add	r5, sp, #4
 8001852:	4620      	mov	r0, r4
 8001854:	4629      	mov	r1, r5
 8001856:	beab      	bkpt	0x00ab
 8001858:	4604      	mov	r4, r0
 800185a:	4620      	mov	r0, r4
 800185c:	f7ff ff6c 	bl	8001738 <checkerror>
 8001860:	b005      	add	sp, #20
 8001862:	bd30      	pop	{r4, r5, pc}

08001864 <_write>:
 8001864:	b570      	push	{r4, r5, r6, lr}
 8001866:	460e      	mov	r6, r1
 8001868:	4615      	mov	r5, r2
 800186a:	f7ff ff4b 	bl	8001704 <findslot>
 800186e:	4604      	mov	r4, r0
 8001870:	b930      	cbnz	r0, 8001880 <_write+0x1c>
 8001872:	f7fe fea3 	bl	80005bc <__errno>
 8001876:	2309      	movs	r3, #9
 8001878:	6003      	str	r3, [r0, #0]
 800187a:	f04f 30ff 	mov.w	r0, #4294967295
 800187e:	bd70      	pop	{r4, r5, r6, pc}
 8001880:	6800      	ldr	r0, [r0, #0]
 8001882:	462a      	mov	r2, r5
 8001884:	4631      	mov	r1, r6
 8001886:	f7ff ffdd 	bl	8001844 <_swiwrite>
 800188a:	1e03      	subs	r3, r0, #0
 800188c:	dbf5      	blt.n	800187a <_write+0x16>
 800188e:	6862      	ldr	r2, [r4, #4]
 8001890:	1ae8      	subs	r0, r5, r3
 8001892:	4402      	add	r2, r0
 8001894:	42ab      	cmp	r3, r5
 8001896:	6062      	str	r2, [r4, #4]
 8001898:	d1f1      	bne.n	800187e <_write+0x1a>
 800189a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800189e:	2000      	movs	r0, #0
 80018a0:	f7ff bf5a 	b.w	8001758 <error>

080018a4 <_swiclose>:
 80018a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80018a6:	2402      	movs	r4, #2
 80018a8:	9001      	str	r0, [sp, #4]
 80018aa:	ad01      	add	r5, sp, #4
 80018ac:	4620      	mov	r0, r4
 80018ae:	4629      	mov	r1, r5
 80018b0:	beab      	bkpt	0x00ab
 80018b2:	4604      	mov	r4, r0
 80018b4:	4620      	mov	r0, r4
 80018b6:	f7ff ff3f 	bl	8001738 <checkerror>
 80018ba:	b003      	add	sp, #12
 80018bc:	bd30      	pop	{r4, r5, pc}
	...

080018c0 <_close>:
 80018c0:	b538      	push	{r3, r4, r5, lr}
 80018c2:	4605      	mov	r5, r0
 80018c4:	f7ff ff1e 	bl	8001704 <findslot>
 80018c8:	4604      	mov	r4, r0
 80018ca:	b930      	cbnz	r0, 80018da <_close+0x1a>
 80018cc:	f7fe fe76 	bl	80005bc <__errno>
 80018d0:	2309      	movs	r3, #9
 80018d2:	6003      	str	r3, [r0, #0]
 80018d4:	f04f 30ff 	mov.w	r0, #4294967295
 80018d8:	bd38      	pop	{r3, r4, r5, pc}
 80018da:	3d01      	subs	r5, #1
 80018dc:	2d01      	cmp	r5, #1
 80018de:	d809      	bhi.n	80018f4 <_close+0x34>
 80018e0:	4b09      	ldr	r3, [pc, #36]	; (8001908 <_close+0x48>)
 80018e2:	689a      	ldr	r2, [r3, #8]
 80018e4:	691b      	ldr	r3, [r3, #16]
 80018e6:	429a      	cmp	r2, r3
 80018e8:	d104      	bne.n	80018f4 <_close+0x34>
 80018ea:	f04f 33ff 	mov.w	r3, #4294967295
 80018ee:	6003      	str	r3, [r0, #0]
 80018f0:	2000      	movs	r0, #0
 80018f2:	e7f1      	b.n	80018d8 <_close+0x18>
 80018f4:	6820      	ldr	r0, [r4, #0]
 80018f6:	f7ff ffd5 	bl	80018a4 <_swiclose>
 80018fa:	2800      	cmp	r0, #0
 80018fc:	d1ec      	bne.n	80018d8 <_close+0x18>
 80018fe:	f04f 33ff 	mov.w	r3, #4294967295
 8001902:	6023      	str	r3, [r4, #0]
 8001904:	e7e8      	b.n	80018d8 <_close+0x18>
 8001906:	bf00      	nop
 8001908:	200000e8 	.word	0x200000e8

0800190c <_getpid>:
 800190c:	2001      	movs	r0, #1
 800190e:	4770      	bx	lr

08001910 <_swistat>:
 8001910:	b570      	push	{r4, r5, r6, lr}
 8001912:	460c      	mov	r4, r1
 8001914:	f7ff fef6 	bl	8001704 <findslot>
 8001918:	4605      	mov	r5, r0
 800191a:	b930      	cbnz	r0, 800192a <_swistat+0x1a>
 800191c:	f7fe fe4e 	bl	80005bc <__errno>
 8001920:	2309      	movs	r3, #9
 8001922:	6003      	str	r3, [r0, #0]
 8001924:	f04f 30ff 	mov.w	r0, #4294967295
 8001928:	bd70      	pop	{r4, r5, r6, pc}
 800192a:	6863      	ldr	r3, [r4, #4]
 800192c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001930:	6063      	str	r3, [r4, #4]
 8001932:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001936:	64a3      	str	r3, [r4, #72]	; 0x48
 8001938:	260c      	movs	r6, #12
 800193a:	4630      	mov	r0, r6
 800193c:	4629      	mov	r1, r5
 800193e:	beab      	bkpt	0x00ab
 8001940:	4605      	mov	r5, r0
 8001942:	4628      	mov	r0, r5
 8001944:	f7ff fef8 	bl	8001738 <checkerror>
 8001948:	1c43      	adds	r3, r0, #1
 800194a:	bf1c      	itt	ne
 800194c:	6120      	strne	r0, [r4, #16]
 800194e:	2000      	movne	r0, #0
 8001950:	e7ea      	b.n	8001928 <_swistat+0x18>

08001952 <_fstat>:
 8001952:	460b      	mov	r3, r1
 8001954:	b510      	push	{r4, lr}
 8001956:	2100      	movs	r1, #0
 8001958:	4604      	mov	r4, r0
 800195a:	2258      	movs	r2, #88	; 0x58
 800195c:	4618      	mov	r0, r3
 800195e:	f7fe fe57 	bl	8000610 <memset>
 8001962:	4601      	mov	r1, r0
 8001964:	4620      	mov	r0, r4
 8001966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800196a:	f7ff bfd1 	b.w	8001910 <_swistat>

0800196e <_stat>:
 800196e:	b538      	push	{r3, r4, r5, lr}
 8001970:	460d      	mov	r5, r1
 8001972:	4604      	mov	r4, r0
 8001974:	2258      	movs	r2, #88	; 0x58
 8001976:	2100      	movs	r1, #0
 8001978:	4628      	mov	r0, r5
 800197a:	f7fe fe49 	bl	8000610 <memset>
 800197e:	4620      	mov	r0, r4
 8001980:	2100      	movs	r1, #0
 8001982:	f000 f811 	bl	80019a8 <_swiopen>
 8001986:	1c43      	adds	r3, r0, #1
 8001988:	4604      	mov	r4, r0
 800198a:	d00b      	beq.n	80019a4 <_stat+0x36>
 800198c:	686b      	ldr	r3, [r5, #4]
 800198e:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8001992:	606b      	str	r3, [r5, #4]
 8001994:	4629      	mov	r1, r5
 8001996:	f7ff ffbb 	bl	8001910 <_swistat>
 800199a:	4605      	mov	r5, r0
 800199c:	4620      	mov	r0, r4
 800199e:	f7ff ff8f 	bl	80018c0 <_close>
 80019a2:	462c      	mov	r4, r5
 80019a4:	4620      	mov	r0, r4
 80019a6:	bd38      	pop	{r3, r4, r5, pc}

080019a8 <_swiopen>:
 80019a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80019ac:	4b2a      	ldr	r3, [pc, #168]	; (8001a58 <_swiopen+0xb0>)
 80019ae:	b097      	sub	sp, #92	; 0x5c
 80019b0:	4681      	mov	r9, r0
 80019b2:	460f      	mov	r7, r1
 80019b4:	2500      	movs	r5, #0
 80019b6:	461e      	mov	r6, r3
 80019b8:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 80019bc:	1c61      	adds	r1, r4, #1
 80019be:	d037      	beq.n	8001a30 <_swiopen+0x88>
 80019c0:	3501      	adds	r5, #1
 80019c2:	2d14      	cmp	r5, #20
 80019c4:	d1f8      	bne.n	80019b8 <_swiopen+0x10>
 80019c6:	f7fe fdf9 	bl	80005bc <__errno>
 80019ca:	2318      	movs	r3, #24
 80019cc:	6003      	str	r3, [r0, #0]
 80019ce:	f04f 34ff 	mov.w	r4, #4294967295
 80019d2:	e03d      	b.n	8001a50 <_swiopen+0xa8>
 80019d4:	f3c7 4400 	ubfx	r4, r7, #16, #1
 80019d8:	f240 6301 	movw	r3, #1537	; 0x601
 80019dc:	07ba      	lsls	r2, r7, #30
 80019de:	bf48      	it	mi
 80019e0:	f044 0402 	orrmi.w	r4, r4, #2
 80019e4:	421f      	tst	r7, r3
 80019e6:	bf18      	it	ne
 80019e8:	f044 0404 	orrne.w	r4, r4, #4
 80019ec:	073b      	lsls	r3, r7, #28
 80019ee:	bf48      	it	mi
 80019f0:	f024 0404 	bicmi.w	r4, r4, #4
 80019f4:	4648      	mov	r0, r9
 80019f6:	bf48      	it	mi
 80019f8:	f044 0408 	orrmi.w	r4, r4, #8
 80019fc:	f8cd 9000 	str.w	r9, [sp]
 8001a00:	f7fe fc46 	bl	8000290 <strlen>
 8001a04:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8001a08:	2401      	movs	r4, #1
 8001a0a:	4620      	mov	r0, r4
 8001a0c:	4641      	mov	r1, r8
 8001a0e:	beab      	bkpt	0x00ab
 8001a10:	4604      	mov	r4, r0
 8001a12:	2c00      	cmp	r4, #0
 8001a14:	db07      	blt.n	8001a26 <_swiopen+0x7e>
 8001a16:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 8001a1a:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8001a1e:	2300      	movs	r3, #0
 8001a20:	6073      	str	r3, [r6, #4]
 8001a22:	462c      	mov	r4, r5
 8001a24:	e014      	b.n	8001a50 <_swiopen+0xa8>
 8001a26:	4620      	mov	r0, r4
 8001a28:	f7ff fe96 	bl	8001758 <error>
 8001a2c:	4604      	mov	r4, r0
 8001a2e:	e00f      	b.n	8001a50 <_swiopen+0xa8>
 8001a30:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 8001a34:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8001a38:	46e8      	mov	r8, sp
 8001a3a:	d1cb      	bne.n	80019d4 <_swiopen+0x2c>
 8001a3c:	4641      	mov	r1, r8
 8001a3e:	4648      	mov	r0, r9
 8001a40:	f7ff ff95 	bl	800196e <_stat>
 8001a44:	3001      	adds	r0, #1
 8001a46:	d0c5      	beq.n	80019d4 <_swiopen+0x2c>
 8001a48:	f7fe fdb8 	bl	80005bc <__errno>
 8001a4c:	2311      	movs	r3, #17
 8001a4e:	6003      	str	r3, [r0, #0]
 8001a50:	4620      	mov	r0, r4
 8001a52:	b017      	add	sp, #92	; 0x5c
 8001a54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a58:	200000e8 	.word	0x200000e8

08001a5c <_get_semihosting_exts>:
 8001a5c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001a60:	4606      	mov	r6, r0
 8001a62:	460f      	mov	r7, r1
 8001a64:	482a      	ldr	r0, [pc, #168]	; (8001b10 <_get_semihosting_exts+0xb4>)
 8001a66:	2100      	movs	r1, #0
 8001a68:	4615      	mov	r5, r2
 8001a6a:	f7ff ff9d 	bl	80019a8 <_swiopen>
 8001a6e:	462a      	mov	r2, r5
 8001a70:	4604      	mov	r4, r0
 8001a72:	2100      	movs	r1, #0
 8001a74:	4630      	mov	r0, r6
 8001a76:	f7fe fdcb 	bl	8000610 <memset>
 8001a7a:	1c63      	adds	r3, r4, #1
 8001a7c:	d016      	beq.n	8001aac <_get_semihosting_exts+0x50>
 8001a7e:	4620      	mov	r0, r4
 8001a80:	f7ff fe40 	bl	8001704 <findslot>
 8001a84:	f04f 080c 	mov.w	r8, #12
 8001a88:	4681      	mov	r9, r0
 8001a8a:	4640      	mov	r0, r8
 8001a8c:	4649      	mov	r1, r9
 8001a8e:	beab      	bkpt	0x00ab
 8001a90:	4680      	mov	r8, r0
 8001a92:	4640      	mov	r0, r8
 8001a94:	f7ff fe50 	bl	8001738 <checkerror>
 8001a98:	2803      	cmp	r0, #3
 8001a9a:	dd02      	ble.n	8001aa2 <_get_semihosting_exts+0x46>
 8001a9c:	1ec3      	subs	r3, r0, #3
 8001a9e:	42ab      	cmp	r3, r5
 8001aa0:	dc08      	bgt.n	8001ab4 <_get_semihosting_exts+0x58>
 8001aa2:	4620      	mov	r0, r4
 8001aa4:	f7ff ff0c 	bl	80018c0 <_close>
 8001aa8:	f04f 34ff 	mov.w	r4, #4294967295
 8001aac:	4620      	mov	r0, r4
 8001aae:	b003      	add	sp, #12
 8001ab0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ab4:	2204      	movs	r2, #4
 8001ab6:	eb0d 0102 	add.w	r1, sp, r2
 8001aba:	4620      	mov	r0, r4
 8001abc:	f7ff fe6a 	bl	8001794 <_read>
 8001ac0:	2803      	cmp	r0, #3
 8001ac2:	ddee      	ble.n	8001aa2 <_get_semihosting_exts+0x46>
 8001ac4:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001ac8:	2b53      	cmp	r3, #83	; 0x53
 8001aca:	d1ea      	bne.n	8001aa2 <_get_semihosting_exts+0x46>
 8001acc:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001ad0:	2b48      	cmp	r3, #72	; 0x48
 8001ad2:	d1e6      	bne.n	8001aa2 <_get_semihosting_exts+0x46>
 8001ad4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001ad8:	2b46      	cmp	r3, #70	; 0x46
 8001ada:	d1e2      	bne.n	8001aa2 <_get_semihosting_exts+0x46>
 8001adc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001ae0:	2b42      	cmp	r3, #66	; 0x42
 8001ae2:	d1de      	bne.n	8001aa2 <_get_semihosting_exts+0x46>
 8001ae4:	2201      	movs	r2, #1
 8001ae6:	4639      	mov	r1, r7
 8001ae8:	4620      	mov	r0, r4
 8001aea:	f7ff fe6d 	bl	80017c8 <_swilseek>
 8001aee:	2800      	cmp	r0, #0
 8001af0:	dbd7      	blt.n	8001aa2 <_get_semihosting_exts+0x46>
 8001af2:	462a      	mov	r2, r5
 8001af4:	4631      	mov	r1, r6
 8001af6:	4620      	mov	r0, r4
 8001af8:	f7ff fe4c 	bl	8001794 <_read>
 8001afc:	4605      	mov	r5, r0
 8001afe:	4620      	mov	r0, r4
 8001b00:	f7ff fede 	bl	80018c0 <_close>
 8001b04:	4628      	mov	r0, r5
 8001b06:	f7ff fe17 	bl	8001738 <checkerror>
 8001b0a:	4604      	mov	r4, r0
 8001b0c:	e7ce      	b.n	8001aac <_get_semihosting_exts+0x50>
 8001b0e:	bf00      	nop
 8001b10:	08001e7f 	.word	0x08001e7f

08001b14 <initialise_semihosting_exts>:
 8001b14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001b16:	4d0a      	ldr	r5, [pc, #40]	; (8001b40 <initialise_semihosting_exts+0x2c>)
 8001b18:	4c0a      	ldr	r4, [pc, #40]	; (8001b44 <initialise_semihosting_exts+0x30>)
 8001b1a:	2100      	movs	r1, #0
 8001b1c:	2201      	movs	r2, #1
 8001b1e:	a801      	add	r0, sp, #4
 8001b20:	6029      	str	r1, [r5, #0]
 8001b22:	6022      	str	r2, [r4, #0]
 8001b24:	f7ff ff9a 	bl	8001a5c <_get_semihosting_exts>
 8001b28:	2800      	cmp	r0, #0
 8001b2a:	dd07      	ble.n	8001b3c <initialise_semihosting_exts+0x28>
 8001b2c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001b30:	f003 0201 	and.w	r2, r3, #1
 8001b34:	f003 0302 	and.w	r3, r3, #2
 8001b38:	602a      	str	r2, [r5, #0]
 8001b3a:	6023      	str	r3, [r4, #0]
 8001b3c:	b003      	add	sp, #12
 8001b3e:	bd30      	pop	{r4, r5, pc}
 8001b40:	200000ac 	.word	0x200000ac
 8001b44:	200000b0 	.word	0x200000b0

08001b48 <_has_ext_exit_extended>:
 8001b48:	b510      	push	{r4, lr}
 8001b4a:	4c04      	ldr	r4, [pc, #16]	; (8001b5c <_has_ext_exit_extended+0x14>)
 8001b4c:	6822      	ldr	r2, [r4, #0]
 8001b4e:	2a00      	cmp	r2, #0
 8001b50:	da01      	bge.n	8001b56 <_has_ext_exit_extended+0xe>
 8001b52:	f7ff ffdf 	bl	8001b14 <initialise_semihosting_exts>
 8001b56:	6820      	ldr	r0, [r4, #0]
 8001b58:	bd10      	pop	{r4, pc}
 8001b5a:	bf00      	nop
 8001b5c:	200000ac 	.word	0x200000ac

08001b60 <_has_ext_stdout_stderr>:
 8001b60:	b510      	push	{r4, lr}
 8001b62:	4c04      	ldr	r4, [pc, #16]	; (8001b74 <_has_ext_stdout_stderr+0x14>)
 8001b64:	6822      	ldr	r2, [r4, #0]
 8001b66:	2a00      	cmp	r2, #0
 8001b68:	da01      	bge.n	8001b6e <_has_ext_stdout_stderr+0xe>
 8001b6a:	f7ff ffd3 	bl	8001b14 <initialise_semihosting_exts>
 8001b6e:	6820      	ldr	r0, [r4, #0]
 8001b70:	bd10      	pop	{r4, pc}
 8001b72:	bf00      	nop
 8001b74:	200000b0 	.word	0x200000b0

08001b78 <initialise_monitor_handles>:
 8001b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b7c:	b085      	sub	sp, #20
 8001b7e:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8001c30 <initialise_monitor_handles+0xb8>
 8001b82:	f8cd 9004 	str.w	r9, [sp, #4]
 8001b86:	2303      	movs	r3, #3
 8001b88:	2400      	movs	r4, #0
 8001b8a:	9303      	str	r3, [sp, #12]
 8001b8c:	f10d 0804 	add.w	r8, sp, #4
 8001b90:	9402      	str	r4, [sp, #8]
 8001b92:	2501      	movs	r5, #1
 8001b94:	4628      	mov	r0, r5
 8001b96:	4641      	mov	r1, r8
 8001b98:	beab      	bkpt	0x00ab
 8001b9a:	4605      	mov	r5, r0
 8001b9c:	4e20      	ldr	r6, [pc, #128]	; (8001c20 <initialise_monitor_handles+0xa8>)
 8001b9e:	4a21      	ldr	r2, [pc, #132]	; (8001c24 <initialise_monitor_handles+0xac>)
 8001ba0:	6035      	str	r5, [r6, #0]
 8001ba2:	4623      	mov	r3, r4
 8001ba4:	f04f 31ff 	mov.w	r1, #4294967295
 8001ba8:	4614      	mov	r4, r2
 8001baa:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8001bae:	3301      	adds	r3, #1
 8001bb0:	2b14      	cmp	r3, #20
 8001bb2:	d1fa      	bne.n	8001baa <initialise_monitor_handles+0x32>
 8001bb4:	f7ff ffd4 	bl	8001b60 <_has_ext_stdout_stderr>
 8001bb8:	4d1b      	ldr	r5, [pc, #108]	; (8001c28 <initialise_monitor_handles+0xb0>)
 8001bba:	b1d0      	cbz	r0, 8001bf2 <initialise_monitor_handles+0x7a>
 8001bbc:	f04f 0a03 	mov.w	sl, #3
 8001bc0:	2304      	movs	r3, #4
 8001bc2:	f8cd 9004 	str.w	r9, [sp, #4]
 8001bc6:	2701      	movs	r7, #1
 8001bc8:	f8cd a00c 	str.w	sl, [sp, #12]
 8001bcc:	9302      	str	r3, [sp, #8]
 8001bce:	4638      	mov	r0, r7
 8001bd0:	4641      	mov	r1, r8
 8001bd2:	beab      	bkpt	0x00ab
 8001bd4:	4683      	mov	fp, r0
 8001bd6:	4b15      	ldr	r3, [pc, #84]	; (8001c2c <initialise_monitor_handles+0xb4>)
 8001bd8:	f8cd 9004 	str.w	r9, [sp, #4]
 8001bdc:	f8c3 b000 	str.w	fp, [r3]
 8001be0:	2308      	movs	r3, #8
 8001be2:	f8cd a00c 	str.w	sl, [sp, #12]
 8001be6:	9302      	str	r3, [sp, #8]
 8001be8:	4638      	mov	r0, r7
 8001bea:	4641      	mov	r1, r8
 8001bec:	beab      	bkpt	0x00ab
 8001bee:	4607      	mov	r7, r0
 8001bf0:	602f      	str	r7, [r5, #0]
 8001bf2:	682b      	ldr	r3, [r5, #0]
 8001bf4:	3301      	adds	r3, #1
 8001bf6:	bf02      	ittt	eq
 8001bf8:	4b0c      	ldreq	r3, [pc, #48]	; (8001c2c <initialise_monitor_handles+0xb4>)
 8001bfa:	681b      	ldreq	r3, [r3, #0]
 8001bfc:	602b      	streq	r3, [r5, #0]
 8001bfe:	6833      	ldr	r3, [r6, #0]
 8001c00:	6023      	str	r3, [r4, #0]
 8001c02:	2600      	movs	r6, #0
 8001c04:	6066      	str	r6, [r4, #4]
 8001c06:	f7ff ffab 	bl	8001b60 <_has_ext_stdout_stderr>
 8001c0a:	b130      	cbz	r0, 8001c1a <initialise_monitor_handles+0xa2>
 8001c0c:	4b07      	ldr	r3, [pc, #28]	; (8001c2c <initialise_monitor_handles+0xb4>)
 8001c0e:	681b      	ldr	r3, [r3, #0]
 8001c10:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001c14:	682b      	ldr	r3, [r5, #0]
 8001c16:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8001c1a:	b005      	add	sp, #20
 8001c1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001c20:	200000e0 	.word	0x200000e0
 8001c24:	200000e8 	.word	0x200000e8
 8001c28:	200000dc 	.word	0x200000dc
 8001c2c:	200000e4 	.word	0x200000e4
 8001c30:	08001e95 	.word	0x08001e95

08001c34 <_isatty>:
 8001c34:	b570      	push	{r4, r5, r6, lr}
 8001c36:	f7ff fd65 	bl	8001704 <findslot>
 8001c3a:	2509      	movs	r5, #9
 8001c3c:	4604      	mov	r4, r0
 8001c3e:	b920      	cbnz	r0, 8001c4a <_isatty+0x16>
 8001c40:	f7fe fcbc 	bl	80005bc <__errno>
 8001c44:	6005      	str	r5, [r0, #0]
 8001c46:	4620      	mov	r0, r4
 8001c48:	bd70      	pop	{r4, r5, r6, pc}
 8001c4a:	4628      	mov	r0, r5
 8001c4c:	4621      	mov	r1, r4
 8001c4e:	beab      	bkpt	0x00ab
 8001c50:	4604      	mov	r4, r0
 8001c52:	2c01      	cmp	r4, #1
 8001c54:	d0f7      	beq.n	8001c46 <_isatty+0x12>
 8001c56:	f7fe fcb1 	bl	80005bc <__errno>
 8001c5a:	2400      	movs	r4, #0
 8001c5c:	4605      	mov	r5, r0
 8001c5e:	2613      	movs	r6, #19
 8001c60:	4630      	mov	r0, r6
 8001c62:	4621      	mov	r1, r4
 8001c64:	beab      	bkpt	0x00ab
 8001c66:	4606      	mov	r6, r0
 8001c68:	602e      	str	r6, [r5, #0]
 8001c6a:	e7ec      	b.n	8001c46 <_isatty+0x12>

08001c6c <_exit>:
 8001c6c:	4601      	mov	r1, r0
 8001c6e:	b508      	push	{r3, lr}
 8001c70:	4a02      	ldr	r2, [pc, #8]	; (8001c7c <_exit+0x10>)
 8001c72:	f04f 30ff 	mov.w	r0, #4294967295
 8001c76:	f000 f803 	bl	8001c80 <_kill_shared>
 8001c7a:	bf00      	nop
 8001c7c:	00020026 	.word	0x00020026

08001c80 <_kill_shared>:
 8001c80:	b507      	push	{r0, r1, r2, lr}
 8001c82:	e9cd 2100 	strd	r2, r1, [sp]
 8001c86:	f7ff ff5f 	bl	8001b48 <_has_ext_exit_extended>
 8001c8a:	2800      	cmp	r0, #0
 8001c8c:	bf14      	ite	ne
 8001c8e:	2420      	movne	r4, #32
 8001c90:	2418      	moveq	r4, #24
 8001c92:	f7ff ff59 	bl	8001b48 <_has_ext_exit_extended>
 8001c96:	b120      	cbz	r0, 8001ca2 <_kill_shared+0x22>
 8001c98:	466d      	mov	r5, sp
 8001c9a:	4620      	mov	r0, r4
 8001c9c:	4629      	mov	r1, r5
 8001c9e:	beab      	bkpt	0x00ab
 8001ca0:	4604      	mov	r4, r0
 8001ca2:	9d00      	ldr	r5, [sp, #0]
 8001ca4:	e7f9      	b.n	8001c9a <_kill_shared+0x1a>
	...

08001ca8 <_kill>:
 8001ca8:	2906      	cmp	r1, #6
 8001caa:	b508      	push	{r3, lr}
 8001cac:	bf0c      	ite	eq
 8001cae:	4a02      	ldreq	r2, [pc, #8]	; (8001cb8 <_kill+0x10>)
 8001cb0:	4a02      	ldrne	r2, [pc, #8]	; (8001cbc <_kill+0x14>)
 8001cb2:	f7ff ffe5 	bl	8001c80 <_kill_shared>
 8001cb6:	bf00      	nop
 8001cb8:	00020023 	.word	0x00020023
 8001cbc:	00020026 	.word	0x00020026

08001cc0 <_init>:
 8001cc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cc2:	bf00      	nop
 8001cc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001cc6:	bc08      	pop	{r3}
 8001cc8:	469e      	mov	lr, r3
 8001cca:	4770      	bx	lr

08001ccc <_fini>:
 8001ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cce:	bf00      	nop
 8001cd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001cd2:	bc08      	pop	{r3}
 8001cd4:	469e      	mov	lr, r3
 8001cd6:	4770      	bx	lr
